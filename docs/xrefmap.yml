### YamlMime:XRefMap
sorted: true
references:
- uid: Open.Database.Extensions
  name: Open.Database.Extensions
  href: api/Open.Database.Extensions.html
  commentId: N:Open.Database.Extensions
  fullName: Open.Database.Extensions
  nameWithType: Open.Database.Extensions
- uid: Open.Database.Extensions.DbConnectionFactory
  name: DbConnectionFactory
  href: api/Open.Database.Extensions.DbConnectionFactory.html
  commentId: T:Open.Database.Extensions.DbConnectionFactory
  fullName: Open.Database.Extensions.DbConnectionFactory
  nameWithType: DbConnectionFactory
- uid: Open.Database.Extensions.DbConnectionFactory.#ctor(System.Func{System.Data.Common.DbConnection})
  name: DbConnectionFactory(Func<DbConnection>)
  href: api/Open.Database.Extensions.DbConnectionFactory.html#Open_Database_Extensions_DbConnectionFactory__ctor_System_Func_System_Data_Common_DbConnection__
  commentId: M:Open.Database.Extensions.DbConnectionFactory.#ctor(System.Func{System.Data.Common.DbConnection})
  name.vb: DbConnectionFactory(Func(Of DbConnection))
  fullName: Open.Database.Extensions.DbConnectionFactory.DbConnectionFactory(System.Func<System.Data.Common.DbConnection>)
  fullName.vb: Open.Database.Extensions.DbConnectionFactory.DbConnectionFactory(System.Func(Of System.Data.Common.DbConnection))
  nameWithType: DbConnectionFactory.DbConnectionFactory(Func<DbConnection>)
  nameWithType.vb: DbConnectionFactory.DbConnectionFactory(Func(Of DbConnection))
- uid: Open.Database.Extensions.DbConnectionFactory.#ctor*
  name: DbConnectionFactory
  href: api/Open.Database.Extensions.DbConnectionFactory.html#Open_Database_Extensions_DbConnectionFactory__ctor_
  commentId: Overload:Open.Database.Extensions.DbConnectionFactory.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.DbConnectionFactory.DbConnectionFactory
  nameWithType: DbConnectionFactory.DbConnectionFactory
- uid: Open.Database.Extensions.DbConnectionFactory`1
  name: DbConnectionFactory<TConnection>
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html
  commentId: T:Open.Database.Extensions.DbConnectionFactory`1
  name.vb: DbConnectionFactory(Of TConnection)
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection)
  nameWithType: DbConnectionFactory<TConnection>
  nameWithType.vb: DbConnectionFactory(Of TConnection)
- uid: Open.Database.Extensions.DbConnectionFactory`1.#ctor(System.Func{`0})
  name: DbConnectionFactory(Func<TConnection>)
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1__ctor_System_Func__0__
  commentId: M:Open.Database.Extensions.DbConnectionFactory`1.#ctor(System.Func{`0})
  name.vb: DbConnectionFactory(Func(Of TConnection))
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.DbConnectionFactory(System.Func<TConnection>)
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).DbConnectionFactory(System.Func(Of TConnection))
  nameWithType: DbConnectionFactory<TConnection>.DbConnectionFactory(Func<TConnection>)
  nameWithType.vb: DbConnectionFactory(Of TConnection).DbConnectionFactory(Func(Of TConnection))
- uid: Open.Database.Extensions.DbConnectionFactory`1.#ctor*
  name: DbConnectionFactory
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1__ctor_
  commentId: Overload:Open.Database.Extensions.DbConnectionFactory`1.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.DbConnectionFactory
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).DbConnectionFactory
  nameWithType: DbConnectionFactory<TConnection>.DbConnectionFactory
  nameWithType.vb: DbConnectionFactory(Of TConnection).DbConnectionFactory
- uid: Open.Database.Extensions.DbConnectionFactory`1.Create
  name: Create()
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1_Create
  commentId: M:Open.Database.Extensions.DbConnectionFactory`1.Create
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.Create()
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).Create()
  nameWithType: DbConnectionFactory<TConnection>.Create()
  nameWithType.vb: DbConnectionFactory(Of TConnection).Create()
- uid: Open.Database.Extensions.DbConnectionFactory`1.Create*
  name: Create
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1_Create_
  commentId: Overload:Open.Database.Extensions.DbConnectionFactory`1.Create
  isSpec: "True"
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.Create
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).Create
  nameWithType: DbConnectionFactory<TConnection>.Create
  nameWithType.vb: DbConnectionFactory(Of TConnection).Create
- uid: Open.Database.Extensions.DbConnectionFactory`1.Open#Database#Extensions#IDbConnectionFactory#Create
  name: IDbConnectionFactory.Create()
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1_Open_Database_Extensions_IDbConnectionFactory_Create
  commentId: M:Open.Database.Extensions.DbConnectionFactory`1.Open#Database#Extensions#IDbConnectionFactory#Create
  name.vb: Open.Database.Extensions.IDbConnectionFactory.Create()
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.Open.Database.Extensions.IDbConnectionFactory.Create()
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).Open.Database.Extensions.IDbConnectionFactory.Create()
  nameWithType: DbConnectionFactory<TConnection>.IDbConnectionFactory.Create()
  nameWithType.vb: DbConnectionFactory(Of TConnection).Open.Database.Extensions.IDbConnectionFactory.Create()
- uid: Open.Database.Extensions.DbConnectionFactory`1.Open#Database#Extensions#IDbConnectionFactory#Create*
  name: IDbConnectionFactory.Create
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1_Open_Database_Extensions_IDbConnectionFactory_Create_
  commentId: Overload:Open.Database.Extensions.DbConnectionFactory`1.Open#Database#Extensions#IDbConnectionFactory#Create
  isSpec: "True"
  name.vb: Open.Database.Extensions.IDbConnectionFactory.Create
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.Open.Database.Extensions.IDbConnectionFactory.Create
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).Open.Database.Extensions.IDbConnectionFactory.Create
  nameWithType: DbConnectionFactory<TConnection>.IDbConnectionFactory.Create
  nameWithType.vb: DbConnectionFactory(Of TConnection).Open.Database.Extensions.IDbConnectionFactory.Create
- uid: Open.Database.Extensions.ExpressiveCommandBase`4
  name: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html
  commentId: T:Open.Database.Extensions.ExpressiveCommandBase`4
  name.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.#ctor(`0,System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param})
  name: ExpressiveCommandBase(TConnection, CommandType, String, List<ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4__ctor__0_System_Data_CommandType_System_String_System_Collections_Generic_List_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.#ctor(`0,System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param})
  name.vb: ExpressiveCommandBase(TConnection, CommandType, String, List(Of ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveCommandBase(TConnection, System.Data.CommandType, System.String, System.Collections.Generic.List<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveCommandBase(TConnection, System.Data.CommandType, System.String, System.Collections.Generic.List(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveCommandBase(TConnection, CommandType, String, List<ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveCommandBase(TConnection, CommandType, String, List(Of ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.#ctor(Open.Database.Extensions.IDbConnectionFactory{`0},System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param})
  name: ExpressiveCommandBase(IDbConnectionFactory<TConnection>, CommandType, String, List<ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4__ctor_Open_Database_Extensions_IDbConnectionFactory__0__System_Data_CommandType_System_String_System_Collections_Generic_List_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.#ctor(Open.Database.Extensions.IDbConnectionFactory{`0},System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param})
  name.vb: ExpressiveCommandBase(IDbConnectionFactory(Of TConnection), CommandType, String, List(Of ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveCommandBase(Open.Database.Extensions.IDbConnectionFactory<TConnection>, System.Data.CommandType, System.String, System.Collections.Generic.List<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveCommandBase(Open.Database.Extensions.IDbConnectionFactory(Of TConnection), System.Data.CommandType, System.String, System.Collections.Generic.List(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveCommandBase(IDbConnectionFactory<TConnection>, CommandType, String, List<ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveCommandBase(IDbConnectionFactory(Of TConnection), CommandType, String, List(Of ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.#ctor*
  name: ExpressiveCommandBase
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4__ctor_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveCommandBase
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveCommandBase
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveCommandBase
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveCommandBase
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParam(System.String)
  name: AddParam(String)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParam_System_String_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AddParam(System.String)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam(System.String)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam(System.String)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam(String)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam(String)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParam(System.String,System.Object)
  name: AddParam(String, Object)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParam_System_String_System_Object_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AddParam(System.String,System.Object)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam(System.String, System.Object)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam(System.String, System.Object)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam(String, Object)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam(String, Object)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParam(System.String,System.Object,`2)
  name: AddParam(String, Object, TDbType)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParam_System_String_System_Object__2_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AddParam(System.String,System.Object,`2)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam(System.String, System.Object, TDbType)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam(System.String, System.Object, TDbType)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam(String, Object, TDbType)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam(String, Object, TDbType)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParam*
  name: AddParam
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParam_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.AddParam
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParam``1(System.String,System.Nullable{``0})
  name: AddParam<T>(String, Nullable<T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParam__1_System_String_System_Nullable___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AddParam``1(System.String,System.Nullable{``0})
  name.vb: AddParam(Of T)(String, Nullable(Of T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam<T>(System.String, System.Nullable<T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam(Of T)(System.String, System.Nullable(Of T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam<T>(String, Nullable<T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam(Of T)(String, Nullable(Of T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParam``1(System.String,System.Nullable{``0},`2)
  name: AddParam<T>(String, Nullable<T>, TDbType)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParam__1_System_String_System_Nullable___0___2_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AddParam``1(System.String,System.Nullable{``0},`2)
  name.vb: AddParam(Of T)(String, Nullable(Of T), TDbType)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam<T>(System.String, System.Nullable<T>, TDbType)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam(Of T)(System.String, System.Nullable(Of T), TDbType)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParam<T>(String, Nullable<T>, TDbType)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParam(Of T)(String, Nullable(Of T), TDbType)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf(System.Boolean,System.String)
  name: AddParamIf(Boolean, String)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParamIf_System_Boolean_System_String_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf(System.Boolean,System.String)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf(System.Boolean, System.String)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf(System.Boolean, System.String)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf(Boolean, String)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf(Boolean, String)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf(System.Boolean,System.String,System.Object)
  name: AddParamIf(Boolean, String, Object)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParamIf_System_Boolean_System_String_System_Object_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf(System.Boolean,System.String,System.Object)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf(System.Boolean, System.String, System.Object)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf(System.Boolean, System.String, System.Object)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf(Boolean, String, Object)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf(Boolean, String, Object)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf(System.Boolean,System.String,System.Object,`2)
  name: AddParamIf(Boolean, String, Object, TDbType)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParamIf_System_Boolean_System_String_System_Object__2_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf(System.Boolean,System.String,System.Object,`2)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf(System.Boolean, System.String, System.Object, TDbType)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf(System.Boolean, System.String, System.Object, TDbType)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf(Boolean, String, Object, TDbType)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf(Boolean, String, Object, TDbType)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf*
  name: AddParamIf
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParamIf_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf``1(System.Boolean,System.String,System.Nullable{``0})
  name: AddParamIf<T>(Boolean, String, Nullable<T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParamIf__1_System_Boolean_System_String_System_Nullable___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf``1(System.Boolean,System.String,System.Nullable{``0})
  name.vb: AddParamIf(Of T)(Boolean, String, Nullable(Of T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf<T>(System.Boolean, System.String, System.Nullable<T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf(Of T)(System.Boolean, System.String, System.Nullable(Of T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf<T>(Boolean, String, Nullable<T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf(Of T)(Boolean, String, Nullable(Of T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf``1(System.Boolean,System.String,System.Nullable{``0},`2)
  name: AddParamIf<T>(Boolean, String, Nullable<T>, TDbType)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParamIf__1_System_Boolean_System_String_System_Nullable___0___2_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AddParamIf``1(System.Boolean,System.String,System.Nullable{``0},`2)
  name.vb: AddParamIf(Of T)(Boolean, String, Nullable(Of T), TDbType)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf<T>(System.Boolean, System.String, System.Nullable<T>, TDbType)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf(Of T)(System.Boolean, System.String, System.Nullable(Of T), TDbType)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParamIf<T>(Boolean, String, Nullable<T>, TDbType)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParamIf(Of T)(Boolean, String, Nullable(Of T), TDbType)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParams(`1)
  name: AddParams(TCommand)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParams__1_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AddParams(`1)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParams(TCommand)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParams(TCommand)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParams(TCommand)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParams(TCommand)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AddParams*
  name: AddParams
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AddParams_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.AddParams
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParams
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParams
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AddParams
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AddParams
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AsSourceBlock*
  name: AsSourceBlock
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AsSourceBlock_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.AsSourceBlock
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlock
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlock
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlock
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlock
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AsSourceBlock``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean)
  name: AsSourceBlock<T>(IEnumerable<KeyValuePair<String, String>>, Boolean)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AsSourceBlock__1_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___System_Boolean_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AsSourceBlock``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean)
  name.vb: AsSourceBlock(Of T)(IEnumerable(Of KeyValuePair(Of String, String)), Boolean)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlock<T>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Boolean)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlock(Of T)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Boolean)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlock<T>(IEnumerable<KeyValuePair<String, String>>, Boolean)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlock(Of T)(IEnumerable(Of KeyValuePair(Of String, String)), Boolean)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AsSourceBlock``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Boolean)
  name: AsSourceBlock<T>(IEnumerable<>, Boolean)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AsSourceBlock__1_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___System_Boolean_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AsSourceBlock``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Boolean)
  name.vb: AsSourceBlock(Of T)(IEnumerable(Of ), Boolean)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlock<T>(System.Collections.Generic.IEnumerable<System.>, System.Boolean)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlock(Of T)(System.Collections.Generic.IEnumerable(Of System.), System.Boolean)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlock<T>(IEnumerable<>, Boolean)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlock(Of T)(IEnumerable(Of ), Boolean)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AsSourceBlock``1(System.Func{System.Data.IDataRecord,``0},System.Boolean)
  name: AsSourceBlock<T>(Func<IDataRecord, T>, Boolean)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AsSourceBlock__1_System_Func_System_Data_IDataRecord___0__System_Boolean_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AsSourceBlock``1(System.Func{System.Data.IDataRecord,``0},System.Boolean)
  name.vb: AsSourceBlock(Of T)(Func(Of IDataRecord, T), Boolean)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlock<T>(System.Func<System.Data.IDataRecord, T>, System.Boolean)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlock(Of T)(System.Func(Of System.Data.IDataRecord, T), System.Boolean)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlock<T>(Func<IDataRecord, T>, Boolean)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlock(Of T)(Func(Of IDataRecord, T), Boolean)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.AsSourceBlock``1(System.ValueTuple{System.String,System.String}[])
  name: AsSourceBlock<T>([])
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_AsSourceBlock__1_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.AsSourceBlock``1(System.ValueTuple{System.String,System.String}[])
  name.vb: AsSourceBlock(Of T)(())
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlock<T>(System.[])
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlock(Of T)(System.())
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlock<T>([])
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlock(Of T)(())
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Command
  name: Command
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Command
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`4.Command
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Command
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Command
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Command
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Command
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Command*
  name: Command
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Command_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Command
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Command
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Command
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Command
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Command
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Connection
  name: Connection
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Connection
  commentId: F:Open.Database.Extensions.ExpressiveCommandBase`4.Connection
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Connection
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Connection
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Connection
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Connection
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ConnectionFactory
  name: ConnectionFactory
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ConnectionFactory
  commentId: F:Open.Database.Extensions.ExpressiveCommandBase`4.ConnectionFactory
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ConnectionFactory
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ConnectionFactory
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ConnectionFactory
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ConnectionFactory
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Execute(System.Action{`1})
  name: Execute(Action<TCommand>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Execute_System_Action__1__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Execute(System.Action{`1})
  name.vb: Execute(Action(Of TCommand))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Execute(System.Action<TCommand>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Execute(System.Action(Of TCommand))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Execute(Action<TCommand>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Execute(Action(Of TCommand))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Execute*
  name: Execute
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Execute_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Execute
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Execute
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Execute
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Execute
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Execute
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Execute``1(System.Func{`1,``0})
  name: Execute<T>(Func<TCommand, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Execute__1_System_Func__1___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Execute``1(System.Func{`1,``0})
  name.vb: Execute(Of T)(Func(Of TCommand, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Execute<T>(System.Func<TCommand, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Execute(Of T)(System.Func(Of TCommand, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Execute<T>(Func<TCommand, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Execute(Of T)(Func(Of TCommand, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteNonQuery
  name: ExecuteNonQuery()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteNonQuery
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteNonQuery
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteNonQuery()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteNonQuery()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteNonQuery()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteNonQuery()
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteNonQuery_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteNonQuery
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteNonQuery
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteNonQuery
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteNonQuery
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteNonQuery
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReader(System.Action{System.Data.IDataReader},System.Data.CommandBehavior)
  name: ExecuteReader(Action<IDataReader>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteReader_System_Action_System_Data_IDataReader__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReader(System.Action{System.Data.IDataReader},System.Data.CommandBehavior)
  name.vb: ExecuteReader(Action(Of IDataReader), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReader(System.Action<System.Data.IDataReader>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReader(System.Action(Of System.Data.IDataReader), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReader(Action<IDataReader>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReader(Action(Of IDataReader), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReader*
  name: ExecuteReader
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteReader_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReader
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReader
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReader
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReader
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReader
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReader``1(System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior)
  name: ExecuteReader<T>(Func<IDataReader, T>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteReader__1_System_Func_System_Data_IDataReader___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReader``1(System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior)
  name.vb: ExecuteReader(Of T)(Func(Of IDataReader, T), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReader<T>(System.Func<System.Data.IDataReader, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReader(Of T)(System.Func(Of System.Data.IDataReader, T), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReader<T>(Func<IDataReader, T>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReader(Of T)(Func(Of IDataReader, T), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReturn
  name: ExecuteReturn()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteReturn
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReturn
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturn()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturn()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturn()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturn()
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReturn*
  name: ExecuteReturn
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteReturn_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReturn
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturn
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturn
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturn
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturn
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReturn``1
  name: ExecuteReturn<T>()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteReturn__1
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteReturn``1
  name.vb: ExecuteReturn(Of T)()
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturn<T>()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturn(Of T)()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturn<T>()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturn(Of T)()
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteScalar
  name: ExecuteScalar()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteScalar
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteScalar
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalar()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalar()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalar()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalar()
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteScalar*
  name: ExecuteScalar
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteScalar_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteScalar
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalar
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalar
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalar
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalar
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteScalar``1
  name: ExecuteScalar<T>()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteScalar__1
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteScalar``1
  name.vb: ExecuteScalar(Of T)()
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalar<T>()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalar(Of T)()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalar<T>()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalar(Of T)()
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteScalar``1(System.Func{System.Object,``0})
  name: ExecuteScalar<T>(Func<Object, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ExecuteScalar__1_System_Func_System_Object___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.ExecuteScalar``1(System.Func{System.Object,``0})
  name.vb: ExecuteScalar(Of T)(Func(Of Object, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalar<T>(System.Func<System.Object, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalar(Of T)(System.Func(Of System.Object, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalar<T>(Func<Object, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalar(Of T)(Func(Of Object, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.First*
  name: First
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_First_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.First
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.First
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).First
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.First
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).First
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.First``1(System.Func{System.Data.IDataRecord,``0})
  name: First<T>(Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_First__1_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.First``1(System.Func{System.Data.IDataRecord,``0})
  name.vb: First(Of T)(Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.First<T>(System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).First(Of T)(System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.First<T>(Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).First(Of T)(Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.FirstOrDefault*
  name: FirstOrDefault
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_FirstOrDefault_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.FirstOrDefault
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrDefault
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrDefault
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrDefault
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrDefault
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.FirstOrDefault``1(System.Func{System.Data.IDataRecord,``0})
  name: FirstOrDefault<T>(Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_FirstOrDefault__1_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.FirstOrDefault``1(System.Func{System.Data.IDataRecord,``0})
  name.vb: FirstOrDefault(Of T)(Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrDefault<T>(System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrDefault(Of T)(System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrDefault<T>(Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrDefault(Of T)(Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.FirstOrdinalResults
  name: FirstOrdinalResults()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_FirstOrdinalResults
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.FirstOrdinalResults
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResults()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResults()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResults()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResults()
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.FirstOrdinalResults*
  name: FirstOrdinalResults
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_FirstOrdinalResults_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.FirstOrdinalResults
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResults
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResults
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResults
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResults
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.FirstOrdinalResults``1
  name: FirstOrdinalResults<T0>()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_FirstOrdinalResults__1
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.FirstOrdinalResults``1
  name.vb: FirstOrdinalResults(Of T0)()
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResults<T0>()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResults(Of T0)()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResults<T0>()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResults(Of T0)()
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.IterateReader(System.Action{System.Data.IDataRecord})
  name: IterateReader(Action<IDataRecord>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_IterateReader_System_Action_System_Data_IDataRecord__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.IterateReader(System.Action{System.Data.IDataRecord})
  name.vb: IterateReader(Action(Of IDataRecord))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReader(System.Action<System.Data.IDataRecord>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReader(System.Action(Of System.Data.IDataRecord))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReader(Action<IDataRecord>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReader(Action(Of IDataRecord))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.IterateReader*
  name: IterateReader
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_IterateReader_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.IterateReader
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReader
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReader
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReader
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReader
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.IterateReader``2(System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})
  name: IterateReader<TEntity, TResult>(Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_IterateReader__2_System_Func_System_Data_IDataRecord___0__System_Func_System_Collections_Generic_IEnumerable___0____1__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.IterateReader``2(System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})
  name.vb: IterateReader(Of TEntity, TResult)(Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReader<TEntity, TResult>(System.Func<System.Data.IDataRecord, TEntity>, System.Func<System.Collections.Generic.IEnumerable<TEntity>, TResult>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReader(Of TEntity, TResult)(System.Func(Of System.Data.IDataRecord, TEntity), System.Func(Of System.Collections.Generic.IEnumerable(Of TEntity), TResult))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReader<TEntity, TResult>(Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReader(Of TEntity, TResult)(Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.IterateReaderInternal*
  name: IterateReaderInternal
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_IterateReaderInternal_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.IterateReaderInternal
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderInternal
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderInternal
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderInternal
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderInternal
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.IterateReaderInternal``1(System.Func{System.Data.IDataRecord,``0})
  name: IterateReaderInternal<T>(Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_IterateReaderInternal__1_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.IterateReaderInternal``1(System.Func{System.Data.IDataRecord,``0})
  name.vb: IterateReaderInternal(Of T)(Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderInternal<T>(System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderInternal(Of T)(System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderInternal<T>(Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderInternal(Of T)(Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.IterateReaderWhile(System.Func{System.Data.IDataRecord,System.Boolean})
  name: IterateReaderWhile(Func<IDataRecord, Boolean>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_IterateReaderWhile_System_Func_System_Data_IDataRecord_System_Boolean__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.IterateReaderWhile(System.Func{System.Data.IDataRecord,System.Boolean})
  name.vb: IterateReaderWhile(Func(Of IDataRecord, Boolean))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderWhile(System.Func<System.Data.IDataRecord, System.Boolean>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderWhile(System.Func(Of System.Data.IDataRecord, System.Boolean))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderWhile(Func<IDataRecord, Boolean>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderWhile(Func(Of IDataRecord, Boolean))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.IterateReaderWhile*
  name: IterateReaderWhile
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_IterateReaderWhile_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.IterateReaderWhile
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderWhile
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderWhile
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderWhile
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderWhile
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.LoadTable
  name: LoadTable()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_LoadTable
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.LoadTable
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.LoadTable()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).LoadTable()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.LoadTable()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).LoadTable()
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.LoadTable*
  name: LoadTable
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_LoadTable_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.LoadTable
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.LoadTable
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).LoadTable
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.LoadTable
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).LoadTable
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.LoadTables
  name: LoadTables()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_LoadTables
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.LoadTables
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.LoadTables()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).LoadTables()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.LoadTables()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).LoadTables()
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.LoadTables*
  name: LoadTables
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_LoadTables_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.LoadTables
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.LoadTables
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).LoadTables
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.LoadTables
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).LoadTables
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param
  name: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html
  commentId: T:Open.Database.Extensions.ExpressiveCommandBase`4.Param
  name.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.Equals(System.Object)
  name: Equals(Object)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_Equals_System_Object_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Param.Equals(System.Object)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Equals(System.Object)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Equals(System.Object)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Equals(Object)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Equals(Object)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.Equals*
  name: Equals
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_Equals_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Param.Equals
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Equals
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Equals
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Equals
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Equals
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.Name
  name: Name
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_Name
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`4.Param.Name
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Name
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Name
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Name
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Name
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.Name*
  name: Name
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_Name_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Param.Name
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Name
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Name
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Name
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Name
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.op_Equality(Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param,Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param)
  name: Equality(ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param, ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_op_Equality_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__Param_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__Param_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Param.op_Equality(Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param,Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param)
  name.vb: Equality(ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param, ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Equality(Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param, Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Equality(Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param, Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Equality(ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param, ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Equality(ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param, ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.op_Equality*
  name: Equality
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_op_Equality_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Param.op_Equality
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Equality
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Equality
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Equality
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Equality
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.op_Inequality(Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param,Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param)
  name: Inequality(ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param, ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_op_Inequality_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__Param_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__Param_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Param.op_Inequality(Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param,Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param)
  name.vb: Inequality(ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param, ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Inequality(Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param, Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Inequality(Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param, Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Inequality(ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param, ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Inequality(ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param, ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.op_Inequality*
  name: Inequality
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_op_Inequality_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Param.op_Inequality
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Inequality
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Inequality
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Inequality
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Inequality
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.Type
  name: Type
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_Type
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`4.Param.Type
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Type
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Type
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Type
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Type
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.Type*
  name: Type
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_Type_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Param.Type
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Type
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Type
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Type
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Type
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.Value
  name: Value
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_Value
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`4.Param.Value
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Value
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Value
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Value
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Value
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Param.Value*
  name: Value
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.Param.html#Open_Database_Extensions_ExpressiveCommandBase_4_Param_Value_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Param.Value
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Value
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Value
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param.Value
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param.Value
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Params
  name: Params
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Params
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`4.Params
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Params
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Params
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Params
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Params
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Params*
  name: Params
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Params_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Params
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Params
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Params
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Params
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Params
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Results*
  name: Results
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Results_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Results
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Results
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Results
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Results
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Results
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Results``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: Results<T>(IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Results__1_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Results``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: Results(Of T)(IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Results<T>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Results(Of T)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Results<T>(IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Results(Of T)(IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Results``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: Results<T>(IEnumerable<>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Results__1_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Results``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: Results(Of T)(IEnumerable(Of ))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Results<T>(System.Collections.Generic.IEnumerable<System.>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Results(Of T)(System.Collections.Generic.IEnumerable(Of System.))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Results<T>(IEnumerable<>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Results(Of T)(IEnumerable(Of ))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Results``1(System.ValueTuple{System.String,System.String}[])
  name: Results<T>([])
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Results__1_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Results``1(System.ValueTuple{System.String,System.String}[])
  name.vb: Results(Of T)(())
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Results<T>(System.[])
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Results(Of T)(System.())
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Results<T>([])
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Results(Of T)(())
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve
  name: Retrieve()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Retrieve
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve()
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve(System.Collections.Generic.IEnumerable{System.Int32})
  name: Retrieve(IEnumerable<Int32>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Retrieve_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: Retrieve(IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve(System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve(System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve(IEnumerable<Int32>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve(IEnumerable(Of Int32))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve(System.Collections.Generic.IEnumerable{System.String})
  name: Retrieve(IEnumerable<String>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Retrieve_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve(System.Collections.Generic.IEnumerable{System.String})
  name.vb: Retrieve(IEnumerable(Of String))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve(System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve(System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve(IEnumerable<String>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve(IEnumerable(Of String))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve(System.Int32,System.Int32[])
  name: Retrieve(Int32, Int32[])
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Retrieve_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve(System.Int32,System.Int32[])
  name.vb: Retrieve(Int32, Int32())
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve(System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve(System.Int32, System.Int32())
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve(Int32, Int32[])
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve(Int32, Int32())
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve(System.String,System.String[])
  name: Retrieve(String, String[])
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Retrieve_System_String_System_String___
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve(System.String,System.String[])
  name.vb: Retrieve(String, String())
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve(System.String, System.String[])
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve(System.String, System.String())
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve(String, String[])
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve(String, String())
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve*
  name: Retrieve
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Retrieve_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Retrieve
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Retrieve
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Retrieve
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.SetTimeout(System.UInt16)
  name: SetTimeout(UInt16)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_SetTimeout_System_UInt16_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.SetTimeout(System.UInt16)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SetTimeout(System.UInt16)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SetTimeout(System.UInt16)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SetTimeout(UInt16)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SetTimeout(UInt16)
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.SetTimeout*
  name: SetTimeout
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_SetTimeout_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.SetTimeout
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SetTimeout
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SetTimeout
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SetTimeout
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SetTimeout
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Single*
  name: Single
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Single_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Single
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Single
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Single
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Single
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Single
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Single``1(System.Func{System.Data.IDataRecord,``0})
  name: Single<T>(Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Single__1_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Single``1(System.Func{System.Data.IDataRecord,``0})
  name.vb: Single(Of T)(Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Single<T>(System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Single(Of T)(System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Single<T>(Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Single(Of T)(Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.SingleOrDefault*
  name: SingleOrDefault
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_SingleOrDefault_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.SingleOrDefault
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SingleOrDefault
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SingleOrDefault
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SingleOrDefault
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SingleOrDefault
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.SingleOrDefault``1(System.Func{System.Data.IDataRecord,``0})
  name: SingleOrDefault<T>(Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_SingleOrDefault__1_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.SingleOrDefault``1(System.Func{System.Data.IDataRecord,``0})
  name.vb: SingleOrDefault(Of T)(Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SingleOrDefault<T>(System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SingleOrDefault(Of T)(System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SingleOrDefault<T>(Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SingleOrDefault(Of T)(Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Skip*
  name: Skip
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Skip_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Skip
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Skip
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Skip
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Skip
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Skip
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Skip``1(System.Int32,System.Func{System.Data.IDataRecord,``0})
  name: Skip<T>(Int32, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Skip__1_System_Int32_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Skip``1(System.Int32,System.Func{System.Data.IDataRecord,``0})
  name.vb: Skip(Of T)(Int32, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Skip<T>(System.Int32, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Skip(Of T)(System.Int32, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Skip<T>(Int32, Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Skip(Of T)(Int32, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.SkipThenTake*
  name: SkipThenTake
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_SkipThenTake_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.SkipThenTake
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SkipThenTake
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SkipThenTake
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SkipThenTake
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SkipThenTake
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.SkipThenTake``1(System.Int32,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name: SkipThenTake<T>(Int32, Int32, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_SkipThenTake__1_System_Int32_System_Int32_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.SkipThenTake``1(System.Int32,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name.vb: SkipThenTake(Of T)(Int32, Int32, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SkipThenTake<T>(System.Int32, System.Int32, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SkipThenTake(Of T)(System.Int32, System.Int32, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.SkipThenTake<T>(Int32, Int32, Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).SkipThenTake(Of T)(Int32, Int32, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Take*
  name: Take
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Take_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Take
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Take
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Take
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Take
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Take
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Take``1(System.Int32,System.Func{System.Data.IDataRecord,``0})
  name: Take<T>(Int32, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Take__1_System_Int32_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.Take``1(System.Int32,System.Func{System.Data.IDataRecord,``0})
  name.vb: Take(Of T)(Int32, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Take<T>(System.Int32, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Take(Of T)(System.Int32, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Take<T>(Int32, Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Take(Of T)(Int32, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Timeout
  name: Timeout
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Timeout
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`4.Timeout
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Timeout
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Timeout
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Timeout
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Timeout
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Timeout*
  name: Timeout
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Timeout_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Timeout
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Timeout
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Timeout
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Timeout
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Timeout
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ToArray*
  name: ToArray
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ToArray_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.ToArray
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToArray
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToArray
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToArray
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToArray
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ToArray``1(System.Func{System.Data.IDataRecord,``0})
  name: ToArray<T>(Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ToArray__1_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.ToArray``1(System.Func{System.Data.IDataRecord,``0})
  name.vb: ToArray(Of T)(Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToArray<T>(System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToArray(Of T)(System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToArray<T>(Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToArray(Of T)(Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ToList*
  name: ToList
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ToList_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.ToList
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToList
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToList
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToList
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToList
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ToList``1(System.Func{System.Data.IDataRecord,``0})
  name: ToList<T>(Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ToList__1_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.ToList``1(System.Func{System.Data.IDataRecord,``0})
  name.vb: ToList(Of T)(Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToList<T>(System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToList(Of T)(System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToList<T>(Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToList(Of T)(Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ToTargetBlock*
  name: ToTargetBlock
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ToTargetBlock_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.ToTargetBlock
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToTargetBlock
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToTargetBlock
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToTargetBlock
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToTargetBlock
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.ToTargetBlock``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name: ToTargetBlock<T>(ITargetBlock<T>, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_ToTargetBlock__1_System_Threading_Tasks_Dataflow_ITargetBlock___0__System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.ToTargetBlock``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name.vb: ToTargetBlock(Of T)(ITargetBlock(Of T), Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToTargetBlock<T>(System.Threading.Tasks.Dataflow.ITargetBlock<T>, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToTargetBlock(Of T)(System.Threading.Tasks.Dataflow.ITargetBlock(Of T), System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.ToTargetBlock<T>(ITargetBlock<T>, Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).ToTargetBlock(Of T)(ITargetBlock(Of T), Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Type
  name: Type
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Type
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`4.Type
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Type
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Type
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Type
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Type
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.Type*
  name: Type
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_Type_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.Type
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Type
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Type
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Type
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Type
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.UsingConnection(System.Action{`0})
  name: UsingConnection(Action<TConnection>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_UsingConnection_System_Action__0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.UsingConnection(System.Action{`0})
  name.vb: UsingConnection(Action(Of TConnection))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.UsingConnection(System.Action<TConnection>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).UsingConnection(System.Action(Of TConnection))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.UsingConnection(Action<TConnection>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).UsingConnection(Action(Of TConnection))
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.UsingConnection*
  name: UsingConnection
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_UsingConnection_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`4.UsingConnection
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.UsingConnection
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).UsingConnection
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.UsingConnection
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).UsingConnection
- uid: Open.Database.Extensions.ExpressiveCommandBase`4.UsingConnection``1(System.Func{`0,``0})
  name: UsingConnection<T>(Func<TConnection, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-4.html#Open_Database_Extensions_ExpressiveCommandBase_4_UsingConnection__1_System_Func__0___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`4.UsingConnection``1(System.Func{`0,``0})
  name.vb: UsingConnection(Of T)(Func(Of TConnection, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.UsingConnection<T>(System.Func<TConnection, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).UsingConnection(Of T)(System.Func(Of TConnection, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.UsingConnection<T>(Func<TConnection, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).UsingConnection(Of T)(Func(Of TConnection, T))
- uid: Open.Database.Extensions.ExpressiveDbCommand
  name: ExpressiveDbCommand
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html
  commentId: T:Open.Database.Extensions.ExpressiveDbCommand
  fullName: Open.Database.Extensions.ExpressiveDbCommand
  nameWithType: ExpressiveDbCommand
- uid: Open.Database.Extensions.ExpressiveDbCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory{System.Data.Common.DbConnection},System.Data.CommandType,System.String,Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param[])
  name: ExpressiveDbCommand(IDbConnectionFactory<DbConnection>, CommandType, String, ExpressiveCommandBase<DbConnection, DbCommand, DbType, ExpressiveDbCommand>.Param[])
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand__ctor_Open_Database_Extensions_IDbConnectionFactory_System_Data_Common_DbConnection__System_Data_CommandType_System_String_Open_Database_Extensions_ExpressiveCommandBase_System_Data_Common_DbConnection_System_Data_Common_DbCommand_System_Data_DbType_Open_Database_Extensions_ExpressiveDbCommand__Param___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory{System.Data.Common.DbConnection},System.Data.CommandType,System.String,Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param[])
  name.vb: ExpressiveDbCommand(IDbConnectionFactory(Of DbConnection), CommandType, String, ExpressiveCommandBase(Of DbConnection, DbCommand, DbType, ExpressiveDbCommand).Param())
  fullName: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(Open.Database.Extensions.IDbConnectionFactory<System.Data.Common.DbConnection>, System.Data.CommandType, System.String, Open.Database.Extensions.ExpressiveCommandBase<System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand>.Param[])
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(Open.Database.Extensions.IDbConnectionFactory(Of System.Data.Common.DbConnection), System.Data.CommandType, System.String, Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand).Param())
  nameWithType: ExpressiveDbCommand.ExpressiveDbCommand(IDbConnectionFactory<DbConnection>, CommandType, String, ExpressiveCommandBase<DbConnection, DbCommand, DbType, ExpressiveDbCommand>.Param[])
  nameWithType.vb: ExpressiveDbCommand.ExpressiveDbCommand(IDbConnectionFactory(Of DbConnection), CommandType, String, ExpressiveCommandBase(Of DbConnection, DbCommand, DbType, ExpressiveDbCommand).Param())
- uid: Open.Database.Extensions.ExpressiveDbCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory{System.Data.Common.DbConnection},System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name: ExpressiveDbCommand(IDbConnectionFactory<DbConnection>, CommandType, String, List<ExpressiveCommandBase<DbConnection, DbCommand, DbType, ExpressiveDbCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand__ctor_Open_Database_Extensions_IDbConnectionFactory_System_Data_Common_DbConnection__System_Data_CommandType_System_String_System_Collections_Generic_List_Open_Database_Extensions_ExpressiveCommandBase_System_Data_Common_DbConnection_System_Data_Common_DbCommand_System_Data_DbType_Open_Database_Extensions_ExpressiveDbCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory{System.Data.Common.DbConnection},System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name.vb: ExpressiveDbCommand(IDbConnectionFactory(Of DbConnection), CommandType, String, List(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbType, ExpressiveDbCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(Open.Database.Extensions.IDbConnectionFactory<System.Data.Common.DbConnection>, System.Data.CommandType, System.String, System.Collections.Generic.List<Open.Database.Extensions.ExpressiveCommandBase<System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(Open.Database.Extensions.IDbConnectionFactory(Of System.Data.Common.DbConnection), System.Data.CommandType, System.String, System.Collections.Generic.List(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand).Param))
  nameWithType: ExpressiveDbCommand.ExpressiveDbCommand(IDbConnectionFactory<DbConnection>, CommandType, String, List<ExpressiveCommandBase<DbConnection, DbCommand, DbType, ExpressiveDbCommand>.Param>)
  nameWithType.vb: ExpressiveDbCommand.ExpressiveDbCommand(IDbConnectionFactory(Of DbConnection), CommandType, String, List(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbType, ExpressiveDbCommand).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommand.#ctor(System.Data.Common.DbConnection,System.Data.CommandType,System.String,Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param[])
  name: ExpressiveDbCommand(DbConnection, CommandType, String, ExpressiveCommandBase<DbConnection, DbCommand, DbType, ExpressiveDbCommand>.Param[])
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand__ctor_System_Data_Common_DbConnection_System_Data_CommandType_System_String_Open_Database_Extensions_ExpressiveCommandBase_System_Data_Common_DbConnection_System_Data_Common_DbCommand_System_Data_DbType_Open_Database_Extensions_ExpressiveDbCommand__Param___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommand.#ctor(System.Data.Common.DbConnection,System.Data.CommandType,System.String,Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param[])
  name.vb: ExpressiveDbCommand(DbConnection, CommandType, String, ExpressiveCommandBase(Of DbConnection, DbCommand, DbType, ExpressiveDbCommand).Param())
  fullName: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(System.Data.Common.DbConnection, System.Data.CommandType, System.String, Open.Database.Extensions.ExpressiveCommandBase<System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand>.Param[])
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(System.Data.Common.DbConnection, System.Data.CommandType, System.String, Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand).Param())
  nameWithType: ExpressiveDbCommand.ExpressiveDbCommand(DbConnection, CommandType, String, ExpressiveCommandBase<DbConnection, DbCommand, DbType, ExpressiveDbCommand>.Param[])
  nameWithType.vb: ExpressiveDbCommand.ExpressiveDbCommand(DbConnection, CommandType, String, ExpressiveCommandBase(Of DbConnection, DbCommand, DbType, ExpressiveDbCommand).Param())
- uid: Open.Database.Extensions.ExpressiveDbCommand.#ctor(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name: ExpressiveDbCommand(DbConnection, CommandType, String, List<ExpressiveCommandBase<DbConnection, DbCommand, DbType, ExpressiveDbCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand__ctor_System_Data_Common_DbConnection_System_Data_CommandType_System_String_System_Collections_Generic_List_Open_Database_Extensions_ExpressiveCommandBase_System_Data_Common_DbConnection_System_Data_Common_DbCommand_System_Data_DbType_Open_Database_Extensions_ExpressiveDbCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommand.#ctor(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name.vb: ExpressiveDbCommand(DbConnection, CommandType, String, List(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbType, ExpressiveDbCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(System.Data.Common.DbConnection, System.Data.CommandType, System.String, System.Collections.Generic.List<Open.Database.Extensions.ExpressiveCommandBase<System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(System.Data.Common.DbConnection, System.Data.CommandType, System.String, System.Collections.Generic.List(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand).Param))
  nameWithType: ExpressiveDbCommand.ExpressiveDbCommand(DbConnection, CommandType, String, List<ExpressiveCommandBase<DbConnection, DbCommand, DbType, ExpressiveDbCommand>.Param>)
  nameWithType.vb: ExpressiveDbCommand.ExpressiveDbCommand(DbConnection, CommandType, String, List(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbType, ExpressiveDbCommand).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommand.#ctor*
  name: ExpressiveDbCommand
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand__ctor_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommand.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand
  nameWithType: ExpressiveDbCommand.ExpressiveDbCommand
- uid: Open.Database.Extensions.ExpressiveDbCommand.AddParams(System.Data.Common.DbCommand)
  name: AddParams(DbCommand)
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand_AddParams_System_Data_Common_DbCommand_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommand.AddParams(System.Data.Common.DbCommand)
  fullName: Open.Database.Extensions.ExpressiveDbCommand.AddParams(System.Data.Common.DbCommand)
  nameWithType: ExpressiveDbCommand.AddParams(DbCommand)
- uid: Open.Database.Extensions.ExpressiveDbCommand.AddParams*
  name: AddParams
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand_AddParams_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommand.AddParams
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommand.AddParams
  nameWithType: ExpressiveDbCommand.AddParams
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4
  name: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html
  commentId: T:Open.Database.Extensions.ExpressiveDbCommandBase`4
  name.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.#ctor(`0,System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param})
  name: ExpressiveDbCommandBase(TConnection, CommandType, String, List<ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4__ctor__0_System_Data_CommandType_System_String_System_Collections_Generic_List_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.#ctor(`0,System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param})
  name.vb: ExpressiveDbCommandBase(TConnection, CommandType, String, List(Of ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveDbCommandBase(TConnection, System.Data.CommandType, System.String, System.Collections.Generic.List<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveDbCommandBase(TConnection, System.Data.CommandType, System.String, System.Collections.Generic.List(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveDbCommandBase(TConnection, CommandType, String, List<ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveDbCommandBase(TConnection, CommandType, String, List(Of ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.#ctor(Open.Database.Extensions.IDbConnectionFactory{`0},System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param})
  name: ExpressiveDbCommandBase(IDbConnectionFactory<TConnection>, CommandType, String, List<ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4__ctor_Open_Database_Extensions_IDbConnectionFactory__0__System_Data_CommandType_System_String_System_Collections_Generic_List_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.#ctor(Open.Database.Extensions.IDbConnectionFactory{`0},System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3}.Param})
  name.vb: ExpressiveDbCommandBase(IDbConnectionFactory(Of TConnection), CommandType, String, List(Of ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveDbCommandBase(Open.Database.Extensions.IDbConnectionFactory<TConnection>, System.Data.CommandType, System.String, System.Collections.Generic.List<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveDbCommandBase(Open.Database.Extensions.IDbConnectionFactory(Of TConnection), System.Data.CommandType, System.String, System.Collections.Generic.List(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveDbCommandBase(IDbConnectionFactory<TConnection>, CommandType, String, List<ExpressiveCommandBase<TConnection, TCommand, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveDbCommandBase(IDbConnectionFactory(Of TConnection), CommandType, String, List(Of ExpressiveCommandBase(Of TConnection, TCommand, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.#ctor*
  name: ExpressiveDbCommandBase
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4__ctor_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveDbCommandBase
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveDbCommandBase
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExpressiveDbCommandBase
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExpressiveDbCommandBase
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.AsSourceBlockAsync*
  name: AsSourceBlockAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_AsSourceBlockAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.AsSourceBlockAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlockAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlockAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlockAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlockAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.AsSourceBlockAsync``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: AsSourceBlockAsync<T>(IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_AsSourceBlockAsync__1_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.AsSourceBlockAsync``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: AsSourceBlockAsync(Of T)(IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlockAsync<T>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlockAsync(Of T)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlockAsync<T>(IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlockAsync(Of T)(IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.AsSourceBlockAsync``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: AsSourceBlockAsync<T>(IEnumerable<>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_AsSourceBlockAsync__1_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.AsSourceBlockAsync``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: AsSourceBlockAsync(Of T)(IEnumerable(Of ))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlockAsync<T>(System.Collections.Generic.IEnumerable<System.>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlockAsync(Of T)(System.Collections.Generic.IEnumerable(Of System.))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlockAsync<T>(IEnumerable<>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlockAsync(Of T)(IEnumerable(Of ))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.AsSourceBlockAsync``1(System.Func{System.Data.IDataRecord,``0})
  name: AsSourceBlockAsync<T>(Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_AsSourceBlockAsync__1_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.AsSourceBlockAsync``1(System.Func{System.Data.IDataRecord,``0})
  name.vb: AsSourceBlockAsync(Of T)(Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlockAsync<T>(System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlockAsync(Of T)(System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlockAsync<T>(Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlockAsync(Of T)(Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.AsSourceBlockAsync``1(System.ValueTuple{System.String,System.String}[])
  name: AsSourceBlockAsync<T>([])
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_AsSourceBlockAsync__1_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.AsSourceBlockAsync``1(System.ValueTuple{System.String,System.String}[])
  name.vb: AsSourceBlockAsync(Of T)(())
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlockAsync<T>(System.[])
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlockAsync(Of T)(System.())
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.AsSourceBlockAsync<T>([])
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).AsSourceBlockAsync(Of T)(())
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteAsync(System.Func{`1,System.Threading.Tasks.Task},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteAsync(Func<TCommand, Task>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteAsync_System_Func__1_System_Threading_Tasks_Task__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteAsync(System.Func{`1,System.Threading.Tasks.Task},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteAsync(Func(Of TCommand, Task), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteAsync(System.Func<TCommand, System.Threading.Tasks.Task>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteAsync(System.Func(Of TCommand, System.Threading.Tasks.Task), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteAsync(Func<TCommand, Task>, Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteAsync(Func(Of TCommand, Task), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteAsync*
  name: ExecuteAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteAsync``1(System.Func{`1,System.Threading.Tasks.Task{``0}},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteAsync<T>(Func<TCommand, Task<T>>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteAsync__1_System_Func__1_System_Threading_Tasks_Task___0___System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteAsync``1(System.Func{`1,System.Threading.Tasks.Task{``0}},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteAsync(Of T)(Func(Of TCommand, Task(Of T)), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteAsync<T>(System.Func<TCommand, System.Threading.Tasks.Task<T>>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteAsync(Of T)(System.Func(Of TCommand, System.Threading.Tasks.Task(Of T)), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteAsync<T>(Func<TCommand, Task<T>>, Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteAsync(Of T)(Func(Of TCommand, Task(Of T)), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteNonQueryAsync(System.Nullable{System.Threading.CancellationToken})
  name: ExecuteNonQueryAsync(Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteNonQueryAsync_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteNonQueryAsync(System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteNonQueryAsync(Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteNonQueryAsync(System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteNonQueryAsync(System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteNonQueryAsync(Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteNonQueryAsync(Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteNonQueryAsync*
  name: ExecuteNonQueryAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteNonQueryAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteNonQueryAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteNonQueryAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteNonQueryAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteNonQueryAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteNonQueryAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReaderAsync(System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name: ExecuteReaderAsync(Func<DbDataReader, Task>, CommandBehavior, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteReaderAsync_System_Func_System_Data_Common_DbDataReader_System_Threading_Tasks_Task__System_Data_CommandBehavior_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReaderAsync(System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteReaderAsync(Func(Of DbDataReader, Task), CommandBehavior, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReaderAsync(System.Func<System.Data.Common.DbDataReader, System.Threading.Tasks.Task>, System.Data.CommandBehavior, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReaderAsync(System.Func(Of System.Data.Common.DbDataReader, System.Threading.Tasks.Task), System.Data.CommandBehavior, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReaderAsync(Func<DbDataReader, Task>, CommandBehavior, Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReaderAsync(Func(Of DbDataReader, Task), CommandBehavior, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReaderAsync*
  name: ExecuteReaderAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteReaderAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReaderAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReaderAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReaderAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReaderAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReaderAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReaderAsync``1(System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task{``0}},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name: ExecuteReaderAsync<T>(Func<DbDataReader, Task<T>>, CommandBehavior, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteReaderAsync__1_System_Func_System_Data_Common_DbDataReader_System_Threading_Tasks_Task___0___System_Data_CommandBehavior_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReaderAsync``1(System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task{``0}},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteReaderAsync(Of T)(Func(Of DbDataReader, Task(Of T)), CommandBehavior, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReaderAsync<T>(System.Func<System.Data.Common.DbDataReader, System.Threading.Tasks.Task<T>>, System.Data.CommandBehavior, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReaderAsync(Of T)(System.Func(Of System.Data.Common.DbDataReader, System.Threading.Tasks.Task(Of T)), System.Data.CommandBehavior, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReaderAsync<T>(Func<DbDataReader, Task<T>>, CommandBehavior, Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReaderAsync(Of T)(Func(Of DbDataReader, Task(Of T)), CommandBehavior, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReturnAsync(System.Nullable{System.Threading.CancellationToken})
  name: ExecuteReturnAsync(Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteReturnAsync_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReturnAsync(System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteReturnAsync(Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturnAsync(System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturnAsync(System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturnAsync(Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturnAsync(Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReturnAsync*
  name: ExecuteReturnAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteReturnAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReturnAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturnAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturnAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturnAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturnAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReturnAsync``1(System.Nullable{System.Threading.CancellationToken})
  name: ExecuteReturnAsync<T>(Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteReturnAsync__1_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteReturnAsync``1(System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteReturnAsync(Of T)(Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturnAsync<T>(System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturnAsync(Of T)(System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteReturnAsync<T>(Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteReturnAsync(Of T)(Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteScalarAsync(System.Nullable{System.Threading.CancellationToken})
  name: ExecuteScalarAsync(Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteScalarAsync_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteScalarAsync(System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteScalarAsync(Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalarAsync(System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalarAsync(System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalarAsync(Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalarAsync(Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteScalarAsync*
  name: ExecuteScalarAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteScalarAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteScalarAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalarAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalarAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalarAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalarAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteScalarAsync``1(System.Func{System.Object,``0},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteScalarAsync<T>(Func<Object, T>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteScalarAsync__1_System_Func_System_Object___0__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteScalarAsync``1(System.Func{System.Object,``0},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteScalarAsync(Of T)(Func(Of Object, T), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalarAsync<T>(System.Func<System.Object, T>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalarAsync(Of T)(System.Func(Of System.Object, T), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalarAsync<T>(Func<Object, T>, Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalarAsync(Of T)(Func(Of Object, T), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteScalarAsync``1(System.Func{System.Object,System.Threading.Tasks.Task{``0}},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteScalarAsync<T>(Func<Object, Task<T>>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteScalarAsync__1_System_Func_System_Object_System_Threading_Tasks_Task___0___System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteScalarAsync``1(System.Func{System.Object,System.Threading.Tasks.Task{``0}},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteScalarAsync(Of T)(Func(Of Object, Task(Of T)), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalarAsync<T>(System.Func<System.Object, System.Threading.Tasks.Task<T>>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalarAsync(Of T)(System.Func(Of System.Object, System.Threading.Tasks.Task(Of T)), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalarAsync<T>(Func<Object, Task<T>>, Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalarAsync(Of T)(Func(Of Object, Task(Of T)), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteScalarAsync``1(System.Nullable{System.Threading.CancellationToken})
  name: ExecuteScalarAsync<T>(Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ExecuteScalarAsync__1_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ExecuteScalarAsync``1(System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteScalarAsync(Of T)(Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalarAsync<T>(System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalarAsync(Of T)(System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ExecuteScalarAsync<T>(Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ExecuteScalarAsync(Of T)(Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.FirstOrdinalResultsAsync
  name: FirstOrdinalResultsAsync()
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_FirstOrdinalResultsAsync
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.FirstOrdinalResultsAsync
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResultsAsync()
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResultsAsync()
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResultsAsync()
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResultsAsync()
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.FirstOrdinalResultsAsync*
  name: FirstOrdinalResultsAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_FirstOrdinalResultsAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.FirstOrdinalResultsAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResultsAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResultsAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResultsAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResultsAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.FirstOrdinalResultsAsync``1
  name: FirstOrdinalResultsAsync<T0>()
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_FirstOrdinalResultsAsync__1
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.FirstOrdinalResultsAsync``1
  name.vb: FirstOrdinalResultsAsync(Of T0)()
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResultsAsync<T0>()
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResultsAsync(Of T0)()
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.FirstOrdinalResultsAsync<T0>()
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).FirstOrdinalResultsAsync(Of T0)()
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.IterateReaderAsync(System.Action{System.Data.IDataRecord},System.Nullable{System.Threading.CancellationToken})
  name: IterateReaderAsync(Action<IDataRecord>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_IterateReaderAsync_System_Action_System_Data_IDataRecord__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.IterateReaderAsync(System.Action{System.Data.IDataRecord},System.Nullable{System.Threading.CancellationToken})
  name.vb: IterateReaderAsync(Action(Of IDataRecord), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderAsync(System.Action<System.Data.IDataRecord>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderAsync(System.Action(Of System.Data.IDataRecord), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderAsync(Action<IDataRecord>, Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderAsync(Action(Of IDataRecord), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.IterateReaderAsync*
  name: IterateReaderAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_IterateReaderAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.IterateReaderAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.IterateReaderAsyncWhile(System.Func{System.Data.IDataRecord,System.Boolean},System.Nullable{System.Threading.CancellationToken})
  name: IterateReaderAsyncWhile(Func<IDataRecord, Boolean>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_IterateReaderAsyncWhile_System_Func_System_Data_IDataRecord_System_Boolean__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.IterateReaderAsyncWhile(System.Func{System.Data.IDataRecord,System.Boolean},System.Nullable{System.Threading.CancellationToken})
  name.vb: IterateReaderAsyncWhile(Func(Of IDataRecord, Boolean), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderAsyncWhile(System.Func<System.Data.IDataRecord, System.Boolean>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderAsyncWhile(System.Func(Of System.Data.IDataRecord, System.Boolean), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderAsyncWhile(Func<IDataRecord, Boolean>, Nullable<CancellationToken>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderAsyncWhile(Func(Of IDataRecord, Boolean), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.IterateReaderAsyncWhile(System.Func{System.Data.IDataRecord,System.Threading.Tasks.Task{System.Boolean}})
  name: IterateReaderAsyncWhile(Func<IDataRecord, Task<Boolean>>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_IterateReaderAsyncWhile_System_Func_System_Data_IDataRecord_System_Threading_Tasks_Task_System_Boolean___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.IterateReaderAsyncWhile(System.Func{System.Data.IDataRecord,System.Threading.Tasks.Task{System.Boolean}})
  name.vb: IterateReaderAsyncWhile(Func(Of IDataRecord, Task(Of Boolean)))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderAsyncWhile(System.Func<System.Data.IDataRecord, System.Threading.Tasks.Task<System.Boolean>>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderAsyncWhile(System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.Task(Of System.Boolean)))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderAsyncWhile(Func<IDataRecord, Task<Boolean>>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderAsyncWhile(Func(Of IDataRecord, Task(Of Boolean)))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.IterateReaderAsyncWhile*
  name: IterateReaderAsyncWhile
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_IterateReaderAsyncWhile_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.IterateReaderAsyncWhile
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderAsyncWhile
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderAsyncWhile
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.IterateReaderAsyncWhile
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).IterateReaderAsyncWhile
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ResultsAsync*
  name: ResultsAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ResultsAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.ResultsAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ResultsAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ResultsAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ResultsAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ResultsAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ResultsAsync``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: ResultsAsync<T>(IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ResultsAsync__1_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ResultsAsync``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: ResultsAsync(Of T)(IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ResultsAsync<T>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ResultsAsync(Of T)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ResultsAsync<T>(IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ResultsAsync(Of T)(IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ResultsAsync``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: ResultsAsync<T>(IEnumerable<>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ResultsAsync__1_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ResultsAsync``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: ResultsAsync(Of T)(IEnumerable(Of ))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ResultsAsync<T>(System.Collections.Generic.IEnumerable<System.>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ResultsAsync(Of T)(System.Collections.Generic.IEnumerable(Of System.))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ResultsAsync<T>(IEnumerable<>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ResultsAsync(Of T)(IEnumerable(Of ))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ResultsAsync``1(System.ValueTuple{System.String,System.String}[])
  name: ResultsAsync<T>([])
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ResultsAsync__1_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ResultsAsync``1(System.ValueTuple{System.String,System.String}[])
  name.vb: ResultsAsync(Of T)(())
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ResultsAsync<T>(System.[])
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ResultsAsync(Of T)(System.())
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ResultsAsync<T>([])
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ResultsAsync(Of T)(())
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync
  name: RetrieveAsync()
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_RetrieveAsync
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync()
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync()
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync()
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync()
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync(System.Collections.Generic.IEnumerable{System.Int32})
  name: RetrieveAsync(IEnumerable<Int32>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_RetrieveAsync_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: RetrieveAsync(IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync(System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync(System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync(IEnumerable<Int32>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync(IEnumerable(Of Int32))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name: RetrieveAsync(IEnumerable<String>, Boolean)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_RetrieveAsync_System_Collections_Generic_IEnumerable_System_String__System_Boolean_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name.vb: RetrieveAsync(IEnumerable(Of String), Boolean)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync(System.Collections.Generic.IEnumerable<System.String>, System.Boolean)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync(System.Collections.Generic.IEnumerable(Of System.String), System.Boolean)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync(IEnumerable<String>, Boolean)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync(IEnumerable(Of String), Boolean)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync(System.Int32,System.Int32[])
  name: RetrieveAsync(Int32, Int32[])
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_RetrieveAsync_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync(System.Int32,System.Int32[])
  name.vb: RetrieveAsync(Int32, Int32())
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync(System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync(System.Int32, System.Int32())
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync(Int32, Int32[])
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync(Int32, Int32())
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync(System.String,System.String[])
  name: RetrieveAsync(String, String[])
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_RetrieveAsync_System_String_System_String___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync(System.String,System.String[])
  name.vb: RetrieveAsync(String, String())
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync(System.String, System.String[])
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync(System.String, System.String())
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync(String, String[])
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync(String, String())
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync*
  name: RetrieveAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_RetrieveAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.RetrieveAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.RetrieveAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).RetrieveAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.TakeAsync*
  name: TakeAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_TakeAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.TakeAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.TakeAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).TakeAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.TakeAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).TakeAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.TakeAsync``1(System.Func{System.Data.IDataRecord,``0},System.Int32)
  name: TakeAsync<T>(Func<IDataRecord, T>, Int32)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_TakeAsync__1_System_Func_System_Data_IDataRecord___0__System_Int32_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.TakeAsync``1(System.Func{System.Data.IDataRecord,``0},System.Int32)
  name.vb: TakeAsync(Of T)(Func(Of IDataRecord, T), Int32)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.TakeAsync<T>(System.Func<System.Data.IDataRecord, T>, System.Int32)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).TakeAsync(Of T)(System.Func(Of System.Data.IDataRecord, T), System.Int32)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.TakeAsync<T>(Func<IDataRecord, T>, Int32)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).TakeAsync(Of T)(Func(Of IDataRecord, T), Int32)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ToListAsync*
  name: ToListAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ToListAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.ToListAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ToListAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ToListAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ToListAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ToListAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ToListAsync``1(System.Func{System.Data.IDataRecord,``0})
  name: ToListAsync<T>(Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ToListAsync__1_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ToListAsync``1(System.Func{System.Data.IDataRecord,``0})
  name.vb: ToListAsync(Of T)(Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ToListAsync<T>(System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ToListAsync(Of T)(System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ToListAsync<T>(Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ToListAsync(Of T)(Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ToTargetBlockAsync*
  name: ToTargetBlockAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ToTargetBlockAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`4.ToTargetBlockAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ToTargetBlockAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ToTargetBlockAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ToTargetBlockAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ToTargetBlockAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`4.ToTargetBlockAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name: ToTargetBlockAsync<T>(ITargetBlock<T>, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-4.html#Open_Database_Extensions_ExpressiveDbCommandBase_4_ToTargetBlockAsync__1_System_Threading_Tasks_Dataflow_ITargetBlock___0__System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`4.ToTargetBlockAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name.vb: ToTargetBlockAsync(Of T)(ITargetBlock(Of T), Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ToTargetBlockAsync<T>(System.Threading.Tasks.Dataflow.ITargetBlock<T>, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ToTargetBlockAsync(Of T)(System.Threading.Tasks.Dataflow.ITargetBlock(Of T), System.Func(Of System.Data.IDataRecord, T))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TDbType, TThis>.ToTargetBlockAsync<T>(ITargetBlock<T>, Func<IDataRecord, T>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TDbType, TThis).ToTargetBlockAsync(Of T)(ITargetBlock(Of T), Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions
  name: Extensions
  href: api/Open.Database.Extensions.Extensions.html
  commentId: T:Open.Database.Extensions.Extensions
  fullName: Open.Database.Extensions.Extensions
  nameWithType: Extensions
- uid: Open.Database.Extensions.Extensions.AddParameter(System.Data.IDbCommand,System.String,System.Object)
  name: AddParameter(IDbCommand, String, Object)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_AddParameter_System_Data_IDbCommand_System_String_System_Object_
  commentId: M:Open.Database.Extensions.Extensions.AddParameter(System.Data.IDbCommand,System.String,System.Object)
  fullName: Open.Database.Extensions.Extensions.AddParameter(System.Data.IDbCommand, System.String, System.Object)
  nameWithType: Extensions.AddParameter(IDbCommand, String, Object)
- uid: Open.Database.Extensions.Extensions.AddParameter(System.Data.IDbCommand,System.String,System.Object,System.Data.DbType,System.Data.ParameterDirection)
  name: AddParameter(IDbCommand, String, Object, DbType, ParameterDirection)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_AddParameter_System_Data_IDbCommand_System_String_System_Object_System_Data_DbType_System_Data_ParameterDirection_
  commentId: M:Open.Database.Extensions.Extensions.AddParameter(System.Data.IDbCommand,System.String,System.Object,System.Data.DbType,System.Data.ParameterDirection)
  fullName: Open.Database.Extensions.Extensions.AddParameter(System.Data.IDbCommand, System.String, System.Object, System.Data.DbType, System.Data.ParameterDirection)
  nameWithType: Extensions.AddParameter(IDbCommand, String, Object, DbType, ParameterDirection)
- uid: Open.Database.Extensions.Extensions.AddParameter*
  name: AddParameter
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_AddParameter_
  commentId: Overload:Open.Database.Extensions.Extensions.AddParameter
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.AddParameter
  nameWithType: Extensions.AddParameter
- uid: Open.Database.Extensions.Extensions.AddParameterType(System.Data.IDbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection)
  name: AddParameterType(IDbCommand, String, DbType, ParameterDirection)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_AddParameterType_System_Data_IDbCommand_System_String_System_Data_DbType_System_Data_ParameterDirection_
  commentId: M:Open.Database.Extensions.Extensions.AddParameterType(System.Data.IDbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection)
  fullName: Open.Database.Extensions.Extensions.AddParameterType(System.Data.IDbCommand, System.String, System.Data.DbType, System.Data.ParameterDirection)
  nameWithType: Extensions.AddParameterType(IDbCommand, String, DbType, ParameterDirection)
- uid: Open.Database.Extensions.Extensions.AddParameterType*
  name: AddParameterType
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_AddParameterType_
  commentId: Overload:Open.Database.Extensions.Extensions.AddParameterType
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.AddParameterType
  nameWithType: Extensions.AddParameterType
- uid: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.DataColumnCollection)
  name: AsEnumerable(DataColumnCollection)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_AsEnumerable_System_Data_DataColumnCollection_
  commentId: M:Open.Database.Extensions.Extensions.AsEnumerable(System.Data.DataColumnCollection)
  fullName: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.DataColumnCollection)
  nameWithType: Extensions.AsEnumerable(DataColumnCollection)
- uid: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.DataRowCollection)
  name: AsEnumerable(DataRowCollection)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_AsEnumerable_System_Data_DataRowCollection_
  commentId: M:Open.Database.Extensions.Extensions.AsEnumerable(System.Data.DataRowCollection)
  fullName: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.DataRowCollection)
  nameWithType: Extensions.AsEnumerable(DataRowCollection)
- uid: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.IDataReader)
  name: AsEnumerable(IDataReader)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_AsEnumerable_System_Data_IDataReader_
  commentId: M:Open.Database.Extensions.Extensions.AsEnumerable(System.Data.IDataReader)
  fullName: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.IDataReader)
  nameWithType: Extensions.AsEnumerable(IDataReader)
- uid: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Int32})
  name: AsEnumerable(IDataReader, IEnumerable<Int32>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_AsEnumerable_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.Extensions.AsEnumerable(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: AsEnumerable(IDataReader, IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: Extensions.AsEnumerable(IDataReader, IEnumerable<Int32>)
  nameWithType.vb: Extensions.AsEnumerable(IDataReader, IEnumerable(Of Int32))
- uid: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.IDataReader,System.Int32,System.Int32[])
  name: AsEnumerable(IDataReader, Int32, Int32[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_AsEnumerable_System_Data_IDataReader_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.Extensions.AsEnumerable(System.Data.IDataReader,System.Int32,System.Int32[])
  name.vb: AsEnumerable(IDataReader, Int32, Int32())
  fullName: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.IDataReader, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.Extensions.AsEnumerable(System.Data.IDataReader, System.Int32, System.Int32())
  nameWithType: Extensions.AsEnumerable(IDataReader, Int32, Int32[])
  nameWithType.vb: Extensions.AsEnumerable(IDataReader, Int32, Int32())
- uid: Open.Database.Extensions.Extensions.AsEnumerable*
  name: AsEnumerable
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_AsEnumerable_
  commentId: Overload:Open.Database.Extensions.Extensions.AsEnumerable
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.AsEnumerable
  nameWithType: Extensions.AsEnumerable
- uid: Open.Database.Extensions.Extensions.Command(Open.Database.Extensions.IDbConnectionFactory{System.Data.Common.DbConnection},System.String,System.Data.CommandType)
  name: Command(IDbConnectionFactory<DbConnection>, String, CommandType)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Command_Open_Database_Extensions_IDbConnectionFactory_System_Data_Common_DbConnection__System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.Extensions.Command(Open.Database.Extensions.IDbConnectionFactory{System.Data.Common.DbConnection},System.String,System.Data.CommandType)
  name.vb: Command(IDbConnectionFactory(Of DbConnection), String, CommandType)
  fullName: Open.Database.Extensions.Extensions.Command(Open.Database.Extensions.IDbConnectionFactory<System.Data.Common.DbConnection>, System.String, System.Data.CommandType)
  fullName.vb: Open.Database.Extensions.Extensions.Command(Open.Database.Extensions.IDbConnectionFactory(Of System.Data.Common.DbConnection), System.String, System.Data.CommandType)
  nameWithType: Extensions.Command(IDbConnectionFactory<DbConnection>, String, CommandType)
  nameWithType.vb: Extensions.Command(IDbConnectionFactory(Of DbConnection), String, CommandType)
- uid: Open.Database.Extensions.Extensions.Command(System.Data.Common.DbConnection,System.String,System.Data.CommandType)
  name: Command(DbConnection, String, CommandType)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Command_System_Data_Common_DbConnection_System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.Extensions.Command(System.Data.Common.DbConnection,System.String,System.Data.CommandType)
  fullName: Open.Database.Extensions.Extensions.Command(System.Data.Common.DbConnection, System.String, System.Data.CommandType)
  nameWithType: Extensions.Command(DbConnection, String, CommandType)
- uid: Open.Database.Extensions.Extensions.Command(System.Func{System.Data.Common.DbConnection},System.String,System.Data.CommandType)
  name: Command(Func<DbConnection>, String, CommandType)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Command_System_Func_System_Data_Common_DbConnection__System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.Extensions.Command(System.Func{System.Data.Common.DbConnection},System.String,System.Data.CommandType)
  name.vb: Command(Func(Of DbConnection), String, CommandType)
  fullName: Open.Database.Extensions.Extensions.Command(System.Func<System.Data.Common.DbConnection>, System.String, System.Data.CommandType)
  fullName.vb: Open.Database.Extensions.Extensions.Command(System.Func(Of System.Data.Common.DbConnection), System.String, System.Data.CommandType)
  nameWithType: Extensions.Command(Func<DbConnection>, String, CommandType)
  nameWithType.vb: Extensions.Command(Func(Of DbConnection), String, CommandType)
- uid: Open.Database.Extensions.Extensions.Command*
  name: Command
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Command_
  commentId: Overload:Open.Database.Extensions.Extensions.Command
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.Command
  nameWithType: Extensions.Command
- uid: Open.Database.Extensions.Extensions.CreateCommand(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Int32)
  name: CreateCommand(DbConnection, CommandType, String, Int32)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_CreateCommand_System_Data_Common_DbConnection_System_Data_CommandType_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.Extensions.CreateCommand(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Int32)
  fullName: Open.Database.Extensions.Extensions.CreateCommand(System.Data.Common.DbConnection, System.Data.CommandType, System.String, System.Int32)
  nameWithType: Extensions.CreateCommand(DbConnection, CommandType, String, Int32)
- uid: Open.Database.Extensions.Extensions.CreateCommand(System.Data.IDbConnection,System.Data.CommandType,System.String,System.Int32)
  name: CreateCommand(IDbConnection, CommandType, String, Int32)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_CreateCommand_System_Data_IDbConnection_System_Data_CommandType_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.Extensions.CreateCommand(System.Data.IDbConnection,System.Data.CommandType,System.String,System.Int32)
  fullName: Open.Database.Extensions.Extensions.CreateCommand(System.Data.IDbConnection, System.Data.CommandType, System.String, System.Int32)
  nameWithType: Extensions.CreateCommand(IDbConnection, CommandType, String, Int32)
- uid: Open.Database.Extensions.Extensions.CreateCommand*
  name: CreateCommand
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_CreateCommand_
  commentId: Overload:Open.Database.Extensions.Extensions.CreateCommand
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.CreateCommand
  nameWithType: Extensions.CreateCommand
- uid: Open.Database.Extensions.Extensions.CreateStoredProcedureCommand(System.Data.Common.DbConnection,System.String,System.Int32)
  name: CreateStoredProcedureCommand(DbConnection, String, Int32)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_CreateStoredProcedureCommand_System_Data_Common_DbConnection_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.Extensions.CreateStoredProcedureCommand(System.Data.Common.DbConnection,System.String,System.Int32)
  fullName: Open.Database.Extensions.Extensions.CreateStoredProcedureCommand(System.Data.Common.DbConnection, System.String, System.Int32)
  nameWithType: Extensions.CreateStoredProcedureCommand(DbConnection, String, Int32)
- uid: Open.Database.Extensions.Extensions.CreateStoredProcedureCommand(System.Data.IDbConnection,System.String,System.Int32)
  name: CreateStoredProcedureCommand(IDbConnection, String, Int32)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_CreateStoredProcedureCommand_System_Data_IDbConnection_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.Extensions.CreateStoredProcedureCommand(System.Data.IDbConnection,System.String,System.Int32)
  fullName: Open.Database.Extensions.Extensions.CreateStoredProcedureCommand(System.Data.IDbConnection, System.String, System.Int32)
  nameWithType: Extensions.CreateStoredProcedureCommand(IDbConnection, String, Int32)
- uid: Open.Database.Extensions.Extensions.CreateStoredProcedureCommand*
  name: CreateStoredProcedureCommand
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_CreateStoredProcedureCommand_
  commentId: Overload:Open.Database.Extensions.Extensions.CreateStoredProcedureCommand
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.CreateStoredProcedureCommand
  nameWithType: Extensions.CreateStoredProcedureCommand
- uid: Open.Database.Extensions.Extensions.DBNullToNull(System.Collections.Generic.IEnumerable{System.Object})
  name: DBNullToNull(IEnumerable<Object>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_DBNullToNull_System_Collections_Generic_IEnumerable_System_Object__
  commentId: M:Open.Database.Extensions.Extensions.DBNullToNull(System.Collections.Generic.IEnumerable{System.Object})
  name.vb: DBNullToNull(IEnumerable(Of Object))
  fullName: Open.Database.Extensions.Extensions.DBNullToNull(System.Collections.Generic.IEnumerable<System.Object>)
  fullName.vb: Open.Database.Extensions.Extensions.DBNullToNull(System.Collections.Generic.IEnumerable(Of System.Object))
  nameWithType: Extensions.DBNullToNull(IEnumerable<Object>)
  nameWithType.vb: Extensions.DBNullToNull(IEnumerable(Of Object))
- uid: Open.Database.Extensions.Extensions.DBNullToNull(System.Object[])
  name: DBNullToNull(Object[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_DBNullToNull_System_Object___
  commentId: M:Open.Database.Extensions.Extensions.DBNullToNull(System.Object[])
  name.vb: DBNullToNull(Object())
  fullName: Open.Database.Extensions.Extensions.DBNullToNull(System.Object[])
  fullName.vb: Open.Database.Extensions.Extensions.DBNullToNull(System.Object())
  nameWithType: Extensions.DBNullToNull(Object[])
  nameWithType.vb: Extensions.DBNullToNull(Object())
- uid: Open.Database.Extensions.Extensions.DBNullToNull*
  name: DBNullToNull
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_DBNullToNull_
  commentId: Overload:Open.Database.Extensions.Extensions.DBNullToNull
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.DBNullToNull
  nameWithType: Extensions.DBNullToNull
- uid: Open.Database.Extensions.Extensions.DequeueEach*
  name: DequeueEach
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_DequeueEach_
  commentId: Overload:Open.Database.Extensions.Extensions.DequeueEach
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.DequeueEach
  nameWithType: Extensions.DequeueEach
- uid: Open.Database.Extensions.Extensions.DequeueEach``1(System.Collections.Generic.Queue{``0})
  name: DequeueEach<T>(Queue<T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_DequeueEach__1_System_Collections_Generic_Queue___0__
  commentId: M:Open.Database.Extensions.Extensions.DequeueEach``1(System.Collections.Generic.Queue{``0})
  name.vb: DequeueEach(Of T)(Queue(Of T))
  fullName: Open.Database.Extensions.Extensions.DequeueEach<T>(System.Collections.Generic.Queue<T>)
  fullName.vb: Open.Database.Extensions.Extensions.DequeueEach(Of T)(System.Collections.Generic.Queue(Of T))
  nameWithType: Extensions.DequeueEach<T>(Queue<T>)
  nameWithType.vb: Extensions.DequeueEach(Of T)(Queue(Of T))
- uid: Open.Database.Extensions.Extensions.EnsureOpen(System.Data.IDbConnection)
  name: EnsureOpen(IDbConnection)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_EnsureOpen_System_Data_IDbConnection_
  commentId: M:Open.Database.Extensions.Extensions.EnsureOpen(System.Data.IDbConnection)
  fullName: Open.Database.Extensions.Extensions.EnsureOpen(System.Data.IDbConnection)
  nameWithType: Extensions.EnsureOpen(IDbConnection)
- uid: Open.Database.Extensions.Extensions.EnsureOpen*
  name: EnsureOpen
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_EnsureOpen_
  commentId: Overload:Open.Database.Extensions.Extensions.EnsureOpen
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.EnsureOpen
  nameWithType: Extensions.EnsureOpen
- uid: Open.Database.Extensions.Extensions.EnsureOpenAsync(System.Data.Common.DbConnection,System.Nullable{System.Threading.CancellationToken})
  name: EnsureOpenAsync(DbConnection, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_EnsureOpenAsync_System_Data_Common_DbConnection_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.EnsureOpenAsync(System.Data.Common.DbConnection,System.Nullable{System.Threading.CancellationToken})
  name.vb: EnsureOpenAsync(DbConnection, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.EnsureOpenAsync(System.Data.Common.DbConnection, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.EnsureOpenAsync(System.Data.Common.DbConnection, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.EnsureOpenAsync(DbConnection, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.EnsureOpenAsync(DbConnection, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.EnsureOpenAsync*
  name: EnsureOpenAsync
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_EnsureOpenAsync_
  commentId: Overload:Open.Database.Extensions.Extensions.EnsureOpenAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.EnsureOpenAsync
  nameWithType: Extensions.EnsureOpenAsync
- uid: Open.Database.Extensions.Extensions.ExecuteReader(System.Data.IDbCommand,System.Action{System.Data.IDataReader},System.Data.CommandBehavior)
  name: ExecuteReader(IDbCommand, Action<IDataReader>, CommandBehavior)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteReader_System_Data_IDbCommand_System_Action_System_Data_IDataReader__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.Extensions.ExecuteReader(System.Data.IDbCommand,System.Action{System.Data.IDataReader},System.Data.CommandBehavior)
  name.vb: ExecuteReader(IDbCommand, Action(Of IDataReader), CommandBehavior)
  fullName: Open.Database.Extensions.Extensions.ExecuteReader(System.Data.IDbCommand, System.Action<System.Data.IDataReader>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteReader(System.Data.IDbCommand, System.Action(Of System.Data.IDataReader), System.Data.CommandBehavior)
  nameWithType: Extensions.ExecuteReader(IDbCommand, Action<IDataReader>, CommandBehavior)
  nameWithType.vb: Extensions.ExecuteReader(IDbCommand, Action(Of IDataReader), CommandBehavior)
- uid: Open.Database.Extensions.Extensions.ExecuteReader*
  name: ExecuteReader
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteReader_
  commentId: Overload:Open.Database.Extensions.Extensions.ExecuteReader
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ExecuteReader
  nameWithType: Extensions.ExecuteReader
- uid: Open.Database.Extensions.Extensions.ExecuteReader``1(System.Data.IDbCommand,System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior)
  name: ExecuteReader<T>(IDbCommand, Func<IDataReader, T>, CommandBehavior)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteReader__1_System_Data_IDbCommand_System_Func_System_Data_IDataReader___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.Extensions.ExecuteReader``1(System.Data.IDbCommand,System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior)
  name.vb: ExecuteReader(Of T)(IDbCommand, Func(Of IDataReader, T), CommandBehavior)
  fullName: Open.Database.Extensions.Extensions.ExecuteReader<T>(System.Data.IDbCommand, System.Func<System.Data.IDataReader, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteReader(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataReader, T), System.Data.CommandBehavior)
  nameWithType: Extensions.ExecuteReader<T>(IDbCommand, Func<IDataReader, T>, CommandBehavior)
  nameWithType.vb: Extensions.ExecuteReader(Of T)(IDbCommand, Func(Of IDataReader, T), CommandBehavior)
- uid: Open.Database.Extensions.Extensions.ExecuteReaderAsync(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name: ExecuteReaderAsync(DbCommand, Func<DbDataReader, Task>, CommandBehavior, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteReaderAsync_System_Data_Common_DbCommand_System_Func_System_Data_Common_DbDataReader_System_Threading_Tasks_Task__System_Data_CommandBehavior_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ExecuteReaderAsync(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteReaderAsync(DbCommand, Func(Of DbDataReader, Task), CommandBehavior, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ExecuteReaderAsync(System.Data.Common.DbCommand, System.Func<System.Data.Common.DbDataReader, System.Threading.Tasks.Task>, System.Data.CommandBehavior, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteReaderAsync(System.Data.Common.DbCommand, System.Func(Of System.Data.Common.DbDataReader, System.Threading.Tasks.Task), System.Data.CommandBehavior, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ExecuteReaderAsync(DbCommand, Func<DbDataReader, Task>, CommandBehavior, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ExecuteReaderAsync(DbCommand, Func(Of DbDataReader, Task), CommandBehavior, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ExecuteReaderAsync*
  name: ExecuteReaderAsync
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteReaderAsync_
  commentId: Overload:Open.Database.Extensions.Extensions.ExecuteReaderAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ExecuteReaderAsync
  nameWithType: Extensions.ExecuteReaderAsync
- uid: Open.Database.Extensions.Extensions.ExecuteReaderAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task{``0}},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name: ExecuteReaderAsync<T>(DbCommand, Func<DbDataReader, Task<T>>, CommandBehavior, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteReaderAsync__1_System_Data_Common_DbCommand_System_Func_System_Data_Common_DbDataReader_System_Threading_Tasks_Task___0___System_Data_CommandBehavior_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ExecuteReaderAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.Task{``0}},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteReaderAsync(Of T)(DbCommand, Func(Of DbDataReader, Task(Of T)), CommandBehavior, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ExecuteReaderAsync<T>(System.Data.Common.DbCommand, System.Func<System.Data.Common.DbDataReader, System.Threading.Tasks.Task<T>>, System.Data.CommandBehavior, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteReaderAsync(Of T)(System.Data.Common.DbCommand, System.Func(Of System.Data.Common.DbDataReader, System.Threading.Tasks.Task(Of T)), System.Data.CommandBehavior, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ExecuteReaderAsync<T>(DbCommand, Func<DbDataReader, Task<T>>, CommandBehavior, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ExecuteReaderAsync(Of T)(DbCommand, Func(Of DbDataReader, Task(Of T)), CommandBehavior, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ExecuteTransaction*
  name: ExecuteTransaction
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransaction_
  commentId: Overload:Open.Database.Extensions.Extensions.ExecuteTransaction
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ExecuteTransaction
  nameWithType: Extensions.ExecuteTransaction
- uid: Open.Database.Extensions.Extensions.ExecuteTransaction``1(``0,System.Action{``0},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteTransaction<TConn>(TConn, Action<TConn>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransaction__1___0_System_Action___0__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ExecuteTransaction``1(``0,System.Action{``0},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteTransaction(Of TConn)(TConn, Action(Of TConn), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ExecuteTransaction<TConn>(TConn, System.Action<TConn>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteTransaction(Of TConn)(TConn, System.Action(Of TConn), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ExecuteTransaction<TConn>(TConn, Action<TConn>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ExecuteTransaction(Of TConn)(TConn, Action(Of TConn), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ExecuteTransaction``2(``0,System.Func{``0,``1},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteTransaction<TConn, T>(TConn, Func<TConn, T>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransaction__2___0_System_Func___0___1__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ExecuteTransaction``2(``0,System.Func{``0,``1},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteTransaction(Of TConn, T)(TConn, Func(Of TConn, T), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ExecuteTransaction<TConn, T>(TConn, System.Func<TConn, T>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteTransaction(Of TConn, T)(TConn, System.Func(Of TConn, T), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ExecuteTransaction<TConn, T>(TConn, Func<TConn, T>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ExecuteTransaction(Of TConn, T)(TConn, Func(Of TConn, T), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ExecuteTransactionAsync*
  name: ExecuteTransactionAsync
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransactionAsync_
  commentId: Overload:Open.Database.Extensions.Extensions.ExecuteTransactionAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ExecuteTransactionAsync
  nameWithType: Extensions.ExecuteTransactionAsync
- uid: Open.Database.Extensions.Extensions.ExecuteTransactionAsync``1(``0,System.Func{``0,System.Threading.Tasks.Task},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteTransactionAsync<TConn>(TConn, Func<TConn, Task>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransactionAsync__1___0_System_Func___0_System_Threading_Tasks_Task__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ExecuteTransactionAsync``1(``0,System.Func{``0,System.Threading.Tasks.Task},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteTransactionAsync(Of TConn)(TConn, Func(Of TConn, Task), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ExecuteTransactionAsync<TConn>(TConn, System.Func<TConn, System.Threading.Tasks.Task>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteTransactionAsync(Of TConn)(TConn, System.Func(Of TConn, System.Threading.Tasks.Task), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ExecuteTransactionAsync<TConn>(TConn, Func<TConn, Task>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ExecuteTransactionAsync(Of TConn)(TConn, Func(Of TConn, Task), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ExecuteTransactionAsync``2(``0,System.Func{``0,System.Threading.Tasks.Task{``1}},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteTransactionAsync<TConn, T>(TConn, Func<TConn, Task<T>>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransactionAsync__2___0_System_Func___0_System_Threading_Tasks_Task___1___System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ExecuteTransactionAsync``2(``0,System.Func{``0,System.Threading.Tasks.Task{``1}},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteTransactionAsync(Of TConn, T)(TConn, Func(Of TConn, Task(Of T)), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ExecuteTransactionAsync<TConn, T>(TConn, System.Func<TConn, System.Threading.Tasks.Task<T>>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteTransactionAsync(Of TConn, T)(TConn, System.Func(Of TConn, System.Threading.Tasks.Task(Of T)), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ExecuteTransactionAsync<TConn, T>(TConn, Func<TConn, Task<T>>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ExecuteTransactionAsync(Of TConn, T)(TConn, Func(Of TConn, Task(Of T)), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ExecuteTransactionConditional*
  name: ExecuteTransactionConditional
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransactionConditional_
  commentId: Overload:Open.Database.Extensions.Extensions.ExecuteTransactionConditional
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ExecuteTransactionConditional
  nameWithType: Extensions.ExecuteTransactionConditional
- uid: Open.Database.Extensions.Extensions.ExecuteTransactionConditional``1(``0,System.Func{``0,System.Boolean},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteTransactionConditional<TConn>(TConn, Func<TConn, Boolean>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransactionConditional__1___0_System_Func___0_System_Boolean__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ExecuteTransactionConditional``1(``0,System.Func{``0,System.Boolean},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteTransactionConditional(Of TConn)(TConn, Func(Of TConn, Boolean), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ExecuteTransactionConditional<TConn>(TConn, System.Func<TConn, System.Boolean>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteTransactionConditional(Of TConn)(TConn, System.Func(Of TConn, System.Boolean), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ExecuteTransactionConditional<TConn>(TConn, Func<TConn, Boolean>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ExecuteTransactionConditional(Of TConn)(TConn, Func(Of TConn, Boolean), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ExecuteTransactionConditional``2(``0,System.Func{``0,System.ValueTuple{System.Boolean,``1}},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteTransactionConditional<TConn, T>(TConn, Func<TConn, >, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransactionConditional__2___0_System_Func___0_System_ValueTuple_System_Boolean___1___System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ExecuteTransactionConditional``2(``0,System.Func{``0,System.ValueTuple{System.Boolean,``1}},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteTransactionConditional(Of TConn, T)(TConn, Func(Of TConn, ), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ExecuteTransactionConditional<TConn, T>(TConn, System.Func<TConn, System.>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteTransactionConditional(Of TConn, T)(TConn, System.Func(Of TConn, System.), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ExecuteTransactionConditional<TConn, T>(TConn, Func<TConn, >, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ExecuteTransactionConditional(Of TConn, T)(TConn, Func(Of TConn, ), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ExecuteTransactionConditionalAsync*
  name: ExecuteTransactionConditionalAsync
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransactionConditionalAsync_
  commentId: Overload:Open.Database.Extensions.Extensions.ExecuteTransactionConditionalAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ExecuteTransactionConditionalAsync
  nameWithType: Extensions.ExecuteTransactionConditionalAsync
- uid: Open.Database.Extensions.Extensions.ExecuteTransactionConditionalAsync``2(``0,System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteTransactionConditionalAsync<TConn, T>(TConn, Func<TConn, Task<Boolean>>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransactionConditionalAsync__2___0_System_Func___0_System_Threading_Tasks_Task_System_Boolean___System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ExecuteTransactionConditionalAsync``2(``0,System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteTransactionConditionalAsync(Of TConn, T)(TConn, Func(Of TConn, Task(Of Boolean)), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ExecuteTransactionConditionalAsync<TConn, T>(TConn, System.Func<TConn, System.Threading.Tasks.Task<System.Boolean>>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteTransactionConditionalAsync(Of TConn, T)(TConn, System.Func(Of TConn, System.Threading.Tasks.Task(Of System.Boolean)), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ExecuteTransactionConditionalAsync<TConn, T>(TConn, Func<TConn, Task<Boolean>>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ExecuteTransactionConditionalAsync(Of TConn, T)(TConn, Func(Of TConn, Task(Of Boolean)), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ExecuteTransactionConditionalAsync``2(``0,System.Func{``0,System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,``1}}},System.Nullable{System.Threading.CancellationToken})
  name: ExecuteTransactionConditionalAsync<TConn, T>(TConn, Func<TConn, Task<>>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ExecuteTransactionConditionalAsync__2___0_System_Func___0_System_Threading_Tasks_Task_System_ValueTuple_System_Boolean___1____System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ExecuteTransactionConditionalAsync``2(``0,System.Func{``0,System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,``1}}},System.Nullable{System.Threading.CancellationToken})
  name.vb: ExecuteTransactionConditionalAsync(Of TConn, T)(TConn, Func(Of TConn, Task(Of )), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ExecuteTransactionConditionalAsync<TConn, T>(TConn, System.Func<TConn, System.Threading.Tasks.Task<System.>>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ExecuteTransactionConditionalAsync(Of TConn, T)(TConn, System.Func(Of TConn, System.Threading.Tasks.Task(Of System.)), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ExecuteTransactionConditionalAsync<TConn, T>(TConn, Func<TConn, Task<>>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ExecuteTransactionConditionalAsync(Of TConn, T)(TConn, Func(Of TConn, Task(Of )), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.First*
  name: First
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_First_
  commentId: Overload:Open.Database.Extensions.Extensions.First
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.First
  nameWithType: Extensions.First
- uid: Open.Database.Extensions.Extensions.First``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name: First<T>(IDbCommand, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_First__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.First``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name.vb: First(Of T)(IDbCommand, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.First<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.First(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.First<T>(IDbCommand, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.First(Of T)(IDbCommand, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.FirstOrDefault*
  name: FirstOrDefault
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrDefault_
  commentId: Overload:Open.Database.Extensions.Extensions.FirstOrDefault
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.FirstOrDefault
  nameWithType: Extensions.FirstOrDefault
- uid: Open.Database.Extensions.Extensions.FirstOrDefault``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name: FirstOrDefault<T>(IDbCommand, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrDefault__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.FirstOrDefault``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name.vb: FirstOrDefault(Of T)(IDbCommand, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.FirstOrDefault<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.FirstOrDefault(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.FirstOrDefault<T>(IDbCommand, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.FirstOrDefault(Of T)(IDbCommand, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.FirstOrdinalResults(System.Data.IDataReader)
  name: FirstOrdinalResults(IDataReader)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrdinalResults_System_Data_IDataReader_
  commentId: M:Open.Database.Extensions.Extensions.FirstOrdinalResults(System.Data.IDataReader)
  fullName: Open.Database.Extensions.Extensions.FirstOrdinalResults(System.Data.IDataReader)
  nameWithType: Extensions.FirstOrdinalResults(IDataReader)
- uid: Open.Database.Extensions.Extensions.FirstOrdinalResults(System.Data.IDbCommand)
  name: FirstOrdinalResults(IDbCommand)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrdinalResults_System_Data_IDbCommand_
  commentId: M:Open.Database.Extensions.Extensions.FirstOrdinalResults(System.Data.IDbCommand)
  fullName: Open.Database.Extensions.Extensions.FirstOrdinalResults(System.Data.IDbCommand)
  nameWithType: Extensions.FirstOrdinalResults(IDbCommand)
- uid: Open.Database.Extensions.Extensions.FirstOrdinalResults*
  name: FirstOrdinalResults
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrdinalResults_
  commentId: Overload:Open.Database.Extensions.Extensions.FirstOrdinalResults
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.FirstOrdinalResults
  nameWithType: Extensions.FirstOrdinalResults
- uid: Open.Database.Extensions.Extensions.FirstOrdinalResults``1(System.Data.IDataReader)
  name: FirstOrdinalResults<T0>(IDataReader)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrdinalResults__1_System_Data_IDataReader_
  commentId: M:Open.Database.Extensions.Extensions.FirstOrdinalResults``1(System.Data.IDataReader)
  name.vb: FirstOrdinalResults(Of T0)(IDataReader)
  fullName: Open.Database.Extensions.Extensions.FirstOrdinalResults<T0>(System.Data.IDataReader)
  fullName.vb: Open.Database.Extensions.Extensions.FirstOrdinalResults(Of T0)(System.Data.IDataReader)
  nameWithType: Extensions.FirstOrdinalResults<T0>(IDataReader)
  nameWithType.vb: Extensions.FirstOrdinalResults(Of T0)(IDataReader)
- uid: Open.Database.Extensions.Extensions.FirstOrdinalResults``1(System.Data.IDbCommand)
  name: FirstOrdinalResults<T0>(IDbCommand)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrdinalResults__1_System_Data_IDbCommand_
  commentId: M:Open.Database.Extensions.Extensions.FirstOrdinalResults``1(System.Data.IDbCommand)
  name.vb: FirstOrdinalResults(Of T0)(IDbCommand)
  fullName: Open.Database.Extensions.Extensions.FirstOrdinalResults<T0>(System.Data.IDbCommand)
  fullName.vb: Open.Database.Extensions.Extensions.FirstOrdinalResults(Of T0)(System.Data.IDbCommand)
  nameWithType: Extensions.FirstOrdinalResults<T0>(IDbCommand)
  nameWithType.vb: Extensions.FirstOrdinalResults(Of T0)(IDbCommand)
- uid: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync(System.Data.Common.DbCommand,System.Nullable{System.Threading.CancellationToken})
  name: FirstOrdinalResultsAsync(DbCommand, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrdinalResultsAsync_System_Data_Common_DbCommand_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync(System.Data.Common.DbCommand,System.Nullable{System.Threading.CancellationToken})
  name.vb: FirstOrdinalResultsAsync(DbCommand, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync(System.Data.Common.DbCommand, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync(System.Data.Common.DbCommand, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.FirstOrdinalResultsAsync(DbCommand, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.FirstOrdinalResultsAsync(DbCommand, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync(System.Data.Common.DbDataReader,System.Nullable{System.Threading.CancellationToken})
  name: FirstOrdinalResultsAsync(DbDataReader, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrdinalResultsAsync_System_Data_Common_DbDataReader_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync(System.Data.Common.DbDataReader,System.Nullable{System.Threading.CancellationToken})
  name.vb: FirstOrdinalResultsAsync(DbDataReader, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync(System.Data.Common.DbDataReader, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync(System.Data.Common.DbDataReader, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.FirstOrdinalResultsAsync(DbDataReader, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.FirstOrdinalResultsAsync(DbDataReader, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync*
  name: FirstOrdinalResultsAsync
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrdinalResultsAsync_
  commentId: Overload:Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync
  nameWithType: Extensions.FirstOrdinalResultsAsync
- uid: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync``1(System.Data.Common.DbCommand,System.Nullable{System.Threading.CancellationToken})
  name: FirstOrdinalResultsAsync<T0>(DbCommand, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrdinalResultsAsync__1_System_Data_Common_DbCommand_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync``1(System.Data.Common.DbCommand,System.Nullable{System.Threading.CancellationToken})
  name.vb: FirstOrdinalResultsAsync(Of T0)(DbCommand, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync<T0>(System.Data.Common.DbCommand, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync(Of T0)(System.Data.Common.DbCommand, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.FirstOrdinalResultsAsync<T0>(DbCommand, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.FirstOrdinalResultsAsync(Of T0)(DbCommand, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync``1(System.Data.Common.DbDataReader,System.Nullable{System.Threading.CancellationToken})
  name: FirstOrdinalResultsAsync<T0>(DbDataReader, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_FirstOrdinalResultsAsync__1_System_Data_Common_DbDataReader_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync``1(System.Data.Common.DbDataReader,System.Nullable{System.Threading.CancellationToken})
  name.vb: FirstOrdinalResultsAsync(Of T0)(DbDataReader, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync<T0>(System.Data.Common.DbDataReader, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.FirstOrdinalResultsAsync(Of T0)(System.Data.Common.DbDataReader, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.FirstOrdinalResultsAsync<T0>(DbDataReader, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.FirstOrdinalResultsAsync(Of T0)(DbDataReader, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ForEach(System.Data.IDataReader,System.Action{System.Data.IDataRecord})
  name: ForEach(IDataReader, Action<IDataRecord>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ForEach_System_Data_IDataReader_System_Action_System_Data_IDataRecord__
  commentId: M:Open.Database.Extensions.Extensions.ForEach(System.Data.IDataReader,System.Action{System.Data.IDataRecord})
  name.vb: ForEach(IDataReader, Action(Of IDataRecord))
  fullName: Open.Database.Extensions.Extensions.ForEach(System.Data.IDataReader, System.Action<System.Data.IDataRecord>)
  fullName.vb: Open.Database.Extensions.Extensions.ForEach(System.Data.IDataReader, System.Action(Of System.Data.IDataRecord))
  nameWithType: Extensions.ForEach(IDataReader, Action<IDataRecord>)
  nameWithType.vb: Extensions.ForEach(IDataReader, Action(Of IDataRecord))
- uid: Open.Database.Extensions.Extensions.ForEach*
  name: ForEach
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ForEach_
  commentId: Overload:Open.Database.Extensions.Extensions.ForEach
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ForEach
  nameWithType: Extensions.ForEach
- uid: Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbCommand,System.Action{System.Data.IDataRecord},System.Nullable{System.Threading.CancellationToken})
  name: ForEachAsync(DbCommand, Action<IDataRecord>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ForEachAsync_System_Data_Common_DbCommand_System_Action_System_Data_IDataRecord__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbCommand,System.Action{System.Data.IDataRecord},System.Nullable{System.Threading.CancellationToken})
  name.vb: ForEachAsync(DbCommand, Action(Of IDataRecord), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbCommand, System.Action<System.Data.IDataRecord>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbCommand, System.Action(Of System.Data.IDataRecord), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ForEachAsync(DbCommand, Action<IDataRecord>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ForEachAsync(DbCommand, Action(Of IDataRecord), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbDataReader,System.Action{System.Data.IDataRecord},System.Nullable{System.Threading.CancellationToken})
  name: ForEachAsync(DbDataReader, Action<IDataRecord>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ForEachAsync_System_Data_Common_DbDataReader_System_Action_System_Data_IDataRecord__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbDataReader,System.Action{System.Data.IDataRecord},System.Nullable{System.Threading.CancellationToken})
  name.vb: ForEachAsync(DbDataReader, Action(Of IDataRecord), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbDataReader, System.Action<System.Data.IDataRecord>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbDataReader, System.Action(Of System.Data.IDataRecord), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ForEachAsync(DbDataReader, Action<IDataRecord>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ForEachAsync(DbDataReader, Action(Of IDataRecord), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.Task},System.Nullable{System.Threading.CancellationToken})
  name: ForEachAsync(DbDataReader, Func<IDataRecord, Task>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ForEachAsync_System_Data_Common_DbDataReader_System_Func_System_Data_IDataRecord_System_Threading_Tasks_Task__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.Task},System.Nullable{System.Threading.CancellationToken})
  name.vb: ForEachAsync(DbDataReader, Func(Of IDataRecord, Task), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbDataReader, System.Func<System.Data.IDataRecord, System.Threading.Tasks.Task>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ForEachAsync(System.Data.Common.DbDataReader, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.Task), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ForEachAsync(DbDataReader, Func<IDataRecord, Task>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ForEachAsync(DbDataReader, Func(Of IDataRecord, Task), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ForEachAsync*
  name: ForEachAsync
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ForEachAsync_
  commentId: Overload:Open.Database.Extensions.Extensions.ForEachAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ForEachAsync
  nameWithType: Extensions.ForEachAsync
- uid: Open.Database.Extensions.Extensions.GetDataTypeNames(System.Data.IDataRecord)
  name: GetDataTypeNames(IDataRecord)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_GetDataTypeNames_System_Data_IDataRecord_
  commentId: M:Open.Database.Extensions.Extensions.GetDataTypeNames(System.Data.IDataRecord)
  fullName: Open.Database.Extensions.Extensions.GetDataTypeNames(System.Data.IDataRecord)
  nameWithType: Extensions.GetDataTypeNames(IDataRecord)
- uid: Open.Database.Extensions.Extensions.GetDataTypeNames*
  name: GetDataTypeNames
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_GetDataTypeNames_
  commentId: Overload:Open.Database.Extensions.Extensions.GetDataTypeNames
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.GetDataTypeNames
  nameWithType: Extensions.GetDataTypeNames
- uid: Open.Database.Extensions.Extensions.GetMatchingOrdinals(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name: GetMatchingOrdinals(IDataRecord, IEnumerable<String>, Boolean)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_GetMatchingOrdinals_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_String__System_Boolean_
  commentId: M:Open.Database.Extensions.Extensions.GetMatchingOrdinals(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name.vb: GetMatchingOrdinals(IDataRecord, IEnumerable(Of String), Boolean)
  fullName: Open.Database.Extensions.Extensions.GetMatchingOrdinals(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.String>, System.Boolean)
  fullName.vb: Open.Database.Extensions.Extensions.GetMatchingOrdinals(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean)
  nameWithType: Extensions.GetMatchingOrdinals(IDataRecord, IEnumerable<String>, Boolean)
  nameWithType.vb: Extensions.GetMatchingOrdinals(IDataRecord, IEnumerable(Of String), Boolean)
- uid: Open.Database.Extensions.Extensions.GetMatchingOrdinals*
  name: GetMatchingOrdinals
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_GetMatchingOrdinals_
  commentId: Overload:Open.Database.Extensions.Extensions.GetMatchingOrdinals
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.GetMatchingOrdinals
  nameWithType: Extensions.GetMatchingOrdinals
- uid: Open.Database.Extensions.Extensions.GetNames(System.Data.IDataRecord)
  name: GetNames(IDataRecord)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_GetNames_System_Data_IDataRecord_
  commentId: M:Open.Database.Extensions.Extensions.GetNames(System.Data.IDataRecord)
  fullName: Open.Database.Extensions.Extensions.GetNames(System.Data.IDataRecord)
  nameWithType: Extensions.GetNames(IDataRecord)
- uid: Open.Database.Extensions.Extensions.GetNames*
  name: GetNames
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_GetNames_
  commentId: Overload:Open.Database.Extensions.Extensions.GetNames
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.GetNames
  nameWithType: Extensions.GetNames
- uid: Open.Database.Extensions.Extensions.GetOrdinalMapping(System.Data.IDataRecord)
  name: GetOrdinalMapping(IDataRecord)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_GetOrdinalMapping_System_Data_IDataRecord_
  commentId: M:Open.Database.Extensions.Extensions.GetOrdinalMapping(System.Data.IDataRecord)
  fullName: Open.Database.Extensions.Extensions.GetOrdinalMapping(System.Data.IDataRecord)
  nameWithType: Extensions.GetOrdinalMapping(IDataRecord)
- uid: Open.Database.Extensions.Extensions.GetOrdinalMapping(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name: GetOrdinalMapping(IDataRecord, IEnumerable<String>, Boolean)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_GetOrdinalMapping_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_String__System_Boolean_
  commentId: M:Open.Database.Extensions.Extensions.GetOrdinalMapping(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name.vb: GetOrdinalMapping(IDataRecord, IEnumerable(Of String), Boolean)
  fullName: Open.Database.Extensions.Extensions.GetOrdinalMapping(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.String>, System.Boolean)
  fullName.vb: Open.Database.Extensions.Extensions.GetOrdinalMapping(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean)
  nameWithType: Extensions.GetOrdinalMapping(IDataRecord, IEnumerable<String>, Boolean)
  nameWithType.vb: Extensions.GetOrdinalMapping(IDataRecord, IEnumerable(Of String), Boolean)
- uid: Open.Database.Extensions.Extensions.GetOrdinalMapping*
  name: GetOrdinalMapping
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_GetOrdinalMapping_
  commentId: Overload:Open.Database.Extensions.Extensions.GetOrdinalMapping
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.GetOrdinalMapping
  nameWithType: Extensions.GetOrdinalMapping
- uid: Open.Database.Extensions.Extensions.GetValuesFromOrdinals(System.Data.IDataRecord,System.Int32[])
  name: GetValuesFromOrdinals(IDataRecord, Int32[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_GetValuesFromOrdinals_System_Data_IDataRecord_System_Int32___
  commentId: M:Open.Database.Extensions.Extensions.GetValuesFromOrdinals(System.Data.IDataRecord,System.Int32[])
  name.vb: GetValuesFromOrdinals(IDataRecord, Int32())
  fullName: Open.Database.Extensions.Extensions.GetValuesFromOrdinals(System.Data.IDataRecord, System.Int32[])
  fullName.vb: Open.Database.Extensions.Extensions.GetValuesFromOrdinals(System.Data.IDataRecord, System.Int32())
  nameWithType: Extensions.GetValuesFromOrdinals(IDataRecord, Int32[])
  nameWithType.vb: Extensions.GetValuesFromOrdinals(IDataRecord, Int32())
- uid: Open.Database.Extensions.Extensions.GetValuesFromOrdinals*
  name: GetValuesFromOrdinals
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_GetValuesFromOrdinals_
  commentId: Overload:Open.Database.Extensions.Extensions.GetValuesFromOrdinals
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.GetValuesFromOrdinals
  nameWithType: Extensions.GetValuesFromOrdinals
- uid: Open.Database.Extensions.Extensions.Iterate*
  name: Iterate
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Iterate_
  commentId: Overload:Open.Database.Extensions.Extensions.Iterate
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.Iterate
  nameWithType: Extensions.Iterate
- uid: Open.Database.Extensions.Extensions.Iterate``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name: Iterate<T>(IDataReader, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Iterate__1_System_Data_IDataReader_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.Iterate``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name.vb: Iterate(Of T)(IDataReader, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.Iterate<T>(System.Data.IDataReader, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.Iterate(Of T)(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.Iterate<T>(IDataReader, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.Iterate(Of T)(IDataReader, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.IterateReader(System.Data.IDbCommand,System.Action{System.Data.IDataRecord})
  name: IterateReader(IDbCommand, Action<IDataRecord>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateReader_System_Data_IDbCommand_System_Action_System_Data_IDataRecord__
  commentId: M:Open.Database.Extensions.Extensions.IterateReader(System.Data.IDbCommand,System.Action{System.Data.IDataRecord})
  name.vb: IterateReader(IDbCommand, Action(Of IDataRecord))
  fullName: Open.Database.Extensions.Extensions.IterateReader(System.Data.IDbCommand, System.Action<System.Data.IDataRecord>)
  fullName.vb: Open.Database.Extensions.Extensions.IterateReader(System.Data.IDbCommand, System.Action(Of System.Data.IDataRecord))
  nameWithType: Extensions.IterateReader(IDbCommand, Action<IDataRecord>)
  nameWithType.vb: Extensions.IterateReader(IDbCommand, Action(Of IDataRecord))
- uid: Open.Database.Extensions.Extensions.IterateReader(System.Data.IDbCommand,System.Data.CommandBehavior,System.Action{System.Data.IDataRecord})
  name: IterateReader(IDbCommand, CommandBehavior, Action<IDataRecord>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateReader_System_Data_IDbCommand_System_Data_CommandBehavior_System_Action_System_Data_IDataRecord__
  commentId: M:Open.Database.Extensions.Extensions.IterateReader(System.Data.IDbCommand,System.Data.CommandBehavior,System.Action{System.Data.IDataRecord})
  name.vb: IterateReader(IDbCommand, CommandBehavior, Action(Of IDataRecord))
  fullName: Open.Database.Extensions.Extensions.IterateReader(System.Data.IDbCommand, System.Data.CommandBehavior, System.Action<System.Data.IDataRecord>)
  fullName.vb: Open.Database.Extensions.Extensions.IterateReader(System.Data.IDbCommand, System.Data.CommandBehavior, System.Action(Of System.Data.IDataRecord))
  nameWithType: Extensions.IterateReader(IDbCommand, CommandBehavior, Action<IDataRecord>)
  nameWithType.vb: Extensions.IterateReader(IDbCommand, CommandBehavior, Action(Of IDataRecord))
- uid: Open.Database.Extensions.Extensions.IterateReader*
  name: IterateReader
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateReader_
  commentId: Overload:Open.Database.Extensions.Extensions.IterateReader
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.IterateReader
  nameWithType: Extensions.IterateReader
- uid: Open.Database.Extensions.Extensions.IterateReader``2(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})
  name: IterateReader<TEntity, TResult>(IDbCommand, CommandBehavior, Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateReader__2_System_Data_IDbCommand_System_Data_CommandBehavior_System_Func_System_Data_IDataRecord___0__System_Func_System_Collections_Generic_IEnumerable___0____1__
  commentId: M:Open.Database.Extensions.Extensions.IterateReader``2(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})
  name.vb: IterateReader(Of TEntity, TResult)(IDbCommand, CommandBehavior, Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult))
  fullName: Open.Database.Extensions.Extensions.IterateReader<TEntity, TResult>(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func<System.Data.IDataRecord, TEntity>, System.Func<System.Collections.Generic.IEnumerable<TEntity>, TResult>)
  fullName.vb: Open.Database.Extensions.Extensions.IterateReader(Of TEntity, TResult)(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func(Of System.Data.IDataRecord, TEntity), System.Func(Of System.Collections.Generic.IEnumerable(Of TEntity), TResult))
  nameWithType: Extensions.IterateReader<TEntity, TResult>(IDbCommand, CommandBehavior, Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>)
  nameWithType.vb: Extensions.IterateReader(Of TEntity, TResult)(IDbCommand, CommandBehavior, Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult))
- uid: Open.Database.Extensions.Extensions.IterateReader``2(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})
  name: IterateReader<TEntity, TResult>(IDbCommand, Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateReader__2_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__System_Func_System_Collections_Generic_IEnumerable___0____1__
  commentId: M:Open.Database.Extensions.Extensions.IterateReader``2(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})
  name.vb: IterateReader(Of TEntity, TResult)(IDbCommand, Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult))
  fullName: Open.Database.Extensions.Extensions.IterateReader<TEntity, TResult>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, TEntity>, System.Func<System.Collections.Generic.IEnumerable<TEntity>, TResult>)
  fullName.vb: Open.Database.Extensions.Extensions.IterateReader(Of TEntity, TResult)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, TEntity), System.Func(Of System.Collections.Generic.IEnumerable(Of TEntity), TResult))
  nameWithType: Extensions.IterateReader<TEntity, TResult>(IDbCommand, Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>)
  nameWithType.vb: Extensions.IterateReader(Of TEntity, TResult)(IDbCommand, Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult))
- uid: Open.Database.Extensions.Extensions.IterateReaderAsyncWhile(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Boolean},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name: IterateReaderAsyncWhile(DbCommand, Func<IDataRecord, Boolean>, CommandBehavior, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateReaderAsyncWhile_System_Data_Common_DbCommand_System_Func_System_Data_IDataRecord_System_Boolean__System_Data_CommandBehavior_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.IterateReaderAsyncWhile(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Boolean},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name.vb: IterateReaderAsyncWhile(DbCommand, Func(Of IDataRecord, Boolean), CommandBehavior, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.IterateReaderAsyncWhile(System.Data.Common.DbCommand, System.Func<System.Data.IDataRecord, System.Boolean>, System.Data.CommandBehavior, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.IterateReaderAsyncWhile(System.Data.Common.DbCommand, System.Func(Of System.Data.IDataRecord, System.Boolean), System.Data.CommandBehavior, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.IterateReaderAsyncWhile(DbCommand, Func<IDataRecord, Boolean>, CommandBehavior, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.IterateReaderAsyncWhile(DbCommand, Func(Of IDataRecord, Boolean), CommandBehavior, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.IterateReaderAsyncWhile(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Threading.Tasks.Task{System.Boolean}},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name: IterateReaderAsyncWhile(DbCommand, Func<IDataRecord, Task<Boolean>>, CommandBehavior, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateReaderAsyncWhile_System_Data_Common_DbCommand_System_Func_System_Data_IDataRecord_System_Threading_Tasks_Task_System_Boolean___System_Data_CommandBehavior_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.IterateReaderAsyncWhile(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Threading.Tasks.Task{System.Boolean}},System.Data.CommandBehavior,System.Nullable{System.Threading.CancellationToken})
  name.vb: IterateReaderAsyncWhile(DbCommand, Func(Of IDataRecord, Task(Of Boolean)), CommandBehavior, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.IterateReaderAsyncWhile(System.Data.Common.DbCommand, System.Func<System.Data.IDataRecord, System.Threading.Tasks.Task<System.Boolean>>, System.Data.CommandBehavior, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.IterateReaderAsyncWhile(System.Data.Common.DbCommand, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.Task(Of System.Boolean)), System.Data.CommandBehavior, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.IterateReaderAsyncWhile(DbCommand, Func<IDataRecord, Task<Boolean>>, CommandBehavior, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.IterateReaderAsyncWhile(DbCommand, Func(Of IDataRecord, Task(Of Boolean)), CommandBehavior, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.IterateReaderAsyncWhile*
  name: IterateReaderAsyncWhile
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateReaderAsyncWhile_
  commentId: Overload:Open.Database.Extensions.Extensions.IterateReaderAsyncWhile
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.IterateReaderAsyncWhile
  nameWithType: Extensions.IterateReaderAsyncWhile
- uid: Open.Database.Extensions.Extensions.IterateReaderWhile(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,System.Boolean},System.Data.CommandBehavior)
  name: IterateReaderWhile(IDbCommand, Func<IDataRecord, Boolean>, CommandBehavior)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateReaderWhile_System_Data_IDbCommand_System_Func_System_Data_IDataRecord_System_Boolean__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.Extensions.IterateReaderWhile(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,System.Boolean},System.Data.CommandBehavior)
  name.vb: IterateReaderWhile(IDbCommand, Func(Of IDataRecord, Boolean), CommandBehavior)
  fullName: Open.Database.Extensions.Extensions.IterateReaderWhile(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, System.Boolean>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.Extensions.IterateReaderWhile(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, System.Boolean), System.Data.CommandBehavior)
  nameWithType: Extensions.IterateReaderWhile(IDbCommand, Func<IDataRecord, Boolean>, CommandBehavior)
  nameWithType.vb: Extensions.IterateReaderWhile(IDbCommand, Func(Of IDataRecord, Boolean), CommandBehavior)
- uid: Open.Database.Extensions.Extensions.IterateReaderWhile*
  name: IterateReaderWhile
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateReaderWhile_
  commentId: Overload:Open.Database.Extensions.Extensions.IterateReaderWhile
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.IterateReaderWhile
  nameWithType: Extensions.IterateReaderWhile
- uid: Open.Database.Extensions.Extensions.IterateWhile(System.Data.IDataReader,System.Func{System.Data.IDataRecord,System.Boolean})
  name: IterateWhile(IDataReader, Func<IDataRecord, Boolean>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateWhile_System_Data_IDataReader_System_Func_System_Data_IDataRecord_System_Boolean__
  commentId: M:Open.Database.Extensions.Extensions.IterateWhile(System.Data.IDataReader,System.Func{System.Data.IDataRecord,System.Boolean})
  name.vb: IterateWhile(IDataReader, Func(Of IDataRecord, Boolean))
  fullName: Open.Database.Extensions.Extensions.IterateWhile(System.Data.IDataReader, System.Func<System.Data.IDataRecord, System.Boolean>)
  fullName.vb: Open.Database.Extensions.Extensions.IterateWhile(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, System.Boolean))
  nameWithType: Extensions.IterateWhile(IDataReader, Func<IDataRecord, Boolean>)
  nameWithType.vb: Extensions.IterateWhile(IDataReader, Func(Of IDataRecord, Boolean))
- uid: Open.Database.Extensions.Extensions.IterateWhile*
  name: IterateWhile
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_IterateWhile_
  commentId: Overload:Open.Database.Extensions.Extensions.IterateWhile
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.IterateWhile
  nameWithType: Extensions.IterateWhile
- uid: Open.Database.Extensions.Extensions.ReplaceDBNullWithNull(System.Object[])
  name: ReplaceDBNullWithNull(Object[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ReplaceDBNullWithNull_System_Object___
  commentId: M:Open.Database.Extensions.Extensions.ReplaceDBNullWithNull(System.Object[])
  name.vb: ReplaceDBNullWithNull(Object())
  fullName: Open.Database.Extensions.Extensions.ReplaceDBNullWithNull(System.Object[])
  fullName.vb: Open.Database.Extensions.Extensions.ReplaceDBNullWithNull(System.Object())
  nameWithType: Extensions.ReplaceDBNullWithNull(Object[])
  nameWithType.vb: Extensions.ReplaceDBNullWithNull(Object())
- uid: Open.Database.Extensions.Extensions.ReplaceDBNullWithNull*
  name: ReplaceDBNullWithNull
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ReplaceDBNullWithNull_
  commentId: Overload:Open.Database.Extensions.Extensions.ReplaceDBNullWithNull
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ReplaceDBNullWithNull
  nameWithType: Extensions.ReplaceDBNullWithNull
- uid: Open.Database.Extensions.Extensions.Results*
  name: Results
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Results_
  commentId: Overload:Open.Database.Extensions.Extensions.Results
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.Results
  nameWithType: Extensions.Results
- uid: Open.Database.Extensions.Extensions.Results``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: Results<T>(IDataReader, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Results__1_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.Results``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: Results(Of T)(IDataReader, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.Extensions.Results<T>(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Extensions.Results(Of T)(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: Extensions.Results<T>(IDataReader, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: Extensions.Results(Of T)(IDataReader, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.Extensions.Results``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: Results<T>(IDataReader, IEnumerable<>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Results__1_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.Results``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: Results(Of T)(IDataReader, IEnumerable(Of ))
  fullName: Open.Database.Extensions.Extensions.Results<T>(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.>)
  fullName.vb: Open.Database.Extensions.Extensions.Results(Of T)(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.))
  nameWithType: Extensions.Results<T>(IDataReader, IEnumerable<>)
  nameWithType.vb: Extensions.Results(Of T)(IDataReader, IEnumerable(Of ))
- uid: Open.Database.Extensions.Extensions.Results``1(System.Data.IDataReader,System.ValueTuple{System.String,System.String}[])
  name: Results<T>(IDataReader, [])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Results__1_System_Data_IDataReader_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.Extensions.Results``1(System.Data.IDataReader,System.ValueTuple{System.String,System.String}[])
  name.vb: Results(Of T)(IDataReader, ())
  fullName: Open.Database.Extensions.Extensions.Results<T>(System.Data.IDataReader, System.[])
  fullName.vb: Open.Database.Extensions.Extensions.Results(Of T)(System.Data.IDataReader, System.())
  nameWithType: Extensions.Results<T>(IDataReader, [])
  nameWithType.vb: Extensions.Results(Of T)(IDataReader, ())
- uid: Open.Database.Extensions.Extensions.Results``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: Results<T>(IDbCommand, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Results__1_System_Data_IDbCommand_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.Results``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: Results(Of T)(IDbCommand, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.Extensions.Results<T>(System.Data.IDbCommand, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Extensions.Results(Of T)(System.Data.IDbCommand, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: Extensions.Results<T>(IDbCommand, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: Extensions.Results(Of T)(IDbCommand, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.Extensions.Results``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: Results<T>(IDbCommand, IEnumerable<>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Results__1_System_Data_IDbCommand_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.Results``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: Results(Of T)(IDbCommand, IEnumerable(Of ))
  fullName: Open.Database.Extensions.Extensions.Results<T>(System.Data.IDbCommand, System.Collections.Generic.IEnumerable<System.>)
  fullName.vb: Open.Database.Extensions.Extensions.Results(Of T)(System.Data.IDbCommand, System.Collections.Generic.IEnumerable(Of System.))
  nameWithType: Extensions.Results<T>(IDbCommand, IEnumerable<>)
  nameWithType.vb: Extensions.Results(Of T)(IDbCommand, IEnumerable(Of ))
- uid: Open.Database.Extensions.Extensions.Results``1(System.Data.IDbCommand,System.ValueTuple{System.String,System.String}[])
  name: Results<T>(IDbCommand, [])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Results__1_System_Data_IDbCommand_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.Extensions.Results``1(System.Data.IDbCommand,System.ValueTuple{System.String,System.String}[])
  name.vb: Results(Of T)(IDbCommand, ())
  fullName: Open.Database.Extensions.Extensions.Results<T>(System.Data.IDbCommand, System.[])
  fullName.vb: Open.Database.Extensions.Extensions.Results(Of T)(System.Data.IDbCommand, System.())
  nameWithType: Extensions.Results<T>(IDbCommand, [])
  nameWithType.vb: Extensions.Results(Of T)(IDbCommand, ())
- uid: Open.Database.Extensions.Extensions.ResultsAsync*
  name: ResultsAsync
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsAsync_
  commentId: Overload:Open.Database.Extensions.Extensions.ResultsAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ResultsAsync
  nameWithType: Extensions.ResultsAsync
- uid: Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Nullable{System.Threading.CancellationToken})
  name: ResultsAsync<T>(DbCommand, IEnumerable<KeyValuePair<String, String>>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsAsync__1_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Nullable{System.Threading.CancellationToken})
  name.vb: ResultsAsync(Of T)(DbCommand, IEnumerable(Of KeyValuePair(Of String, String)), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ResultsAsync<T>(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ResultsAsync(Of T)(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ResultsAsync<T>(DbCommand, IEnumerable<KeyValuePair<String, String>>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ResultsAsync(Of T)(DbCommand, IEnumerable(Of KeyValuePair(Of String, String)), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Nullable{System.Threading.CancellationToken})
  name: ResultsAsync<T>(DbCommand, IEnumerable<>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsAsync__1_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Nullable{System.Threading.CancellationToken})
  name.vb: ResultsAsync(Of T)(DbCommand, IEnumerable(Of ), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ResultsAsync<T>(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ResultsAsync(Of T)(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ResultsAsync<T>(DbCommand, IEnumerable<>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ResultsAsync(Of T)(DbCommand, IEnumerable(Of ), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  name: ResultsAsync<T>(DbCommand, CancellationToken, [])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsAsync__1_System_Data_Common_DbCommand_System_Threading_CancellationToken_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  name.vb: ResultsAsync(Of T)(DbCommand, CancellationToken, ())
  fullName: Open.Database.Extensions.Extensions.ResultsAsync<T>(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.[])
  fullName.vb: Open.Database.Extensions.Extensions.ResultsAsync(Of T)(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.())
  nameWithType: Extensions.ResultsAsync<T>(DbCommand, CancellationToken, [])
  nameWithType.vb: Extensions.ResultsAsync(Of T)(DbCommand, CancellationToken, ())
- uid: Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbCommand,System.ValueTuple{System.String,System.String}[])
  name: ResultsAsync<T>(DbCommand, [])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsAsync__1_System_Data_Common_DbCommand_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbCommand,System.ValueTuple{System.String,System.String}[])
  name.vb: ResultsAsync(Of T)(DbCommand, ())
  fullName: Open.Database.Extensions.Extensions.ResultsAsync<T>(System.Data.Common.DbCommand, System.[])
  fullName.vb: Open.Database.Extensions.Extensions.ResultsAsync(Of T)(System.Data.Common.DbCommand, System.())
  nameWithType: Extensions.ResultsAsync<T>(DbCommand, [])
  nameWithType.vb: Extensions.ResultsAsync(Of T)(DbCommand, ())
- uid: Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Nullable{System.Threading.CancellationToken})
  name: ResultsAsync<T>(DbDataReader, IEnumerable<KeyValuePair<String, String>>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsAsync__1_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Nullable{System.Threading.CancellationToken})
  name.vb: ResultsAsync(Of T)(DbDataReader, IEnumerable(Of KeyValuePair(Of String, String)), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ResultsAsync<T>(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ResultsAsync(Of T)(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ResultsAsync<T>(DbDataReader, IEnumerable<KeyValuePair<String, String>>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ResultsAsync(Of T)(DbDataReader, IEnumerable(Of KeyValuePair(Of String, String)), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Nullable{System.Threading.CancellationToken})
  name: ResultsAsync<T>(DbDataReader, IEnumerable<>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsAsync__1_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Nullable{System.Threading.CancellationToken})
  name.vb: ResultsAsync(Of T)(DbDataReader, IEnumerable(Of ), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ResultsAsync<T>(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ResultsAsync(Of T)(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ResultsAsync<T>(DbDataReader, IEnumerable<>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ResultsAsync(Of T)(DbDataReader, IEnumerable(Of ), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  name: ResultsAsync<T>(DbDataReader, CancellationToken, [])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsAsync__1_System_Data_Common_DbDataReader_System_Threading_CancellationToken_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  name.vb: ResultsAsync(Of T)(DbDataReader, CancellationToken, ())
  fullName: Open.Database.Extensions.Extensions.ResultsAsync<T>(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.[])
  fullName.vb: Open.Database.Extensions.Extensions.ResultsAsync(Of T)(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.())
  nameWithType: Extensions.ResultsAsync<T>(DbDataReader, CancellationToken, [])
  nameWithType.vb: Extensions.ResultsAsync(Of T)(DbDataReader, CancellationToken, ())
- uid: Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.ValueTuple{System.String,System.String}[])
  name: ResultsAsync<T>(DbDataReader, [])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsAsync__1_System_Data_Common_DbDataReader_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.Extensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.ValueTuple{System.String,System.String}[])
  name.vb: ResultsAsync(Of T)(DbDataReader, ())
  fullName: Open.Database.Extensions.Extensions.ResultsAsync<T>(System.Data.Common.DbDataReader, System.[])
  fullName.vb: Open.Database.Extensions.Extensions.ResultsAsync(Of T)(System.Data.Common.DbDataReader, System.())
  nameWithType: Extensions.ResultsAsync<T>(DbDataReader, [])
  nameWithType.vb: Extensions.ResultsAsync(Of T)(DbDataReader, ())
- uid: Open.Database.Extensions.Extensions.ResultsFromDataTable*
  name: ResultsFromDataTable
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsFromDataTable_
  commentId: Overload:Open.Database.Extensions.Extensions.ResultsFromDataTable
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ResultsFromDataTable
  nameWithType: Extensions.ResultsFromDataTable
- uid: Open.Database.Extensions.Extensions.ResultsFromDataTable``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: ResultsFromDataTable<T>(IDataReader, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsFromDataTable__1_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.ResultsFromDataTable``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: ResultsFromDataTable(Of T)(IDataReader, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.Extensions.ResultsFromDataTable<T>(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Extensions.ResultsFromDataTable(Of T)(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: Extensions.ResultsFromDataTable<T>(IDataReader, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: Extensions.ResultsFromDataTable(Of T)(IDataReader, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.Extensions.ResultsFromDataTable``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: ResultsFromDataTable<T>(IDbCommand, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ResultsFromDataTable__1_System_Data_IDbCommand_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.ResultsFromDataTable``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: ResultsFromDataTable(Of T)(IDbCommand, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.Extensions.ResultsFromDataTable<T>(System.Data.IDbCommand, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Extensions.ResultsFromDataTable(Of T)(System.Data.IDbCommand, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: Extensions.ResultsFromDataTable<T>(IDbCommand, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: Extensions.ResultsFromDataTable(Of T)(IDbCommand, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader)
  name: Retrieve(IDataReader)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Retrieve_System_Data_IDataReader_
  commentId: M:Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader)
  fullName: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader)
  nameWithType: Extensions.Retrieve(IDataReader)
- uid: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Int32})
  name: Retrieve(IDataReader, IEnumerable<Int32>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Retrieve_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: Retrieve(IDataReader, IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: Extensions.Retrieve(IDataReader, IEnumerable<Int32>)
  nameWithType.vb: Extensions.Retrieve(IDataReader, IEnumerable(Of Int32))
- uid: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.String})
  name: Retrieve(IDataReader, IEnumerable<String>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Retrieve_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.String})
  name.vb: Retrieve(IDataReader, IEnumerable(Of String))
  fullName: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: Extensions.Retrieve(IDataReader, IEnumerable<String>)
  nameWithType.vb: Extensions.Retrieve(IDataReader, IEnumerable(Of String))
- uid: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader,System.Int32,System.Int32[])
  name: Retrieve(IDataReader, Int32, Int32[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Retrieve_System_Data_IDataReader_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader,System.Int32,System.Int32[])
  name.vb: Retrieve(IDataReader, Int32, Int32())
  fullName: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader, System.Int32, System.Int32())
  nameWithType: Extensions.Retrieve(IDataReader, Int32, Int32[])
  nameWithType.vb: Extensions.Retrieve(IDataReader, Int32, Int32())
- uid: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader,System.String,System.String[])
  name: Retrieve(IDataReader, String, String[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Retrieve_System_Data_IDataReader_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader,System.String,System.String[])
  name.vb: Retrieve(IDataReader, String, String())
  fullName: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDataReader, System.String, System.String())
  nameWithType: Extensions.Retrieve(IDataReader, String, String[])
  nameWithType.vb: Extensions.Retrieve(IDataReader, String, String())
- uid: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand)
  name: Retrieve(IDbCommand)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Retrieve_System_Data_IDbCommand_
  commentId: M:Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand)
  fullName: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand)
  nameWithType: Extensions.Retrieve(IDbCommand)
- uid: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Int32})
  name: Retrieve(IDbCommand, IEnumerable<Int32>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Retrieve_System_Data_IDbCommand_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: Retrieve(IDbCommand, IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand, System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand, System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: Extensions.Retrieve(IDbCommand, IEnumerable<Int32>)
  nameWithType.vb: Extensions.Retrieve(IDbCommand, IEnumerable(Of Int32))
- uid: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.String})
  name: Retrieve(IDbCommand, IEnumerable<String>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Retrieve_System_Data_IDbCommand_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.String})
  name.vb: Retrieve(IDbCommand, IEnumerable(Of String))
  fullName: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand, System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: Extensions.Retrieve(IDbCommand, IEnumerable<String>)
  nameWithType.vb: Extensions.Retrieve(IDbCommand, IEnumerable(Of String))
- uid: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand,System.Int32,System.Int32[])
  name: Retrieve(IDbCommand, Int32, Int32[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Retrieve_System_Data_IDbCommand_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand,System.Int32,System.Int32[])
  name.vb: Retrieve(IDbCommand, Int32, Int32())
  fullName: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand, System.Int32, System.Int32())
  nameWithType: Extensions.Retrieve(IDbCommand, Int32, Int32[])
  nameWithType.vb: Extensions.Retrieve(IDbCommand, Int32, Int32())
- uid: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand,System.String,System.String[])
  name: Retrieve(IDbCommand, String, String[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Retrieve_System_Data_IDbCommand_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand,System.String,System.String[])
  name.vb: Retrieve(IDbCommand, String, String())
  fullName: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.Extensions.Retrieve(System.Data.IDbCommand, System.String, System.String())
  nameWithType: Extensions.Retrieve(IDbCommand, String, String[])
  nameWithType.vb: Extensions.Retrieve(IDbCommand, String, String())
- uid: Open.Database.Extensions.Extensions.Retrieve*
  name: Retrieve
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Retrieve_
  commentId: Overload:Open.Database.Extensions.Extensions.Retrieve
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.Retrieve
  nameWithType: Extensions.Retrieve
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Threading.CancellationToken})
  name: RetrieveAsync(DbCommand, IEnumerable<Int32>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_Int32__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Threading.CancellationToken})
  name.vb: RetrieveAsync(DbCommand, IEnumerable(Of Int32), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.Int32>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.Int32), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.RetrieveAsync(DbCommand, IEnumerable<Int32>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.RetrieveAsync(DbCommand, IEnumerable(Of Int32), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Nullable{System.Threading.CancellationToken})
  name: RetrieveAsync(DbCommand, IEnumerable<String>, Boolean, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_String__System_Boolean_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Nullable{System.Threading.CancellationToken})
  name.vb: RetrieveAsync(DbCommand, IEnumerable(Of String), Boolean, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.String>, System.Boolean, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.RetrieveAsync(DbCommand, IEnumerable<String>, Boolean, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.RetrieveAsync(DbCommand, IEnumerable(Of String), Boolean, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.Int32,System.Int32[])
  name: RetrieveAsync(DbCommand, Int32, Int32[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbCommand_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.Int32,System.Int32[])
  name.vb: RetrieveAsync(DbCommand, Int32, Int32())
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.Int32, System.Int32())
  nameWithType: Extensions.RetrieveAsync(DbCommand, Int32, Int32[])
  nameWithType.vb: Extensions.RetrieveAsync(DbCommand, Int32, Int32())
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.String,System.String[])
  name: RetrieveAsync(DbCommand, String, String[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbCommand_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.String,System.String[])
  name.vb: RetrieveAsync(DbCommand, String, String())
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.String, System.String())
  nameWithType: Extensions.RetrieveAsync(DbCommand, String, String[])
  nameWithType.vb: Extensions.RetrieveAsync(DbCommand, String, String())
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.Int32,System.Int32[])
  name: RetrieveAsync(DbCommand, CancellationToken, Int32, Int32[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbCommand_System_Threading_CancellationToken_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.Int32,System.Int32[])
  name.vb: RetrieveAsync(DbCommand, CancellationToken, Int32, Int32())
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.Int32, System.Int32())
  nameWithType: Extensions.RetrieveAsync(DbCommand, CancellationToken, Int32, Int32[])
  nameWithType.vb: Extensions.RetrieveAsync(DbCommand, CancellationToken, Int32, Int32())
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.String,System.String[])
  name: RetrieveAsync(DbCommand, CancellationToken, String, String[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbCommand_System_Threading_CancellationToken_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.String,System.String[])
  name.vb: RetrieveAsync(DbCommand, CancellationToken, String, String())
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.String, System.String())
  nameWithType: Extensions.RetrieveAsync(DbCommand, CancellationToken, String, String[])
  nameWithType.vb: Extensions.RetrieveAsync(DbCommand, CancellationToken, String, String())
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Threading.CancellationToken})
  name: RetrieveAsync(DbDataReader, IEnumerable<Int32>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_Int32__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Int32},System.Nullable{System.Threading.CancellationToken})
  name.vb: RetrieveAsync(DbDataReader, IEnumerable(Of Int32), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.Int32>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.Int32), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.RetrieveAsync(DbDataReader, IEnumerable<Int32>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.RetrieveAsync(DbDataReader, IEnumerable(Of Int32), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Nullable{System.Threading.CancellationToken})
  name: RetrieveAsync(DbDataReader, IEnumerable<String>, Boolean, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_String__System_Boolean_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Nullable{System.Threading.CancellationToken})
  name.vb: RetrieveAsync(DbDataReader, IEnumerable(Of String), Boolean, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.String>, System.Boolean, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.RetrieveAsync(DbDataReader, IEnumerable<String>, Boolean, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.RetrieveAsync(DbDataReader, IEnumerable(Of String), Boolean, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Int32,System.Int32[])
  name: RetrieveAsync(DbDataReader, Int32, Int32[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Int32,System.Int32[])
  name.vb: RetrieveAsync(DbDataReader, Int32, Int32())
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Int32, System.Int32())
  nameWithType: Extensions.RetrieveAsync(DbDataReader, Int32, Int32[])
  nameWithType.vb: Extensions.RetrieveAsync(DbDataReader, Int32, Int32())
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Nullable{System.Threading.CancellationToken})
  name: RetrieveAsync(DbDataReader, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Nullable{System.Threading.CancellationToken})
  name.vb: RetrieveAsync(DbDataReader, Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.RetrieveAsync(DbDataReader, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.RetrieveAsync(DbDataReader, Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.String,System.String[])
  name: RetrieveAsync(DbDataReader, String, String[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbDataReader_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.String,System.String[])
  name.vb: RetrieveAsync(DbDataReader, String, String())
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.String, System.String())
  nameWithType: Extensions.RetrieveAsync(DbDataReader, String, String[])
  nameWithType.vb: Extensions.RetrieveAsync(DbDataReader, String, String())
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.Int32,System.Int32[])
  name: RetrieveAsync(DbDataReader, CancellationToken, Int32, Int32[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Threading_CancellationToken_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.Int32,System.Int32[])
  name.vb: RetrieveAsync(DbDataReader, CancellationToken, Int32, Int32())
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.Int32, System.Int32())
  nameWithType: Extensions.RetrieveAsync(DbDataReader, CancellationToken, Int32, Int32[])
  nameWithType.vb: Extensions.RetrieveAsync(DbDataReader, CancellationToken, Int32, Int32())
- uid: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.String,System.String[])
  name: RetrieveAsync(DbDataReader, CancellationToken, String, String[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Threading_CancellationToken_System_String_System_String___
  commentId: M:Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.String,System.String[])
  name.vb: RetrieveAsync(DbDataReader, CancellationToken, String, String())
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.Extensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.String, System.String())
  nameWithType: Extensions.RetrieveAsync(DbDataReader, CancellationToken, String, String[])
  nameWithType.vb: Extensions.RetrieveAsync(DbDataReader, CancellationToken, String, String())
- uid: Open.Database.Extensions.Extensions.RetrieveAsync*
  name: RetrieveAsync
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_RetrieveAsync_
  commentId: Overload:Open.Database.Extensions.Extensions.RetrieveAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.RetrieveAsync
  nameWithType: Extensions.RetrieveAsync
- uid: Open.Database.Extensions.Extensions.Single*
  name: Single
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Single_
  commentId: Overload:Open.Database.Extensions.Extensions.Single
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.Single
  nameWithType: Extensions.Single
- uid: Open.Database.Extensions.Extensions.Single``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name: Single<T>(IDbCommand, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Single__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.Single``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name.vb: Single(Of T)(IDbCommand, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.Single<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.Single(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.Single<T>(IDbCommand, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.Single(Of T)(IDbCommand, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.SingleOrDefault*
  name: SingleOrDefault
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_SingleOrDefault_
  commentId: Overload:Open.Database.Extensions.Extensions.SingleOrDefault
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.SingleOrDefault
  nameWithType: Extensions.SingleOrDefault
- uid: Open.Database.Extensions.Extensions.SingleOrDefault``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name: SingleOrDefault<T>(IDbCommand, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_SingleOrDefault__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.SingleOrDefault``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name.vb: SingleOrDefault(Of T)(IDbCommand, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.SingleOrDefault<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.SingleOrDefault(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.SingleOrDefault<T>(IDbCommand, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.SingleOrDefault(Of T)(IDbCommand, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.Skip*
  name: Skip
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Skip_
  commentId: Overload:Open.Database.Extensions.Extensions.Skip
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.Skip
  nameWithType: Extensions.Skip
- uid: Open.Database.Extensions.Extensions.Skip``1(System.Data.IDbCommand,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name: Skip<T>(IDbCommand, Int32, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Skip__1_System_Data_IDbCommand_System_Int32_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.Skip``1(System.Data.IDbCommand,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name.vb: Skip(Of T)(IDbCommand, Int32, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.Skip<T>(System.Data.IDbCommand, System.Int32, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.Skip(Of T)(System.Data.IDbCommand, System.Int32, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.Skip<T>(IDbCommand, Int32, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.Skip(Of T)(IDbCommand, Int32, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.SkipThenTake*
  name: SkipThenTake
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_SkipThenTake_
  commentId: Overload:Open.Database.Extensions.Extensions.SkipThenTake
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.SkipThenTake
  nameWithType: Extensions.SkipThenTake
- uid: Open.Database.Extensions.Extensions.SkipThenTake``1(System.Data.IDbCommand,System.Int32,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name: SkipThenTake<T>(IDbCommand, Int32, Int32, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_SkipThenTake__1_System_Data_IDbCommand_System_Int32_System_Int32_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.SkipThenTake``1(System.Data.IDbCommand,System.Int32,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name.vb: SkipThenTake(Of T)(IDbCommand, Int32, Int32, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.SkipThenTake<T>(System.Data.IDbCommand, System.Int32, System.Int32, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.SkipThenTake(Of T)(System.Data.IDbCommand, System.Int32, System.Int32, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.SkipThenTake<T>(IDbCommand, Int32, Int32, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.SkipThenTake(Of T)(IDbCommand, Int32, Int32, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.StoredProcedure(Open.Database.Extensions.IDbConnectionFactory{System.Data.Common.DbConnection},System.String)
  name: StoredProcedure(IDbConnectionFactory<DbConnection>, String)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_StoredProcedure_Open_Database_Extensions_IDbConnectionFactory_System_Data_Common_DbConnection__System_String_
  commentId: M:Open.Database.Extensions.Extensions.StoredProcedure(Open.Database.Extensions.IDbConnectionFactory{System.Data.Common.DbConnection},System.String)
  name.vb: StoredProcedure(IDbConnectionFactory(Of DbConnection), String)
  fullName: Open.Database.Extensions.Extensions.StoredProcedure(Open.Database.Extensions.IDbConnectionFactory<System.Data.Common.DbConnection>, System.String)
  fullName.vb: Open.Database.Extensions.Extensions.StoredProcedure(Open.Database.Extensions.IDbConnectionFactory(Of System.Data.Common.DbConnection), System.String)
  nameWithType: Extensions.StoredProcedure(IDbConnectionFactory<DbConnection>, String)
  nameWithType.vb: Extensions.StoredProcedure(IDbConnectionFactory(Of DbConnection), String)
- uid: Open.Database.Extensions.Extensions.StoredProcedure(System.Data.Common.DbConnection,System.String)
  name: StoredProcedure(DbConnection, String)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_StoredProcedure_System_Data_Common_DbConnection_System_String_
  commentId: M:Open.Database.Extensions.Extensions.StoredProcedure(System.Data.Common.DbConnection,System.String)
  fullName: Open.Database.Extensions.Extensions.StoredProcedure(System.Data.Common.DbConnection, System.String)
  nameWithType: Extensions.StoredProcedure(DbConnection, String)
- uid: Open.Database.Extensions.Extensions.StoredProcedure(System.Func{System.Data.Common.DbConnection},System.String)
  name: StoredProcedure(Func<DbConnection>, String)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_StoredProcedure_System_Func_System_Data_Common_DbConnection__System_String_
  commentId: M:Open.Database.Extensions.Extensions.StoredProcedure(System.Func{System.Data.Common.DbConnection},System.String)
  name.vb: StoredProcedure(Func(Of DbConnection), String)
  fullName: Open.Database.Extensions.Extensions.StoredProcedure(System.Func<System.Data.Common.DbConnection>, System.String)
  fullName.vb: Open.Database.Extensions.Extensions.StoredProcedure(System.Func(Of System.Data.Common.DbConnection), System.String)
  nameWithType: Extensions.StoredProcedure(Func<DbConnection>, String)
  nameWithType.vb: Extensions.StoredProcedure(Func(Of DbConnection), String)
- uid: Open.Database.Extensions.Extensions.StoredProcedure*
  name: StoredProcedure
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_StoredProcedure_
  commentId: Overload:Open.Database.Extensions.Extensions.StoredProcedure
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.StoredProcedure
  nameWithType: Extensions.StoredProcedure
- uid: Open.Database.Extensions.Extensions.Take*
  name: Take
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Take_
  commentId: Overload:Open.Database.Extensions.Extensions.Take
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.Take
  nameWithType: Extensions.Take
- uid: Open.Database.Extensions.Extensions.Take``1(System.Data.IDbCommand,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name: Take<T>(IDbCommand, Int32, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Take__1_System_Data_IDbCommand_System_Int32_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.Take``1(System.Data.IDbCommand,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name.vb: Take(Of T)(IDbCommand, Int32, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.Take<T>(System.Data.IDbCommand, System.Int32, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.Take(Of T)(System.Data.IDbCommand, System.Int32, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.Take<T>(IDbCommand, Int32, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.Take(Of T)(IDbCommand, Int32, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.To*
  name: To
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_To_
  commentId: Overload:Open.Database.Extensions.Extensions.To
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.To
  nameWithType: Extensions.To
- uid: Open.Database.Extensions.Extensions.To``1(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean)
  name: To<T>(DataTable, IEnumerable<KeyValuePair<String, String>>, Boolean)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_To__1_System_Data_DataTable_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___System_Boolean_
  commentId: M:Open.Database.Extensions.Extensions.To``1(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean)
  name.vb: To(Of T)(DataTable, IEnumerable(Of KeyValuePair(Of String, String)), Boolean)
  fullName: Open.Database.Extensions.Extensions.To<T>(System.Data.DataTable, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Boolean)
  fullName.vb: Open.Database.Extensions.Extensions.To(Of T)(System.Data.DataTable, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Boolean)
  nameWithType: Extensions.To<T>(DataTable, IEnumerable<KeyValuePair<String, String>>, Boolean)
  nameWithType.vb: Extensions.To(Of T)(DataTable, IEnumerable(Of KeyValuePair(Of String, String)), Boolean)
- uid: Open.Database.Extensions.Extensions.To``1(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Boolean)
  name: To<T>(DataTable, IEnumerable<>, Boolean)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_To__1_System_Data_DataTable_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___System_Boolean_
  commentId: M:Open.Database.Extensions.Extensions.To``1(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Boolean)
  name.vb: To(Of T)(DataTable, IEnumerable(Of ), Boolean)
  fullName: Open.Database.Extensions.Extensions.To<T>(System.Data.DataTable, System.Collections.Generic.IEnumerable<System.>, System.Boolean)
  fullName.vb: Open.Database.Extensions.Extensions.To(Of T)(System.Data.DataTable, System.Collections.Generic.IEnumerable(Of System.), System.Boolean)
  nameWithType: Extensions.To<T>(DataTable, IEnumerable<>, Boolean)
  nameWithType.vb: Extensions.To(Of T)(DataTable, IEnumerable(Of ), Boolean)
- uid: Open.Database.Extensions.Extensions.To``1(System.Data.DataTable,System.ValueTuple{System.String,System.String}[])
  name: To<T>(DataTable, [])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_To__1_System_Data_DataTable_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.Extensions.To``1(System.Data.DataTable,System.ValueTuple{System.String,System.String}[])
  name.vb: To(Of T)(DataTable, ())
  fullName: Open.Database.Extensions.Extensions.To<T>(System.Data.DataTable, System.[])
  fullName.vb: Open.Database.Extensions.Extensions.To(Of T)(System.Data.DataTable, System.())
  nameWithType: Extensions.To<T>(DataTable, [])
  nameWithType.vb: Extensions.To(Of T)(DataTable, ())
- uid: Open.Database.Extensions.Extensions.ToArray*
  name: ToArray
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToArray_
  commentId: Overload:Open.Database.Extensions.Extensions.ToArray
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ToArray
  nameWithType: Extensions.ToArray
- uid: Open.Database.Extensions.Extensions.ToArray``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name: ToArray<T>(IDataReader, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToArray__1_System_Data_IDataReader_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.ToArray``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name.vb: ToArray(Of T)(IDataReader, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.ToArray<T>(System.Data.IDataReader, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.ToArray(Of T)(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.ToArray<T>(IDataReader, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.ToArray(Of T)(IDataReader, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.ToArray``1(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0})
  name: ToArray<T>(IDbCommand, CommandBehavior, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToArray__1_System_Data_IDbCommand_System_Data_CommandBehavior_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.ToArray``1(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0})
  name.vb: ToArray(Of T)(IDbCommand, CommandBehavior, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.ToArray<T>(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.ToArray(Of T)(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.ToArray<T>(IDbCommand, CommandBehavior, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.ToArray(Of T)(IDbCommand, CommandBehavior, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.ToArray``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name: ToArray<T>(IDbCommand, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToArray__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.ToArray``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name.vb: ToArray(Of T)(IDbCommand, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.ToArray<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.ToArray(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.ToArray<T>(IDbCommand, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.ToArray(Of T)(IDbCommand, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.ToDataTable(System.Data.IDataReader)
  name: ToDataTable(IDataReader)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToDataTable_System_Data_IDataReader_
  commentId: M:Open.Database.Extensions.Extensions.ToDataTable(System.Data.IDataReader)
  fullName: Open.Database.Extensions.Extensions.ToDataTable(System.Data.IDataReader)
  nameWithType: Extensions.ToDataTable(IDataReader)
- uid: Open.Database.Extensions.Extensions.ToDataTable(System.Data.IDbCommand,System.Data.CommandBehavior)
  name: ToDataTable(IDbCommand, CommandBehavior)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToDataTable_System_Data_IDbCommand_System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.Extensions.ToDataTable(System.Data.IDbCommand,System.Data.CommandBehavior)
  fullName: Open.Database.Extensions.Extensions.ToDataTable(System.Data.IDbCommand, System.Data.CommandBehavior)
  nameWithType: Extensions.ToDataTable(IDbCommand, CommandBehavior)
- uid: Open.Database.Extensions.Extensions.ToDataTable*
  name: ToDataTable
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToDataTable_
  commentId: Overload:Open.Database.Extensions.Extensions.ToDataTable
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ToDataTable
  nameWithType: Extensions.ToDataTable
- uid: Open.Database.Extensions.Extensions.ToDataTables(System.Data.IDbCommand,System.Data.CommandBehavior)
  name: ToDataTables(IDbCommand, CommandBehavior)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToDataTables_System_Data_IDbCommand_System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.Extensions.ToDataTables(System.Data.IDbCommand,System.Data.CommandBehavior)
  fullName: Open.Database.Extensions.Extensions.ToDataTables(System.Data.IDbCommand, System.Data.CommandBehavior)
  nameWithType: Extensions.ToDataTables(IDbCommand, CommandBehavior)
- uid: Open.Database.Extensions.Extensions.ToDataTables*
  name: ToDataTables
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToDataTables_
  commentId: Overload:Open.Database.Extensions.Extensions.ToDataTables
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ToDataTables
  nameWithType: Extensions.ToDataTables
- uid: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int32,System.String}})
  name: ToDictionary(IDataRecord, IEnumerable<KeyValuePair<Int32, String>>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToDictionary_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_Int32_System_String___
  commentId: M:Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int32,System.String}})
  name.vb: ToDictionary(IDataRecord, IEnumerable(Of KeyValuePair(Of Int32, String)))
  fullName: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Int32, System.String>>)
  fullName.vb: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Int32, System.String)))
  nameWithType: Extensions.ToDictionary(IDataRecord, IEnumerable<KeyValuePair<Int32, String>>)
  nameWithType.vb: Extensions.ToDictionary(IDataRecord, IEnumerable(Of KeyValuePair(Of Int32, String)))
- uid: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String})
  name: ToDictionary(IDataRecord, IEnumerable<String>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToDictionary_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String})
  name.vb: ToDictionary(IDataRecord, IEnumerable(Of String))
  fullName: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: Extensions.ToDictionary(IDataRecord, IEnumerable<String>)
  nameWithType.vb: Extensions.ToDictionary(IDataRecord, IEnumerable(Of String))
- uid: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.String}})
  name: ToDictionary(IDataRecord, IEnumerable<>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToDictionary_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_ValueTuple_System_Int32_System_String___
  commentId: M:Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.ValueTuple{System.Int32,System.String}})
  name.vb: ToDictionary(IDataRecord, IEnumerable(Of ))
  fullName: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.>)
  fullName.vb: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.))
  nameWithType: Extensions.ToDictionary(IDataRecord, IEnumerable<>)
  nameWithType.vb: Extensions.ToDictionary(IDataRecord, IEnumerable(Of ))
- uid: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.ISet{System.String})
  name: ToDictionary(IDataRecord, ISet<String>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToDictionary_System_Data_IDataRecord_System_Collections_Generic_ISet_System_String__
  commentId: M:Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.ISet{System.String})
  name.vb: ToDictionary(IDataRecord, ISet(Of String))
  fullName: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.ISet<System.String>)
  fullName.vb: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.ISet(Of System.String))
  nameWithType: Extensions.ToDictionary(IDataRecord, ISet<String>)
  nameWithType.vb: Extensions.ToDictionary(IDataRecord, ISet(Of String))
- uid: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord,System.String[])
  name: ToDictionary(IDataRecord, String[])
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToDictionary_System_Data_IDataRecord_System_String___
  commentId: M:Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord,System.String[])
  name.vb: ToDictionary(IDataRecord, String())
  fullName: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord, System.String[])
  fullName.vb: Open.Database.Extensions.Extensions.ToDictionary(System.Data.IDataRecord, System.String())
  nameWithType: Extensions.ToDictionary(IDataRecord, String[])
  nameWithType.vb: Extensions.ToDictionary(IDataRecord, String())
- uid: Open.Database.Extensions.Extensions.ToDictionary*
  name: ToDictionary
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToDictionary_
  commentId: Overload:Open.Database.Extensions.Extensions.ToDictionary
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ToDictionary
  nameWithType: Extensions.ToDictionary
- uid: Open.Database.Extensions.Extensions.ToList*
  name: ToList
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToList_
  commentId: Overload:Open.Database.Extensions.Extensions.ToList
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ToList
  nameWithType: Extensions.ToList
- uid: Open.Database.Extensions.Extensions.ToList``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name: ToList<T>(IDataReader, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToList__1_System_Data_IDataReader_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.ToList``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name.vb: ToList(Of T)(IDataReader, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.ToList<T>(System.Data.IDataReader, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.ToList(Of T)(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.ToList<T>(IDataReader, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.ToList(Of T)(IDataReader, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.ToList``1(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0})
  name: ToList<T>(IDbCommand, CommandBehavior, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToList__1_System_Data_IDbCommand_System_Data_CommandBehavior_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.ToList``1(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0})
  name.vb: ToList(Of T)(IDbCommand, CommandBehavior, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.ToList<T>(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.ToList(Of T)(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.ToList<T>(IDbCommand, CommandBehavior, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.ToList(Of T)(IDbCommand, CommandBehavior, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.ToList``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name: ToList<T>(IDbCommand, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToList__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.ToList``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0})
  name.vb: ToList(Of T)(IDbCommand, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.ToList<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.ToList(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.ToList<T>(IDbCommand, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.ToList(Of T)(IDbCommand, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.ToListAsync*
  name: ToListAsync
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToListAsync_
  commentId: Overload:Open.Database.Extensions.Extensions.ToListAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ToListAsync
  nameWithType: Extensions.ToListAsync
- uid: Open.Database.Extensions.Extensions.ToListAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,``0},System.Nullable{System.Threading.CancellationToken})
  name: ToListAsync<T>(DbCommand, Func<IDataRecord, T>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToListAsync__1_System_Data_Common_DbCommand_System_Func_System_Data_IDataRecord___0__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ToListAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,``0},System.Nullable{System.Threading.CancellationToken})
  name.vb: ToListAsync(Of T)(DbCommand, Func(Of IDataRecord, T), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ToListAsync<T>(System.Data.Common.DbCommand, System.Func<System.Data.IDataRecord, T>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ToListAsync(Of T)(System.Data.Common.DbCommand, System.Func(Of System.Data.IDataRecord, T), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ToListAsync<T>(DbCommand, Func<IDataRecord, T>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ToListAsync(Of T)(DbCommand, Func(Of IDataRecord, T), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ToListAsync``1(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,``0},System.Nullable{System.Threading.CancellationToken})
  name: ToListAsync<T>(DbDataReader, Func<IDataRecord, T>, Nullable<CancellationToken>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToListAsync__1_System_Data_Common_DbDataReader_System_Func_System_Data_IDataRecord___0__System_Nullable_System_Threading_CancellationToken__
  commentId: M:Open.Database.Extensions.Extensions.ToListAsync``1(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,``0},System.Nullable{System.Threading.CancellationToken})
  name.vb: ToListAsync(Of T)(DbDataReader, Func(Of IDataRecord, T), Nullable(Of CancellationToken))
  fullName: Open.Database.Extensions.Extensions.ToListAsync<T>(System.Data.Common.DbDataReader, System.Func<System.Data.IDataRecord, T>, System.Nullable<System.Threading.CancellationToken>)
  fullName.vb: Open.Database.Extensions.Extensions.ToListAsync(Of T)(System.Data.Common.DbDataReader, System.Func(Of System.Data.IDataRecord, T), System.Nullable(Of System.Threading.CancellationToken))
  nameWithType: Extensions.ToListAsync<T>(DbDataReader, Func<IDataRecord, T>, Nullable<CancellationToken>)
  nameWithType.vb: Extensions.ToListAsync(Of T)(DbDataReader, Func(Of IDataRecord, T), Nullable(Of CancellationToken))
- uid: Open.Database.Extensions.Extensions.ToTargetBlock*
  name: ToTargetBlock
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToTargetBlock_
  commentId: Overload:Open.Database.Extensions.Extensions.ToTargetBlock
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ToTargetBlock
  nameWithType: Extensions.ToTargetBlock
- uid: Open.Database.Extensions.Extensions.ToTargetBlock``1(System.Data.IDataReader,System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name: ToTargetBlock<T>(IDataReader, ITargetBlock<T>, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToTargetBlock__1_System_Data_IDataReader_System_Threading_Tasks_Dataflow_ITargetBlock___0__System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.ToTargetBlock``1(System.Data.IDataReader,System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name.vb: ToTargetBlock(Of T)(IDataReader, ITargetBlock(Of T), Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.ToTargetBlock<T>(System.Data.IDataReader, System.Threading.Tasks.Dataflow.ITargetBlock<T>, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.ToTargetBlock(Of T)(System.Data.IDataReader, System.Threading.Tasks.Dataflow.ITargetBlock(Of T), System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.ToTargetBlock<T>(IDataReader, ITargetBlock<T>, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.ToTargetBlock(Of T)(IDataReader, ITargetBlock(Of T), Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.ToTargetBlock``1(System.Data.IDbCommand,System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name: ToTargetBlock<T>(IDbCommand, ITargetBlock<T>, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToTargetBlock__1_System_Data_IDbCommand_System_Threading_Tasks_Dataflow_ITargetBlock___0__System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.ToTargetBlock``1(System.Data.IDbCommand,System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name.vb: ToTargetBlock(Of T)(IDbCommand, ITargetBlock(Of T), Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.ToTargetBlock<T>(System.Data.IDbCommand, System.Threading.Tasks.Dataflow.ITargetBlock<T>, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.ToTargetBlock(Of T)(System.Data.IDbCommand, System.Threading.Tasks.Dataflow.ITargetBlock(Of T), System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.ToTargetBlock<T>(IDbCommand, ITargetBlock<T>, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.ToTargetBlock(Of T)(IDbCommand, ITargetBlock(Of T), Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.ToTargetBlockAsync*
  name: ToTargetBlockAsync
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToTargetBlockAsync_
  commentId: Overload:Open.Database.Extensions.Extensions.ToTargetBlockAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.ToTargetBlockAsync
  nameWithType: Extensions.ToTargetBlockAsync
- uid: Open.Database.Extensions.Extensions.ToTargetBlockAsync``1(System.Data.Common.DbCommand,System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name: ToTargetBlockAsync<T>(DbCommand, ITargetBlock<T>, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToTargetBlockAsync__1_System_Data_Common_DbCommand_System_Threading_Tasks_Dataflow_ITargetBlock___0__System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.ToTargetBlockAsync``1(System.Data.Common.DbCommand,System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name.vb: ToTargetBlockAsync(Of T)(DbCommand, ITargetBlock(Of T), Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.ToTargetBlockAsync<T>(System.Data.Common.DbCommand, System.Threading.Tasks.Dataflow.ITargetBlock<T>, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.ToTargetBlockAsync(Of T)(System.Data.Common.DbCommand, System.Threading.Tasks.Dataflow.ITargetBlock(Of T), System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.ToTargetBlockAsync<T>(DbCommand, ITargetBlock<T>, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.ToTargetBlockAsync(Of T)(DbCommand, ITargetBlock(Of T), Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.ToTargetBlockAsync``1(System.Data.Common.DbDataReader,System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name: ToTargetBlockAsync<T>(DbDataReader, ITargetBlock<T>, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_ToTargetBlockAsync__1_System_Data_Common_DbDataReader_System_Threading_Tasks_Dataflow_ITargetBlock___0__System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.Extensions.ToTargetBlockAsync``1(System.Data.Common.DbDataReader,System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Func{System.Data.IDataRecord,``0})
  name.vb: ToTargetBlockAsync(Of T)(DbDataReader, ITargetBlock(Of T), Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.Extensions.ToTargetBlockAsync<T>(System.Data.Common.DbDataReader, System.Threading.Tasks.Dataflow.ITargetBlock<T>, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.Extensions.ToTargetBlockAsync(Of T)(System.Data.Common.DbDataReader, System.Threading.Tasks.Dataflow.ITargetBlock(Of T), System.Func(Of System.Data.IDataRecord, T))
  nameWithType: Extensions.ToTargetBlockAsync<T>(DbDataReader, ITargetBlock<T>, Func<IDataRecord, T>)
  nameWithType.vb: Extensions.ToTargetBlockAsync(Of T)(DbDataReader, ITargetBlock(Of T), Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.Extensions.Using*
  name: Using
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Using_
  commentId: Overload:Open.Database.Extensions.Extensions.Using
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.Using
  nameWithType: Extensions.Using
- uid: Open.Database.Extensions.Extensions.Using``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Action{``0})
  name: Using<TConn>(IDbConnectionFactory<TConn>, Action<TConn>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Using__1_Open_Database_Extensions_IDbConnectionFactory___0__System_Action___0__
  commentId: M:Open.Database.Extensions.Extensions.Using``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Action{``0})
  name.vb: Using(Of TConn)(IDbConnectionFactory(Of TConn), Action(Of TConn))
  fullName: Open.Database.Extensions.Extensions.Using<TConn>(Open.Database.Extensions.IDbConnectionFactory<TConn>, System.Action<TConn>)
  fullName.vb: Open.Database.Extensions.Extensions.Using(Of TConn)(Open.Database.Extensions.IDbConnectionFactory(Of TConn), System.Action(Of TConn))
  nameWithType: Extensions.Using<TConn>(IDbConnectionFactory<TConn>, Action<TConn>)
  nameWithType.vb: Extensions.Using(Of TConn)(IDbConnectionFactory(Of TConn), Action(Of TConn))
- uid: Open.Database.Extensions.Extensions.Using``1(System.Func{``0},System.Action{``0})
  name: Using<TConn>(Func<TConn>, Action<TConn>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Using__1_System_Func___0__System_Action___0__
  commentId: M:Open.Database.Extensions.Extensions.Using``1(System.Func{``0},System.Action{``0})
  name.vb: Using(Of TConn)(Func(Of TConn), Action(Of TConn))
  fullName: Open.Database.Extensions.Extensions.Using<TConn>(System.Func<TConn>, System.Action<TConn>)
  fullName.vb: Open.Database.Extensions.Extensions.Using(Of TConn)(System.Func(Of TConn), System.Action(Of TConn))
  nameWithType: Extensions.Using<TConn>(Func<TConn>, Action<TConn>)
  nameWithType.vb: Extensions.Using(Of TConn)(Func(Of TConn), Action(Of TConn))
- uid: Open.Database.Extensions.Extensions.Using``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,``1})
  name: Using<TConn, T>(IDbConnectionFactory<TConn>, Func<TConn, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Using__2_Open_Database_Extensions_IDbConnectionFactory___0__System_Func___0___1__
  commentId: M:Open.Database.Extensions.Extensions.Using``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,``1})
  name.vb: Using(Of TConn, T)(IDbConnectionFactory(Of TConn), Func(Of TConn, T))
  fullName: Open.Database.Extensions.Extensions.Using<TConn, T>(Open.Database.Extensions.IDbConnectionFactory<TConn>, System.Func<TConn, T>)
  fullName.vb: Open.Database.Extensions.Extensions.Using(Of TConn, T)(Open.Database.Extensions.IDbConnectionFactory(Of TConn), System.Func(Of TConn, T))
  nameWithType: Extensions.Using<TConn, T>(IDbConnectionFactory<TConn>, Func<TConn, T>)
  nameWithType.vb: Extensions.Using(Of TConn, T)(IDbConnectionFactory(Of TConn), Func(Of TConn, T))
- uid: Open.Database.Extensions.Extensions.Using``2(System.Func{``0},System.Func{``0,``1})
  name: Using<TConn, T>(Func<TConn>, Func<TConn, T>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_Using__2_System_Func___0__System_Func___0___1__
  commentId: M:Open.Database.Extensions.Extensions.Using``2(System.Func{``0},System.Func{``0,``1})
  name.vb: Using(Of TConn, T)(Func(Of TConn), Func(Of TConn, T))
  fullName: Open.Database.Extensions.Extensions.Using<TConn, T>(System.Func<TConn>, System.Func<TConn, T>)
  fullName.vb: Open.Database.Extensions.Extensions.Using(Of TConn, T)(System.Func(Of TConn), System.Func(Of TConn, T))
  nameWithType: Extensions.Using<TConn, T>(Func<TConn>, Func<TConn, T>)
  nameWithType.vb: Extensions.Using(Of TConn, T)(Func(Of TConn), Func(Of TConn, T))
- uid: Open.Database.Extensions.Extensions.UsingAsync*
  name: UsingAsync
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_UsingAsync_
  commentId: Overload:Open.Database.Extensions.Extensions.UsingAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.Extensions.UsingAsync
  nameWithType: Extensions.UsingAsync
- uid: Open.Database.Extensions.Extensions.UsingAsync``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.Task})
  name: UsingAsync<TConn>(IDbConnectionFactory<TConn>, Func<TConn, Task>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_UsingAsync__1_Open_Database_Extensions_IDbConnectionFactory___0__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Open.Database.Extensions.Extensions.UsingAsync``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: UsingAsync(Of TConn)(IDbConnectionFactory(Of TConn), Func(Of TConn, Task))
  fullName: Open.Database.Extensions.Extensions.UsingAsync<TConn>(Open.Database.Extensions.IDbConnectionFactory<TConn>, System.Func<TConn, System.Threading.Tasks.Task>)
  fullName.vb: Open.Database.Extensions.Extensions.UsingAsync(Of TConn)(Open.Database.Extensions.IDbConnectionFactory(Of TConn), System.Func(Of TConn, System.Threading.Tasks.Task))
  nameWithType: Extensions.UsingAsync<TConn>(IDbConnectionFactory<TConn>, Func<TConn, Task>)
  nameWithType.vb: Extensions.UsingAsync(Of TConn)(IDbConnectionFactory(Of TConn), Func(Of TConn, Task))
- uid: Open.Database.Extensions.Extensions.UsingAsync``1(System.Func{``0},System.Func{``0,System.Threading.Tasks.Task})
  name: UsingAsync<TConn>(Func<TConn>, Func<TConn, Task>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_UsingAsync__1_System_Func___0__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Open.Database.Extensions.Extensions.UsingAsync``1(System.Func{``0},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: UsingAsync(Of TConn)(Func(Of TConn), Func(Of TConn, Task))
  fullName: Open.Database.Extensions.Extensions.UsingAsync<TConn>(System.Func<TConn>, System.Func<TConn, System.Threading.Tasks.Task>)
  fullName.vb: Open.Database.Extensions.Extensions.UsingAsync(Of TConn)(System.Func(Of TConn), System.Func(Of TConn, System.Threading.Tasks.Task))
  nameWithType: Extensions.UsingAsync<TConn>(Func<TConn>, Func<TConn, Task>)
  nameWithType.vb: Extensions.UsingAsync(Of TConn)(Func(Of TConn), Func(Of TConn, Task))
- uid: Open.Database.Extensions.Extensions.UsingAsync``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: UsingAsync<TConn, T>(IDbConnectionFactory<TConn>, Func<TConn, Task<T>>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_UsingAsync__2_Open_Database_Extensions_IDbConnectionFactory___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Open.Database.Extensions.Extensions.UsingAsync``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: UsingAsync(Of TConn, T)(IDbConnectionFactory(Of TConn), Func(Of TConn, Task(Of T)))
  fullName: Open.Database.Extensions.Extensions.UsingAsync<TConn, T>(Open.Database.Extensions.IDbConnectionFactory<TConn>, System.Func<TConn, System.Threading.Tasks.Task<T>>)
  fullName.vb: Open.Database.Extensions.Extensions.UsingAsync(Of TConn, T)(Open.Database.Extensions.IDbConnectionFactory(Of TConn), System.Func(Of TConn, System.Threading.Tasks.Task(Of T)))
  nameWithType: Extensions.UsingAsync<TConn, T>(IDbConnectionFactory<TConn>, Func<TConn, Task<T>>)
  nameWithType.vb: Extensions.UsingAsync(Of TConn, T)(IDbConnectionFactory(Of TConn), Func(Of TConn, Task(Of T)))
- uid: Open.Database.Extensions.Extensions.UsingAsync``2(System.Func{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: UsingAsync<TConn, T>(Func<TConn>, Func<TConn, Task<T>>)
  href: api/Open.Database.Extensions.Extensions.html#Open_Database_Extensions_Extensions_UsingAsync__2_System_Func___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Open.Database.Extensions.Extensions.UsingAsync``2(System.Func{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: UsingAsync(Of TConn, T)(Func(Of TConn), Func(Of TConn, Task(Of T)))
  fullName: Open.Database.Extensions.Extensions.UsingAsync<TConn, T>(System.Func<TConn>, System.Func<TConn, System.Threading.Tasks.Task<T>>)
  fullName.vb: Open.Database.Extensions.Extensions.UsingAsync(Of TConn, T)(System.Func(Of TConn), System.Func(Of TConn, System.Threading.Tasks.Task(Of T)))
  nameWithType: Extensions.UsingAsync<TConn, T>(Func<TConn>, Func<TConn, Task<T>>)
  nameWithType.vb: Extensions.UsingAsync(Of TConn, T)(Func(Of TConn), Func(Of TConn, Task(Of T)))
- uid: Open.Database.Extensions.IDbConnectionFactory
  name: IDbConnectionFactory
  href: api/Open.Database.Extensions.IDbConnectionFactory.html
  commentId: T:Open.Database.Extensions.IDbConnectionFactory
  fullName: Open.Database.Extensions.IDbConnectionFactory
  nameWithType: IDbConnectionFactory
- uid: Open.Database.Extensions.IDbConnectionFactory.Create
  name: Create()
  href: api/Open.Database.Extensions.IDbConnectionFactory.html#Open_Database_Extensions_IDbConnectionFactory_Create
  commentId: M:Open.Database.Extensions.IDbConnectionFactory.Create
  fullName: Open.Database.Extensions.IDbConnectionFactory.Create()
  nameWithType: IDbConnectionFactory.Create()
- uid: Open.Database.Extensions.IDbConnectionFactory.Create*
  name: Create
  href: api/Open.Database.Extensions.IDbConnectionFactory.html#Open_Database_Extensions_IDbConnectionFactory_Create_
  commentId: Overload:Open.Database.Extensions.IDbConnectionFactory.Create
  isSpec: "True"
  fullName: Open.Database.Extensions.IDbConnectionFactory.Create
  nameWithType: IDbConnectionFactory.Create
- uid: Open.Database.Extensions.IDbConnectionFactory`1
  name: IDbConnectionFactory<TConnection>
  href: api/Open.Database.Extensions.IDbConnectionFactory-1.html
  commentId: T:Open.Database.Extensions.IDbConnectionFactory`1
  name.vb: IDbConnectionFactory(Of TConnection)
  fullName: Open.Database.Extensions.IDbConnectionFactory<TConnection>
  fullName.vb: Open.Database.Extensions.IDbConnectionFactory(Of TConnection)
  nameWithType: IDbConnectionFactory<TConnection>
  nameWithType.vb: IDbConnectionFactory(Of TConnection)
- uid: Open.Database.Extensions.IDbConnectionFactory`1.Create
  name: Create()
  href: api/Open.Database.Extensions.IDbConnectionFactory-1.html#Open_Database_Extensions_IDbConnectionFactory_1_Create
  commentId: M:Open.Database.Extensions.IDbConnectionFactory`1.Create
  fullName: Open.Database.Extensions.IDbConnectionFactory<TConnection>.Create()
  fullName.vb: Open.Database.Extensions.IDbConnectionFactory(Of TConnection).Create()
  nameWithType: IDbConnectionFactory<TConnection>.Create()
  nameWithType.vb: IDbConnectionFactory(Of TConnection).Create()
- uid: Open.Database.Extensions.IDbConnectionFactory`1.Create*
  name: Create
  href: api/Open.Database.Extensions.IDbConnectionFactory-1.html#Open_Database_Extensions_IDbConnectionFactory_1_Create_
  commentId: Overload:Open.Database.Extensions.IDbConnectionFactory`1.Create
  isSpec: "True"
  fullName: Open.Database.Extensions.IDbConnectionFactory<TConnection>.Create
  fullName.vb: Open.Database.Extensions.IDbConnectionFactory(Of TConnection).Create
  nameWithType: IDbConnectionFactory<TConnection>.Create
  nameWithType.vb: IDbConnectionFactory(Of TConnection).Create
- uid: Open.Database.Extensions.QueryResult`1
  name: QueryResult<TResult>
  href: api/Open.Database.Extensions.QueryResult-1.html
  commentId: T:Open.Database.Extensions.QueryResult`1
  name.vb: QueryResult(Of TResult)
  fullName: Open.Database.Extensions.QueryResult<TResult>
  fullName.vb: Open.Database.Extensions.QueryResult(Of TResult)
  nameWithType: QueryResult<TResult>
  nameWithType.vb: QueryResult(Of TResult)
- uid: Open.Database.Extensions.QueryResult`1.ColumnCount
  name: ColumnCount
  href: api/Open.Database.Extensions.QueryResult-1.html#Open_Database_Extensions_QueryResult_1_ColumnCount
  commentId: F:Open.Database.Extensions.QueryResult`1.ColumnCount
  fullName: Open.Database.Extensions.QueryResult<TResult>.ColumnCount
  fullName.vb: Open.Database.Extensions.QueryResult(Of TResult).ColumnCount
  nameWithType: QueryResult<TResult>.ColumnCount
  nameWithType.vb: QueryResult(Of TResult).ColumnCount
- uid: Open.Database.Extensions.QueryResult`1.Names
  name: Names
  href: api/Open.Database.Extensions.QueryResult-1.html#Open_Database_Extensions_QueryResult_1_Names
  commentId: F:Open.Database.Extensions.QueryResult`1.Names
  fullName: Open.Database.Extensions.QueryResult<TResult>.Names
  fullName.vb: Open.Database.Extensions.QueryResult(Of TResult).Names
  nameWithType: QueryResult<TResult>.Names
  nameWithType.vb: QueryResult(Of TResult).Names
- uid: Open.Database.Extensions.QueryResult`1.Ordinals
  name: Ordinals
  href: api/Open.Database.Extensions.QueryResult-1.html#Open_Database_Extensions_QueryResult_1_Ordinals
  commentId: F:Open.Database.Extensions.QueryResult`1.Ordinals
  fullName: Open.Database.Extensions.QueryResult<TResult>.Ordinals
  fullName.vb: Open.Database.Extensions.QueryResult(Of TResult).Ordinals
  nameWithType: QueryResult<TResult>.Ordinals
  nameWithType.vb: QueryResult(Of TResult).Ordinals
- uid: Open.Database.Extensions.QueryResult`1.Result
  name: Result
  href: api/Open.Database.Extensions.QueryResult-1.html#Open_Database_Extensions_QueryResult_1_Result
  commentId: F:Open.Database.Extensions.QueryResult`1.Result
  fullName: Open.Database.Extensions.QueryResult<TResult>.Result
  fullName.vb: Open.Database.Extensions.QueryResult(Of TResult).Result
  nameWithType: QueryResult<TResult>.Result
  nameWithType.vb: QueryResult(Of TResult).Result
- uid: Open.Database.Extensions.QueryResultExtensions
  name: QueryResultExtensions
  href: api/Open.Database.Extensions.QueryResultExtensions.html
  commentId: T:Open.Database.Extensions.QueryResultExtensions
  fullName: Open.Database.Extensions.QueryResultExtensions
  nameWithType: QueryResultExtensions
- uid: Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.QueryResult{System.Collections.Generic.IEnumerable{System.Object[]}})
  name: AsMappedDictionaries(QueryResult<IEnumerable<Object[]>>)
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_AsMappedDictionaries_Open_Database_Extensions_QueryResult_System_Collections_Generic_IEnumerable_System_Object_____
  commentId: M:Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.QueryResult{System.Collections.Generic.IEnumerable{System.Object[]}})
  name.vb: AsMappedDictionaries(QueryResult(Of IEnumerable(Of Object())))
  fullName: Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.QueryResult<System.Collections.Generic.IEnumerable<System.Object[]>>)
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.QueryResult(Of System.Collections.Generic.IEnumerable(Of System.Object())))
  nameWithType: QueryResultExtensions.AsMappedDictionaries(QueryResult<IEnumerable<Object[]>>)
  nameWithType.vb: QueryResultExtensions.AsMappedDictionaries(QueryResult(Of IEnumerable(Of Object())))
- uid: Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.QueryResult{System.Threading.Tasks.Dataflow.ISourceBlock{System.Object[]}})
  name: AsMappedDictionaries(QueryResult<ISourceBlock<Object[]>>)
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_AsMappedDictionaries_Open_Database_Extensions_QueryResult_System_Threading_Tasks_Dataflow_ISourceBlock_System_Object_____
  commentId: M:Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.QueryResult{System.Threading.Tasks.Dataflow.ISourceBlock{System.Object[]}})
  name.vb: AsMappedDictionaries(QueryResult(Of ISourceBlock(Of Object())))
  fullName: Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.QueryResult<System.Threading.Tasks.Dataflow.ISourceBlock<System.Object[]>>)
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.QueryResult(Of System.Threading.Tasks.Dataflow.ISourceBlock(Of System.Object())))
  nameWithType: QueryResultExtensions.AsMappedDictionaries(QueryResult<ISourceBlock<Object[]>>)
  nameWithType.vb: QueryResultExtensions.AsMappedDictionaries(QueryResult(Of ISourceBlock(Of Object())))
- uid: Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.Task{Open.Database.Extensions.QueryResult{System.Collections.Generic.IEnumerable{System.Object[]}}})
  name: AsMappedDictionaries(Task<QueryResult<IEnumerable<Object[]>>>)
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_AsMappedDictionaries_System_Threading_Tasks_Task_Open_Database_Extensions_QueryResult_System_Collections_Generic_IEnumerable_System_Object______
  commentId: M:Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.Task{Open.Database.Extensions.QueryResult{System.Collections.Generic.IEnumerable{System.Object[]}}})
  name.vb: AsMappedDictionaries(Task(Of QueryResult(Of IEnumerable(Of Object()))))
  fullName: Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.Task<Open.Database.Extensions.QueryResult<System.Collections.Generic.IEnumerable<System.Object[]>>>)
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.Task(Of Open.Database.Extensions.QueryResult(Of System.Collections.Generic.IEnumerable(Of System.Object()))))
  nameWithType: QueryResultExtensions.AsMappedDictionaries(Task<QueryResult<IEnumerable<Object[]>>>)
  nameWithType.vb: QueryResultExtensions.AsMappedDictionaries(Task(Of QueryResult(Of IEnumerable(Of Object()))))
- uid: Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries*
  name: AsMappedDictionaries
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_AsMappedDictionaries_
  commentId: Overload:Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries
  isSpec: "True"
  fullName: Open.Database.Extensions.QueryResultExtensions.AsMappedDictionaries
  nameWithType: QueryResultExtensions.AsMappedDictionaries
- uid: Open.Database.Extensions.QueryResultExtensions.DequeueAs*
  name: DequeueAs
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_DequeueAs_
  commentId: Overload:Open.Database.Extensions.QueryResultExtensions.DequeueAs
  isSpec: "True"
  fullName: Open.Database.Extensions.QueryResultExtensions.DequeueAs
  nameWithType: QueryResultExtensions.DequeueAs
- uid: Open.Database.Extensions.QueryResultExtensions.DequeueAs``1(Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: DequeueAs<T>(QueryResult<Queue<Object[]>>, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_DequeueAs__1_Open_Database_Extensions_QueryResult_System_Collections_Generic_Queue_System_Object_____System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.QueryResultExtensions.DequeueAs``1(Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: DequeueAs(Of T)(QueryResult(Of Queue(Of Object())), IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.QueryResultExtensions.DequeueAs<T>(Open.Database.Extensions.QueryResult<System.Collections.Generic.Queue<System.Object[]>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.DequeueAs(Of T)(Open.Database.Extensions.QueryResult(Of System.Collections.Generic.Queue(Of System.Object())), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: QueryResultExtensions.DequeueAs<T>(QueryResult<Queue<Object[]>>, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: QueryResultExtensions.DequeueAs(Of T)(QueryResult(Of Queue(Of Object())), IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.QueryResultExtensions.DequeueAs``1(Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: DequeueAs<T>(QueryResult<Queue<Object[]>>, IEnumerable<>)
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_DequeueAs__1_Open_Database_Extensions_QueryResult_System_Collections_Generic_Queue_System_Object_____System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.QueryResultExtensions.DequeueAs``1(Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: DequeueAs(Of T)(QueryResult(Of Queue(Of Object())), IEnumerable(Of ))
  fullName: Open.Database.Extensions.QueryResultExtensions.DequeueAs<T>(Open.Database.Extensions.QueryResult<System.Collections.Generic.Queue<System.Object[]>>, System.Collections.Generic.IEnumerable<System.>)
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.DequeueAs(Of T)(Open.Database.Extensions.QueryResult(Of System.Collections.Generic.Queue(Of System.Object())), System.Collections.Generic.IEnumerable(Of System.))
  nameWithType: QueryResultExtensions.DequeueAs<T>(QueryResult<Queue<Object[]>>, IEnumerable<>)
  nameWithType.vb: QueryResultExtensions.DequeueAs(Of T)(QueryResult(Of Queue(Of Object())), IEnumerable(Of ))
- uid: Open.Database.Extensions.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.Task{Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: DequeueAs<T>(Task<QueryResult<Queue<Object[]>>>, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_DequeueAs__1_System_Threading_Tasks_Task_Open_Database_Extensions_QueryResult_System_Collections_Generic_Queue_System_Object______System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.Task{Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: DequeueAs(Of T)(Task(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.QueryResultExtensions.DequeueAs<T>(System.Threading.Tasks.Task<Open.Database.Extensions.QueryResult<System.Collections.Generic.Queue<System.Object[]>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.DequeueAs(Of T)(System.Threading.Tasks.Task(Of Open.Database.Extensions.QueryResult(Of System.Collections.Generic.Queue(Of System.Object()))), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: QueryResultExtensions.DequeueAs<T>(Task<QueryResult<Queue<Object[]>>>, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: QueryResultExtensions.DequeueAs(Of T)(Task(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.Task{Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: DequeueAs<T>(Task<QueryResult<Queue<Object[]>>>, IEnumerable<>)
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_DequeueAs__1_System_Threading_Tasks_Task_Open_Database_Extensions_QueryResult_System_Collections_Generic_Queue_System_Object______System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.Task{Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: DequeueAs(Of T)(Task(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of ))
  fullName: Open.Database.Extensions.QueryResultExtensions.DequeueAs<T>(System.Threading.Tasks.Task<Open.Database.Extensions.QueryResult<System.Collections.Generic.Queue<System.Object[]>>>, System.Collections.Generic.IEnumerable<System.>)
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.DequeueAs(Of T)(System.Threading.Tasks.Task(Of Open.Database.Extensions.QueryResult(Of System.Collections.Generic.Queue(Of System.Object()))), System.Collections.Generic.IEnumerable(Of System.))
  nameWithType: QueryResultExtensions.DequeueAs<T>(Task<QueryResult<Queue<Object[]>>>, IEnumerable<>)
  nameWithType.vb: QueryResultExtensions.DequeueAs(Of T)(Task(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of ))
- uid: Open.Database.Extensions.QueryResultExtensions.DequeueAsMappedDictionaries(Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}})
  name: DequeueAsMappedDictionaries(QueryResult<Queue<Object[]>>)
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_DequeueAsMappedDictionaries_Open_Database_Extensions_QueryResult_System_Collections_Generic_Queue_System_Object_____
  commentId: M:Open.Database.Extensions.QueryResultExtensions.DequeueAsMappedDictionaries(Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}})
  name.vb: DequeueAsMappedDictionaries(QueryResult(Of Queue(Of Object())))
  fullName: Open.Database.Extensions.QueryResultExtensions.DequeueAsMappedDictionaries(Open.Database.Extensions.QueryResult<System.Collections.Generic.Queue<System.Object[]>>)
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.DequeueAsMappedDictionaries(Open.Database.Extensions.QueryResult(Of System.Collections.Generic.Queue(Of System.Object())))
  nameWithType: QueryResultExtensions.DequeueAsMappedDictionaries(QueryResult<Queue<Object[]>>)
  nameWithType.vb: QueryResultExtensions.DequeueAsMappedDictionaries(QueryResult(Of Queue(Of Object())))
- uid: Open.Database.Extensions.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.Task{Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}}})
  name: DequeueAsMappedDictionaries(Task<QueryResult<Queue<Object[]>>>)
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_DequeueAsMappedDictionaries_System_Threading_Tasks_Task_Open_Database_Extensions_QueryResult_System_Collections_Generic_Queue_System_Object______
  commentId: M:Open.Database.Extensions.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.Task{Open.Database.Extensions.QueryResult{System.Collections.Generic.Queue{System.Object[]}}})
  name.vb: DequeueAsMappedDictionaries(Task(Of QueryResult(Of Queue(Of Object()))))
  fullName: Open.Database.Extensions.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.Task<Open.Database.Extensions.QueryResult<System.Collections.Generic.Queue<System.Object[]>>>)
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.Task(Of Open.Database.Extensions.QueryResult(Of System.Collections.Generic.Queue(Of System.Object()))))
  nameWithType: QueryResultExtensions.DequeueAsMappedDictionaries(Task<QueryResult<Queue<Object[]>>>)
  nameWithType.vb: QueryResultExtensions.DequeueAsMappedDictionaries(Task(Of QueryResult(Of Queue(Of Object()))))
- uid: Open.Database.Extensions.QueryResultExtensions.DequeueAsMappedDictionaries*
  name: DequeueAsMappedDictionaries
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_DequeueAsMappedDictionaries_
  commentId: Overload:Open.Database.Extensions.QueryResultExtensions.DequeueAsMappedDictionaries
  isSpec: "True"
  fullName: Open.Database.Extensions.QueryResultExtensions.DequeueAsMappedDictionaries
  nameWithType: QueryResultExtensions.DequeueAsMappedDictionaries
- uid: Open.Database.Extensions.QueryResultExtensions.To*
  name: To
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_To_
  commentId: Overload:Open.Database.Extensions.QueryResultExtensions.To
  isSpec: "True"
  fullName: Open.Database.Extensions.QueryResultExtensions.To
  nameWithType: QueryResultExtensions.To
- uid: Open.Database.Extensions.QueryResultExtensions.To``1(Open.Database.Extensions.QueryResult{System.Threading.Tasks.Dataflow.ISourceBlock{System.Object[]}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: To<T>(QueryResult<ISourceBlock<Object[]>>, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_To__1_Open_Database_Extensions_QueryResult_System_Threading_Tasks_Dataflow_ISourceBlock_System_Object_____System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.QueryResultExtensions.To``1(Open.Database.Extensions.QueryResult{System.Threading.Tasks.Dataflow.ISourceBlock{System.Object[]}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: To(Of T)(QueryResult(Of ISourceBlock(Of Object())), IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.QueryResultExtensions.To<T>(Open.Database.Extensions.QueryResult<System.Threading.Tasks.Dataflow.ISourceBlock<System.Object[]>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.To(Of T)(Open.Database.Extensions.QueryResult(Of System.Threading.Tasks.Dataflow.ISourceBlock(Of System.Object())), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: QueryResultExtensions.To<T>(QueryResult<ISourceBlock<Object[]>>, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: QueryResultExtensions.To(Of T)(QueryResult(Of ISourceBlock(Of Object())), IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.QueryResultExtensions.To``1(Open.Database.Extensions.QueryResult{System.Threading.Tasks.Dataflow.ISourceBlock{System.Object[]}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: To<T>(QueryResult<ISourceBlock<Object[]>>, IEnumerable<>)
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_To__1_Open_Database_Extensions_QueryResult_System_Threading_Tasks_Dataflow_ISourceBlock_System_Object_____System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.QueryResultExtensions.To``1(Open.Database.Extensions.QueryResult{System.Threading.Tasks.Dataflow.ISourceBlock{System.Object[]}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: To(Of T)(QueryResult(Of ISourceBlock(Of Object())), IEnumerable(Of ))
  fullName: Open.Database.Extensions.QueryResultExtensions.To<T>(Open.Database.Extensions.QueryResult<System.Threading.Tasks.Dataflow.ISourceBlock<System.Object[]>>, System.Collections.Generic.IEnumerable<System.>)
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.To(Of T)(Open.Database.Extensions.QueryResult(Of System.Threading.Tasks.Dataflow.ISourceBlock(Of System.Object())), System.Collections.Generic.IEnumerable(Of System.))
  nameWithType: QueryResultExtensions.To<T>(QueryResult<ISourceBlock<Object[]>>, IEnumerable<>)
  nameWithType.vb: QueryResultExtensions.To(Of T)(QueryResult(Of ISourceBlock(Of Object())), IEnumerable(Of ))
- uid: Open.Database.Extensions.QueryResultExtensions.To``1(Open.Database.Extensions.QueryResult{System.Threading.Tasks.Dataflow.ISourceBlock{System.Object[]}},System.ValueTuple{System.String,System.String}[])
  name: To<T>(QueryResult<ISourceBlock<Object[]>>, [])
  href: api/Open.Database.Extensions.QueryResultExtensions.html#Open_Database_Extensions_QueryResultExtensions_To__1_Open_Database_Extensions_QueryResult_System_Threading_Tasks_Dataflow_ISourceBlock_System_Object_____System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.QueryResultExtensions.To``1(Open.Database.Extensions.QueryResult{System.Threading.Tasks.Dataflow.ISourceBlock{System.Object[]}},System.ValueTuple{System.String,System.String}[])
  name.vb: To(Of T)(QueryResult(Of ISourceBlock(Of Object())), ())
  fullName: Open.Database.Extensions.QueryResultExtensions.To<T>(Open.Database.Extensions.QueryResult<System.Threading.Tasks.Dataflow.ISourceBlock<System.Object[]>>, System.[])
  fullName.vb: Open.Database.Extensions.QueryResultExtensions.To(Of T)(Open.Database.Extensions.QueryResult(Of System.Threading.Tasks.Dataflow.ISourceBlock(Of System.Object())), System.())
  nameWithType: QueryResultExtensions.To<T>(QueryResult<ISourceBlock<Object[]>>, [])
  nameWithType.vb: QueryResultExtensions.To(Of T)(QueryResult(Of ISourceBlock(Of Object())), ())
- uid: Open.Database.Extensions.SqlClient
  name: Open.Database.Extensions.SqlClient
  href: api/Open.Database.Extensions.SqlClient.html
  commentId: N:Open.Database.Extensions.SqlClient
  fullName: Open.Database.Extensions.SqlClient
  nameWithType: Open.Database.Extensions.SqlClient
- uid: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand
  name: ExpressiveSqlCommand
  href: api/Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.html
  commentId: T:Open.Database.Extensions.SqlClient.ExpressiveSqlCommand
  fullName: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand
  nameWithType: ExpressiveSqlCommand
- uid: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory{System.Data.SqlClient.SqlConnection},System.Data.CommandType,System.String,Open.Database.Extensions.ExpressiveCommandBase{System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlCommand,System.Data.SqlDbType,Open.Database.Extensions.SqlClient.ExpressiveSqlCommand}.Param[])
  name: ExpressiveSqlCommand(IDbConnectionFactory<SqlConnection>, CommandType, String, ExpressiveCommandBase<SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand>.Param[])
  href: api/Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.html#Open_Database_Extensions_SqlClient_ExpressiveSqlCommand__ctor_Open_Database_Extensions_IDbConnectionFactory_System_Data_SqlClient_SqlConnection__System_Data_CommandType_System_String_Open_Database_Extensions_ExpressiveCommandBase_System_Data_SqlClient_SqlConnection_System_Data_SqlClient_SqlCommand_System_Data_SqlDbType_Open_Database_Extensions_SqlClient_ExpressiveSqlCommand__Param___
  commentId: M:Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory{System.Data.SqlClient.SqlConnection},System.Data.CommandType,System.String,Open.Database.Extensions.ExpressiveCommandBase{System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlCommand,System.Data.SqlDbType,Open.Database.Extensions.SqlClient.ExpressiveSqlCommand}.Param[])
  name.vb: ExpressiveSqlCommand(IDbConnectionFactory(Of SqlConnection), CommandType, String, ExpressiveCommandBase(Of SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand).Param())
  fullName: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.ExpressiveSqlCommand(Open.Database.Extensions.IDbConnectionFactory<System.Data.SqlClient.SqlConnection>, System.Data.CommandType, System.String, Open.Database.Extensions.ExpressiveCommandBase<System.Data.SqlClient.SqlConnection, System.Data.SqlClient.SqlCommand, System.Data.SqlDbType, Open.Database.Extensions.SqlClient.ExpressiveSqlCommand>.Param[])
  fullName.vb: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.ExpressiveSqlCommand(Open.Database.Extensions.IDbConnectionFactory(Of System.Data.SqlClient.SqlConnection), System.Data.CommandType, System.String, Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.SqlClient.SqlConnection, System.Data.SqlClient.SqlCommand, System.Data.SqlDbType, Open.Database.Extensions.SqlClient.ExpressiveSqlCommand).Param())
  nameWithType: ExpressiveSqlCommand.ExpressiveSqlCommand(IDbConnectionFactory<SqlConnection>, CommandType, String, ExpressiveCommandBase<SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand>.Param[])
  nameWithType.vb: ExpressiveSqlCommand.ExpressiveSqlCommand(IDbConnectionFactory(Of SqlConnection), CommandType, String, ExpressiveCommandBase(Of SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand).Param())
- uid: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory{System.Data.SqlClient.SqlConnection},System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlCommand,System.Data.SqlDbType,Open.Database.Extensions.SqlClient.ExpressiveSqlCommand}.Param})
  name: ExpressiveSqlCommand(IDbConnectionFactory<SqlConnection>, CommandType, String, List<ExpressiveCommandBase<SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand>.Param>)
  href: api/Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.html#Open_Database_Extensions_SqlClient_ExpressiveSqlCommand__ctor_Open_Database_Extensions_IDbConnectionFactory_System_Data_SqlClient_SqlConnection__System_Data_CommandType_System_String_System_Collections_Generic_List_Open_Database_Extensions_ExpressiveCommandBase_System_Data_SqlClient_SqlConnection_System_Data_SqlClient_SqlCommand_System_Data_SqlDbType_Open_Database_Extensions_SqlClient_ExpressiveSqlCommand__Param__
  commentId: M:Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory{System.Data.SqlClient.SqlConnection},System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlCommand,System.Data.SqlDbType,Open.Database.Extensions.SqlClient.ExpressiveSqlCommand}.Param})
  name.vb: ExpressiveSqlCommand(IDbConnectionFactory(Of SqlConnection), CommandType, String, List(Of ExpressiveCommandBase(Of SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand).Param))
  fullName: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.ExpressiveSqlCommand(Open.Database.Extensions.IDbConnectionFactory<System.Data.SqlClient.SqlConnection>, System.Data.CommandType, System.String, System.Collections.Generic.List<Open.Database.Extensions.ExpressiveCommandBase<System.Data.SqlClient.SqlConnection, System.Data.SqlClient.SqlCommand, System.Data.SqlDbType, Open.Database.Extensions.SqlClient.ExpressiveSqlCommand>.Param>)
  fullName.vb: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.ExpressiveSqlCommand(Open.Database.Extensions.IDbConnectionFactory(Of System.Data.SqlClient.SqlConnection), System.Data.CommandType, System.String, System.Collections.Generic.List(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.SqlClient.SqlConnection, System.Data.SqlClient.SqlCommand, System.Data.SqlDbType, Open.Database.Extensions.SqlClient.ExpressiveSqlCommand).Param))
  nameWithType: ExpressiveSqlCommand.ExpressiveSqlCommand(IDbConnectionFactory<SqlConnection>, CommandType, String, List<ExpressiveCommandBase<SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand>.Param>)
  nameWithType.vb: ExpressiveSqlCommand.ExpressiveSqlCommand(IDbConnectionFactory(Of SqlConnection), CommandType, String, List(Of ExpressiveCommandBase(Of SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand).Param))
- uid: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.#ctor(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,Open.Database.Extensions.ExpressiveCommandBase{System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlCommand,System.Data.SqlDbType,Open.Database.Extensions.SqlClient.ExpressiveSqlCommand}.Param[])
  name: ExpressiveSqlCommand(SqlConnection, CommandType, String, ExpressiveCommandBase<SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand>.Param[])
  href: api/Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.html#Open_Database_Extensions_SqlClient_ExpressiveSqlCommand__ctor_System_Data_SqlClient_SqlConnection_System_Data_CommandType_System_String_Open_Database_Extensions_ExpressiveCommandBase_System_Data_SqlClient_SqlConnection_System_Data_SqlClient_SqlCommand_System_Data_SqlDbType_Open_Database_Extensions_SqlClient_ExpressiveSqlCommand__Param___
  commentId: M:Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.#ctor(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,Open.Database.Extensions.ExpressiveCommandBase{System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlCommand,System.Data.SqlDbType,Open.Database.Extensions.SqlClient.ExpressiveSqlCommand}.Param[])
  name.vb: ExpressiveSqlCommand(SqlConnection, CommandType, String, ExpressiveCommandBase(Of SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand).Param())
  fullName: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.ExpressiveSqlCommand(System.Data.SqlClient.SqlConnection, System.Data.CommandType, System.String, Open.Database.Extensions.ExpressiveCommandBase<System.Data.SqlClient.SqlConnection, System.Data.SqlClient.SqlCommand, System.Data.SqlDbType, Open.Database.Extensions.SqlClient.ExpressiveSqlCommand>.Param[])
  fullName.vb: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.ExpressiveSqlCommand(System.Data.SqlClient.SqlConnection, System.Data.CommandType, System.String, Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.SqlClient.SqlConnection, System.Data.SqlClient.SqlCommand, System.Data.SqlDbType, Open.Database.Extensions.SqlClient.ExpressiveSqlCommand).Param())
  nameWithType: ExpressiveSqlCommand.ExpressiveSqlCommand(SqlConnection, CommandType, String, ExpressiveCommandBase<SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand>.Param[])
  nameWithType.vb: ExpressiveSqlCommand.ExpressiveSqlCommand(SqlConnection, CommandType, String, ExpressiveCommandBase(Of SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand).Param())
- uid: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.#ctor(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlCommand,System.Data.SqlDbType,Open.Database.Extensions.SqlClient.ExpressiveSqlCommand}.Param})
  name: ExpressiveSqlCommand(SqlConnection, CommandType, String, List<ExpressiveCommandBase<SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand>.Param>)
  href: api/Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.html#Open_Database_Extensions_SqlClient_ExpressiveSqlCommand__ctor_System_Data_SqlClient_SqlConnection_System_Data_CommandType_System_String_System_Collections_Generic_List_Open_Database_Extensions_ExpressiveCommandBase_System_Data_SqlClient_SqlConnection_System_Data_SqlClient_SqlCommand_System_Data_SqlDbType_Open_Database_Extensions_SqlClient_ExpressiveSqlCommand__Param__
  commentId: M:Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.#ctor(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Collections.Generic.List{Open.Database.Extensions.ExpressiveCommandBase{System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlCommand,System.Data.SqlDbType,Open.Database.Extensions.SqlClient.ExpressiveSqlCommand}.Param})
  name.vb: ExpressiveSqlCommand(SqlConnection, CommandType, String, List(Of ExpressiveCommandBase(Of SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand).Param))
  fullName: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.ExpressiveSqlCommand(System.Data.SqlClient.SqlConnection, System.Data.CommandType, System.String, System.Collections.Generic.List<Open.Database.Extensions.ExpressiveCommandBase<System.Data.SqlClient.SqlConnection, System.Data.SqlClient.SqlCommand, System.Data.SqlDbType, Open.Database.Extensions.SqlClient.ExpressiveSqlCommand>.Param>)
  fullName.vb: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.ExpressiveSqlCommand(System.Data.SqlClient.SqlConnection, System.Data.CommandType, System.String, System.Collections.Generic.List(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.SqlClient.SqlConnection, System.Data.SqlClient.SqlCommand, System.Data.SqlDbType, Open.Database.Extensions.SqlClient.ExpressiveSqlCommand).Param))
  nameWithType: ExpressiveSqlCommand.ExpressiveSqlCommand(SqlConnection, CommandType, String, List<ExpressiveCommandBase<SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand>.Param>)
  nameWithType.vb: ExpressiveSqlCommand.ExpressiveSqlCommand(SqlConnection, CommandType, String, List(Of ExpressiveCommandBase(Of SqlConnection, SqlCommand, SqlDbType, ExpressiveSqlCommand).Param))
- uid: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.#ctor*
  name: ExpressiveSqlCommand
  href: api/Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.html#Open_Database_Extensions_SqlClient_ExpressiveSqlCommand__ctor_
  commentId: Overload:Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.ExpressiveSqlCommand
  nameWithType: ExpressiveSqlCommand.ExpressiveSqlCommand
- uid: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.AddParams(System.Data.SqlClient.SqlCommand)
  name: AddParams(SqlCommand)
  href: api/Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.html#Open_Database_Extensions_SqlClient_ExpressiveSqlCommand_AddParams_System_Data_SqlClient_SqlCommand_
  commentId: M:Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.AddParams(System.Data.SqlClient.SqlCommand)
  fullName: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.AddParams(System.Data.SqlClient.SqlCommand)
  nameWithType: ExpressiveSqlCommand.AddParams(SqlCommand)
- uid: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.AddParams*
  name: AddParams
  href: api/Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.html#Open_Database_Extensions_SqlClient_ExpressiveSqlCommand_AddParams_
  commentId: Overload:Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.AddParams
  isSpec: "True"
  fullName: Open.Database.Extensions.SqlClient.ExpressiveSqlCommand.AddParams
  nameWithType: ExpressiveSqlCommand.AddParams
- uid: Open.Database.Extensions.SqlClient.Extensions
  name: Extensions
  href: api/Open.Database.Extensions.SqlClient.Extensions.html
  commentId: T:Open.Database.Extensions.SqlClient.Extensions
  fullName: Open.Database.Extensions.SqlClient.Extensions
  nameWithType: Extensions
- uid: Open.Database.Extensions.SqlClient.Extensions.AddParameter(System.Data.SqlClient.SqlCommand,System.String,System.Object,System.Data.SqlDbType,System.Data.ParameterDirection)
  name: AddParameter(SqlCommand, String, Object, SqlDbType, ParameterDirection)
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_AddParameter_System_Data_SqlClient_SqlCommand_System_String_System_Object_System_Data_SqlDbType_System_Data_ParameterDirection_
  commentId: M:Open.Database.Extensions.SqlClient.Extensions.AddParameter(System.Data.SqlClient.SqlCommand,System.String,System.Object,System.Data.SqlDbType,System.Data.ParameterDirection)
  fullName: Open.Database.Extensions.SqlClient.Extensions.AddParameter(System.Data.SqlClient.SqlCommand, System.String, System.Object, System.Data.SqlDbType, System.Data.ParameterDirection)
  nameWithType: Extensions.AddParameter(SqlCommand, String, Object, SqlDbType, ParameterDirection)
- uid: Open.Database.Extensions.SqlClient.Extensions.AddParameter*
  name: AddParameter
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_AddParameter_
  commentId: Overload:Open.Database.Extensions.SqlClient.Extensions.AddParameter
  isSpec: "True"
  fullName: Open.Database.Extensions.SqlClient.Extensions.AddParameter
  nameWithType: Extensions.AddParameter
- uid: Open.Database.Extensions.SqlClient.Extensions.AddParameterType(System.Data.IDbCommand,System.String,System.Data.SqlDbType)
  name: AddParameterType(IDbCommand, String, SqlDbType)
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_AddParameterType_System_Data_IDbCommand_System_String_System_Data_SqlDbType_
  commentId: M:Open.Database.Extensions.SqlClient.Extensions.AddParameterType(System.Data.IDbCommand,System.String,System.Data.SqlDbType)
  fullName: Open.Database.Extensions.SqlClient.Extensions.AddParameterType(System.Data.IDbCommand, System.String, System.Data.SqlDbType)
  nameWithType: Extensions.AddParameterType(IDbCommand, String, SqlDbType)
- uid: Open.Database.Extensions.SqlClient.Extensions.AddParameterType(System.Data.SqlClient.SqlCommand,System.String,System.Data.SqlDbType,System.Data.ParameterDirection)
  name: AddParameterType(SqlCommand, String, SqlDbType, ParameterDirection)
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_AddParameterType_System_Data_SqlClient_SqlCommand_System_String_System_Data_SqlDbType_System_Data_ParameterDirection_
  commentId: M:Open.Database.Extensions.SqlClient.Extensions.AddParameterType(System.Data.SqlClient.SqlCommand,System.String,System.Data.SqlDbType,System.Data.ParameterDirection)
  fullName: Open.Database.Extensions.SqlClient.Extensions.AddParameterType(System.Data.SqlClient.SqlCommand, System.String, System.Data.SqlDbType, System.Data.ParameterDirection)
  nameWithType: Extensions.AddParameterType(SqlCommand, String, SqlDbType, ParameterDirection)
- uid: Open.Database.Extensions.SqlClient.Extensions.AddParameterType*
  name: AddParameterType
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_AddParameterType_
  commentId: Overload:Open.Database.Extensions.SqlClient.Extensions.AddParameterType
  isSpec: "True"
  fullName: Open.Database.Extensions.SqlClient.Extensions.AddParameterType
  nameWithType: Extensions.AddParameterType
- uid: Open.Database.Extensions.SqlClient.Extensions.Command(Open.Database.Extensions.IDbConnectionFactory{System.Data.SqlClient.SqlConnection},System.String,System.Data.CommandType)
  name: Command(IDbConnectionFactory<SqlConnection>, String, CommandType)
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_Command_Open_Database_Extensions_IDbConnectionFactory_System_Data_SqlClient_SqlConnection__System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.SqlClient.Extensions.Command(Open.Database.Extensions.IDbConnectionFactory{System.Data.SqlClient.SqlConnection},System.String,System.Data.CommandType)
  name.vb: Command(IDbConnectionFactory(Of SqlConnection), String, CommandType)
  fullName: Open.Database.Extensions.SqlClient.Extensions.Command(Open.Database.Extensions.IDbConnectionFactory<System.Data.SqlClient.SqlConnection>, System.String, System.Data.CommandType)
  fullName.vb: Open.Database.Extensions.SqlClient.Extensions.Command(Open.Database.Extensions.IDbConnectionFactory(Of System.Data.SqlClient.SqlConnection), System.String, System.Data.CommandType)
  nameWithType: Extensions.Command(IDbConnectionFactory<SqlConnection>, String, CommandType)
  nameWithType.vb: Extensions.Command(IDbConnectionFactory(Of SqlConnection), String, CommandType)
- uid: Open.Database.Extensions.SqlClient.Extensions.Command(System.Data.SqlClient.SqlConnection,System.String,System.Data.CommandType)
  name: Command(SqlConnection, String, CommandType)
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_Command_System_Data_SqlClient_SqlConnection_System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.SqlClient.Extensions.Command(System.Data.SqlClient.SqlConnection,System.String,System.Data.CommandType)
  fullName: Open.Database.Extensions.SqlClient.Extensions.Command(System.Data.SqlClient.SqlConnection, System.String, System.Data.CommandType)
  nameWithType: Extensions.Command(SqlConnection, String, CommandType)
- uid: Open.Database.Extensions.SqlClient.Extensions.Command(System.Func{System.Data.SqlClient.SqlConnection},System.String,System.Data.CommandType)
  name: Command(Func<SqlConnection>, String, CommandType)
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_Command_System_Func_System_Data_SqlClient_SqlConnection__System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.SqlClient.Extensions.Command(System.Func{System.Data.SqlClient.SqlConnection},System.String,System.Data.CommandType)
  name.vb: Command(Func(Of SqlConnection), String, CommandType)
  fullName: Open.Database.Extensions.SqlClient.Extensions.Command(System.Func<System.Data.SqlClient.SqlConnection>, System.String, System.Data.CommandType)
  fullName.vb: Open.Database.Extensions.SqlClient.Extensions.Command(System.Func(Of System.Data.SqlClient.SqlConnection), System.String, System.Data.CommandType)
  nameWithType: Extensions.Command(Func<SqlConnection>, String, CommandType)
  nameWithType.vb: Extensions.Command(Func(Of SqlConnection), String, CommandType)
- uid: Open.Database.Extensions.SqlClient.Extensions.Command*
  name: Command
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_Command_
  commentId: Overload:Open.Database.Extensions.SqlClient.Extensions.Command
  isSpec: "True"
  fullName: Open.Database.Extensions.SqlClient.Extensions.Command
  nameWithType: Extensions.Command
- uid: Open.Database.Extensions.SqlClient.Extensions.CreateCommand(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32)
  name: CreateCommand(SqlConnection, CommandType, String, Int32)
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_CreateCommand_System_Data_SqlClient_SqlConnection_System_Data_CommandType_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.SqlClient.Extensions.CreateCommand(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32)
  fullName: Open.Database.Extensions.SqlClient.Extensions.CreateCommand(System.Data.SqlClient.SqlConnection, System.Data.CommandType, System.String, System.Int32)
  nameWithType: Extensions.CreateCommand(SqlConnection, CommandType, String, Int32)
- uid: Open.Database.Extensions.SqlClient.Extensions.CreateCommand*
  name: CreateCommand
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_CreateCommand_
  commentId: Overload:Open.Database.Extensions.SqlClient.Extensions.CreateCommand
  isSpec: "True"
  fullName: Open.Database.Extensions.SqlClient.Extensions.CreateCommand
  nameWithType: Extensions.CreateCommand
- uid: Open.Database.Extensions.SqlClient.Extensions.CreateStoredProcedureCommand(System.Data.SqlClient.SqlConnection,System.String,System.Int32)
  name: CreateStoredProcedureCommand(SqlConnection, String, Int32)
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_CreateStoredProcedureCommand_System_Data_SqlClient_SqlConnection_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.SqlClient.Extensions.CreateStoredProcedureCommand(System.Data.SqlClient.SqlConnection,System.String,System.Int32)
  fullName: Open.Database.Extensions.SqlClient.Extensions.CreateStoredProcedureCommand(System.Data.SqlClient.SqlConnection, System.String, System.Int32)
  nameWithType: Extensions.CreateStoredProcedureCommand(SqlConnection, String, Int32)
- uid: Open.Database.Extensions.SqlClient.Extensions.CreateStoredProcedureCommand*
  name: CreateStoredProcedureCommand
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_CreateStoredProcedureCommand_
  commentId: Overload:Open.Database.Extensions.SqlClient.Extensions.CreateStoredProcedureCommand
  isSpec: "True"
  fullName: Open.Database.Extensions.SqlClient.Extensions.CreateStoredProcedureCommand
  nameWithType: Extensions.CreateStoredProcedureCommand
- uid: Open.Database.Extensions.SqlClient.Extensions.StoredProcedure(Open.Database.Extensions.IDbConnectionFactory{System.Data.SqlClient.SqlConnection},System.String)
  name: StoredProcedure(IDbConnectionFactory<SqlConnection>, String)
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_StoredProcedure_Open_Database_Extensions_IDbConnectionFactory_System_Data_SqlClient_SqlConnection__System_String_
  commentId: M:Open.Database.Extensions.SqlClient.Extensions.StoredProcedure(Open.Database.Extensions.IDbConnectionFactory{System.Data.SqlClient.SqlConnection},System.String)
  name.vb: StoredProcedure(IDbConnectionFactory(Of SqlConnection), String)
  fullName: Open.Database.Extensions.SqlClient.Extensions.StoredProcedure(Open.Database.Extensions.IDbConnectionFactory<System.Data.SqlClient.SqlConnection>, System.String)
  fullName.vb: Open.Database.Extensions.SqlClient.Extensions.StoredProcedure(Open.Database.Extensions.IDbConnectionFactory(Of System.Data.SqlClient.SqlConnection), System.String)
  nameWithType: Extensions.StoredProcedure(IDbConnectionFactory<SqlConnection>, String)
  nameWithType.vb: Extensions.StoredProcedure(IDbConnectionFactory(Of SqlConnection), String)
- uid: Open.Database.Extensions.SqlClient.Extensions.StoredProcedure(System.Data.SqlClient.SqlConnection,System.String)
  name: StoredProcedure(SqlConnection, String)
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_StoredProcedure_System_Data_SqlClient_SqlConnection_System_String_
  commentId: M:Open.Database.Extensions.SqlClient.Extensions.StoredProcedure(System.Data.SqlClient.SqlConnection,System.String)
  fullName: Open.Database.Extensions.SqlClient.Extensions.StoredProcedure(System.Data.SqlClient.SqlConnection, System.String)
  nameWithType: Extensions.StoredProcedure(SqlConnection, String)
- uid: Open.Database.Extensions.SqlClient.Extensions.StoredProcedure(System.Func{System.Data.SqlClient.SqlConnection},System.String)
  name: StoredProcedure(Func<SqlConnection>, String)
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_StoredProcedure_System_Func_System_Data_SqlClient_SqlConnection__System_String_
  commentId: M:Open.Database.Extensions.SqlClient.Extensions.StoredProcedure(System.Func{System.Data.SqlClient.SqlConnection},System.String)
  name.vb: StoredProcedure(Func(Of SqlConnection), String)
  fullName: Open.Database.Extensions.SqlClient.Extensions.StoredProcedure(System.Func<System.Data.SqlClient.SqlConnection>, System.String)
  fullName.vb: Open.Database.Extensions.SqlClient.Extensions.StoredProcedure(System.Func(Of System.Data.SqlClient.SqlConnection), System.String)
  nameWithType: Extensions.StoredProcedure(Func<SqlConnection>, String)
  nameWithType.vb: Extensions.StoredProcedure(Func(Of SqlConnection), String)
- uid: Open.Database.Extensions.SqlClient.Extensions.StoredProcedure*
  name: StoredProcedure
  href: api/Open.Database.Extensions.SqlClient.Extensions.html#Open_Database_Extensions_SqlClient_Extensions_StoredProcedure_
  commentId: Overload:Open.Database.Extensions.SqlClient.Extensions.StoredProcedure
  isSpec: "True"
  fullName: Open.Database.Extensions.SqlClient.Extensions.StoredProcedure
  nameWithType: Extensions.StoredProcedure
- uid: Open.Database.Extensions.SqlClient.SqlConnectionFactory
  name: SqlConnectionFactory
  href: api/Open.Database.Extensions.SqlClient.SqlConnectionFactory.html
  commentId: T:Open.Database.Extensions.SqlClient.SqlConnectionFactory
  fullName: Open.Database.Extensions.SqlClient.SqlConnectionFactory
  nameWithType: SqlConnectionFactory
- uid: Open.Database.Extensions.SqlClient.SqlConnectionFactory.#ctor(System.Func{System.Data.SqlClient.SqlConnection})
  name: SqlConnectionFactory(Func<SqlConnection>)
  href: api/Open.Database.Extensions.SqlClient.SqlConnectionFactory.html#Open_Database_Extensions_SqlClient_SqlConnectionFactory__ctor_System_Func_System_Data_SqlClient_SqlConnection__
  commentId: M:Open.Database.Extensions.SqlClient.SqlConnectionFactory.#ctor(System.Func{System.Data.SqlClient.SqlConnection})
  name.vb: SqlConnectionFactory(Func(Of SqlConnection))
  fullName: Open.Database.Extensions.SqlClient.SqlConnectionFactory.SqlConnectionFactory(System.Func<System.Data.SqlClient.SqlConnection>)
  fullName.vb: Open.Database.Extensions.SqlClient.SqlConnectionFactory.SqlConnectionFactory(System.Func(Of System.Data.SqlClient.SqlConnection))
  nameWithType: SqlConnectionFactory.SqlConnectionFactory(Func<SqlConnection>)
  nameWithType.vb: SqlConnectionFactory.SqlConnectionFactory(Func(Of SqlConnection))
- uid: Open.Database.Extensions.SqlClient.SqlConnectionFactory.#ctor(System.String)
  name: SqlConnectionFactory(String)
  href: api/Open.Database.Extensions.SqlClient.SqlConnectionFactory.html#Open_Database_Extensions_SqlClient_SqlConnectionFactory__ctor_System_String_
  commentId: M:Open.Database.Extensions.SqlClient.SqlConnectionFactory.#ctor(System.String)
  fullName: Open.Database.Extensions.SqlClient.SqlConnectionFactory.SqlConnectionFactory(System.String)
  nameWithType: SqlConnectionFactory.SqlConnectionFactory(String)
- uid: Open.Database.Extensions.SqlClient.SqlConnectionFactory.#ctor*
  name: SqlConnectionFactory
  href: api/Open.Database.Extensions.SqlClient.SqlConnectionFactory.html#Open_Database_Extensions_SqlClient_SqlConnectionFactory__ctor_
  commentId: Overload:Open.Database.Extensions.SqlClient.SqlConnectionFactory.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.SqlClient.SqlConnectionFactory.SqlConnectionFactory
  nameWithType: SqlConnectionFactory.SqlConnectionFactory
