### YamlMime:XRefMap
sorted: true
references:
- uid: Open.Database.Extensions
  name: Open.Database.Extensions
  href: api/Open.Database.Extensions.html
  commentId: N:Open.Database.Extensions
  fullName: Open.Database.Extensions
  nameWithType: Open.Database.Extensions
- uid: Open.Database.Extensions.CommandExtensions
  name: CommandExtensions
  href: api/Open.Database.Extensions.CommandExtensions.html
  commentId: T:Open.Database.Extensions.CommandExtensions
  fullName: Open.Database.Extensions.CommandExtensions
  nameWithType: CommandExtensions
- uid: Open.Database.Extensions.CommandExtensions.AddParameter(System.Data.IDbCommand,System.String,System.Object)
  name: AddParameter(IDbCommand, String, Object)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_AddParameter_System_Data_IDbCommand_System_String_System_Object_
  commentId: M:Open.Database.Extensions.CommandExtensions.AddParameter(System.Data.IDbCommand,System.String,System.Object)
  fullName: Open.Database.Extensions.CommandExtensions.AddParameter(System.Data.IDbCommand, System.String, System.Object)
  nameWithType: CommandExtensions.AddParameter(IDbCommand, String, Object)
- uid: Open.Database.Extensions.CommandExtensions.AddParameter(System.Data.IDbCommand,System.String,System.Object,System.Data.DbType,System.Data.ParameterDirection)
  name: AddParameter(IDbCommand, String, Object, DbType, ParameterDirection)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_AddParameter_System_Data_IDbCommand_System_String_System_Object_System_Data_DbType_System_Data_ParameterDirection_
  commentId: M:Open.Database.Extensions.CommandExtensions.AddParameter(System.Data.IDbCommand,System.String,System.Object,System.Data.DbType,System.Data.ParameterDirection)
  fullName: Open.Database.Extensions.CommandExtensions.AddParameter(System.Data.IDbCommand, System.String, System.Object, System.Data.DbType, System.Data.ParameterDirection)
  nameWithType: CommandExtensions.AddParameter(IDbCommand, String, Object, DbType, ParameterDirection)
- uid: Open.Database.Extensions.CommandExtensions.AddParameter*
  name: AddParameter
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_AddParameter_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.AddParameter
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.AddParameter
  nameWithType: CommandExtensions.AddParameter
- uid: Open.Database.Extensions.CommandExtensions.AddParameterType(System.Data.IDbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection)
  name: AddParameterType(IDbCommand, String, DbType, ParameterDirection)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_AddParameterType_System_Data_IDbCommand_System_String_System_Data_DbType_System_Data_ParameterDirection_
  commentId: M:Open.Database.Extensions.CommandExtensions.AddParameterType(System.Data.IDbCommand,System.String,System.Data.DbType,System.Data.ParameterDirection)
  fullName: Open.Database.Extensions.CommandExtensions.AddParameterType(System.Data.IDbCommand, System.String, System.Data.DbType, System.Data.ParameterDirection)
  nameWithType: CommandExtensions.AddParameterType(IDbCommand, String, DbType, ParameterDirection)
- uid: Open.Database.Extensions.CommandExtensions.AddParameterType*
  name: AddParameterType
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_AddParameterType_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.AddParameterType
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.AddParameterType
  nameWithType: CommandExtensions.AddParameterType
- uid: Open.Database.Extensions.CommandExtensions.AddReturnParameter(System.Data.IDbCommand,System.Data.DbType,System.String)
  name: AddReturnParameter(IDbCommand, DbType, String)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_AddReturnParameter_System_Data_IDbCommand_System_Data_DbType_System_String_
  commentId: M:Open.Database.Extensions.CommandExtensions.AddReturnParameter(System.Data.IDbCommand,System.Data.DbType,System.String)
  fullName: Open.Database.Extensions.CommandExtensions.AddReturnParameter(System.Data.IDbCommand, System.Data.DbType, System.String)
  nameWithType: CommandExtensions.AddReturnParameter(IDbCommand, DbType, String)
- uid: Open.Database.Extensions.CommandExtensions.AddReturnParameter(System.Data.IDbCommand,System.String)
  name: AddReturnParameter(IDbCommand, String)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_AddReturnParameter_System_Data_IDbCommand_System_String_
  commentId: M:Open.Database.Extensions.CommandExtensions.AddReturnParameter(System.Data.IDbCommand,System.String)
  fullName: Open.Database.Extensions.CommandExtensions.AddReturnParameter(System.Data.IDbCommand, System.String)
  nameWithType: CommandExtensions.AddReturnParameter(IDbCommand, String)
- uid: Open.Database.Extensions.CommandExtensions.AddReturnParameter*
  name: AddReturnParameter
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_AddReturnParameter_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.AddReturnParameter
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.AddReturnParameter
  nameWithType: CommandExtensions.AddReturnParameter
- uid: Open.Database.Extensions.CommandExtensions.ExecuteReader(System.Data.IDbCommand,System.Action{System.Data.IDataReader},System.Data.CommandBehavior)
  name: ExecuteReader(IDbCommand, Action<IDataReader>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ExecuteReader_System_Data_IDbCommand_System_Action_System_Data_IDataReader__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.ExecuteReader(System.Data.IDbCommand,System.Action{System.Data.IDataReader},System.Data.CommandBehavior)
  name.vb: ExecuteReader(IDbCommand, Action(Of IDataReader), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.ExecuteReader(System.Data.IDbCommand, System.Action<System.Data.IDataReader>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ExecuteReader(System.Data.IDbCommand, System.Action(Of System.Data.IDataReader), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.ExecuteReader(IDbCommand, Action<IDataReader>, CommandBehavior)
  nameWithType.vb: CommandExtensions.ExecuteReader(IDbCommand, Action(Of IDataReader), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.ExecuteReader*
  name: ExecuteReader
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ExecuteReader_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.ExecuteReader
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.ExecuteReader
  nameWithType: CommandExtensions.ExecuteReader
- uid: Open.Database.Extensions.CommandExtensions.ExecuteReader``1(System.Data.IDbCommand,System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior)
  name: ExecuteReader<T>(IDbCommand, Func<IDataReader, T>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ExecuteReader__1_System_Data_IDbCommand_System_Func_System_Data_IDataReader___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.ExecuteReader``1(System.Data.IDbCommand,System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior)
  name.vb: ExecuteReader(Of T)(IDbCommand, Func(Of IDataReader, T), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.ExecuteReader<T>(System.Data.IDbCommand, System.Func<System.Data.IDataReader, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ExecuteReader(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataReader, T), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.ExecuteReader<T>(IDbCommand, Func<IDataReader, T>, CommandBehavior)
  nameWithType.vb: CommandExtensions.ExecuteReader(Of T)(IDbCommand, Func(Of IDataReader, T), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.Common.DbCommand,System.Action{System.Data.Common.DbDataReader},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name: ExecuteReaderAsync(DbCommand, Action<DbDataReader>, CommandBehavior, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ExecuteReaderAsync_System_Data_Common_DbCommand_System_Action_System_Data_Common_DbDataReader__System_Data_CommandBehavior_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.Common.DbCommand,System.Action{System.Data.Common.DbDataReader},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name.vb: ExecuteReaderAsync(DbCommand, Action(Of DbDataReader), CommandBehavior, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.Common.DbCommand, System.Action<System.Data.Common.DbDataReader>, System.Data.CommandBehavior, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.Common.DbCommand, System.Action(Of System.Data.Common.DbDataReader), System.Data.CommandBehavior, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ExecuteReaderAsync(DbCommand, Action<DbDataReader>, CommandBehavior, CancellationToken)
  nameWithType.vb: CommandExtensions.ExecuteReaderAsync(DbCommand, Action(Of DbDataReader), CommandBehavior, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name: ExecuteReaderAsync(DbCommand, Func<DbDataReader, ValueTask>, CommandBehavior, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ExecuteReaderAsync_System_Data_Common_DbCommand_System_Func_System_Data_Common_DbDataReader_System_Threading_Tasks_ValueTask__System_Data_CommandBehavior_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name.vb: ExecuteReaderAsync(DbCommand, Func(Of DbDataReader, ValueTask), CommandBehavior, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.Common.DbCommand, System.Func<System.Data.Common.DbDataReader, System.Threading.Tasks.ValueTask>, System.Data.CommandBehavior, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.Common.DbCommand, System.Func(Of System.Data.Common.DbDataReader, System.Threading.Tasks.ValueTask), System.Data.CommandBehavior, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ExecuteReaderAsync(DbCommand, Func<DbDataReader, ValueTask>, CommandBehavior, CancellationToken)
  nameWithType.vb: CommandExtensions.ExecuteReaderAsync(DbCommand, Func(Of DbDataReader, ValueTask), CommandBehavior, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.IDbCommand,System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name: ExecuteReaderAsync(IDbCommand, Func<IDataReader, ValueTask>, CommandBehavior, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ExecuteReaderAsync_System_Data_IDbCommand_System_Func_System_Data_IDataReader_System_Threading_Tasks_ValueTask__System_Data_CommandBehavior_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.IDbCommand,System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name.vb: ExecuteReaderAsync(IDbCommand, Func(Of IDataReader, ValueTask), CommandBehavior, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.IDbCommand, System.Func<System.Data.IDataReader, System.Threading.Tasks.ValueTask>, System.Data.CommandBehavior, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(System.Data.IDbCommand, System.Func(Of System.Data.IDataReader, System.Threading.Tasks.ValueTask), System.Data.CommandBehavior, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ExecuteReaderAsync(IDbCommand, Func<IDataReader, ValueTask>, CommandBehavior, CancellationToken)
  nameWithType.vb: CommandExtensions.ExecuteReaderAsync(IDbCommand, Func(Of IDataReader, ValueTask), CommandBehavior, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync*
  name: ExecuteReaderAsync
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ExecuteReaderAsync_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync
  nameWithType: CommandExtensions.ExecuteReaderAsync
- uid: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbDataReader,``0},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name: ExecuteReaderAsync<T>(DbCommand, Func<DbDataReader, T>, CommandBehavior, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ExecuteReaderAsync__1_System_Data_Common_DbCommand_System_Func_System_Data_Common_DbDataReader___0__System_Data_CommandBehavior_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbDataReader,``0},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name.vb: ExecuteReaderAsync(Of T)(DbCommand, Func(Of DbDataReader, T), CommandBehavior, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync<T>(System.Data.Common.DbCommand, System.Func<System.Data.Common.DbDataReader, T>, System.Data.CommandBehavior, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(Of T)(System.Data.Common.DbCommand, System.Func(Of System.Data.Common.DbDataReader, T), System.Data.CommandBehavior, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ExecuteReaderAsync<T>(DbCommand, Func<DbDataReader, T>, CommandBehavior, CancellationToken)
  nameWithType.vb: CommandExtensions.ExecuteReaderAsync(Of T)(DbCommand, Func(Of DbDataReader, T), CommandBehavior, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name: ExecuteReaderAsync<T>(DbCommand, Func<DbDataReader, ValueTask<T>>, CommandBehavior, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ExecuteReaderAsync__1_System_Data_Common_DbCommand_System_Func_System_Data_Common_DbDataReader_System_Threading_Tasks_ValueTask___0___System_Data_CommandBehavior_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.Common.DbDataReader,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name.vb: ExecuteReaderAsync(Of T)(DbCommand, Func(Of DbDataReader, ValueTask(Of T)), CommandBehavior, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync<T>(System.Data.Common.DbCommand, System.Func<System.Data.Common.DbDataReader, System.Threading.Tasks.ValueTask<T>>, System.Data.CommandBehavior, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(Of T)(System.Data.Common.DbCommand, System.Func(Of System.Data.Common.DbDataReader, System.Threading.Tasks.ValueTask(Of T)), System.Data.CommandBehavior, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ExecuteReaderAsync<T>(DbCommand, Func<DbDataReader, ValueTask<T>>, CommandBehavior, CancellationToken)
  nameWithType.vb: CommandExtensions.ExecuteReaderAsync(Of T)(DbCommand, Func(Of DbDataReader, ValueTask(Of T)), CommandBehavior, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync``1(System.Data.IDbCommand,System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name: ExecuteReaderAsync<T>(IDbCommand, Func<IDataReader, ValueTask<T>>, CommandBehavior, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ExecuteReaderAsync__1_System_Data_IDbCommand_System_Func_System_Data_IDataReader_System_Threading_Tasks_ValueTask___0___System_Data_CommandBehavior_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync``1(System.Data.IDbCommand,System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name.vb: ExecuteReaderAsync(Of T)(IDbCommand, Func(Of IDataReader, ValueTask(Of T)), CommandBehavior, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync<T>(System.Data.IDbCommand, System.Func<System.Data.IDataReader, System.Threading.Tasks.ValueTask<T>>, System.Data.CommandBehavior, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ExecuteReaderAsync(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataReader, System.Threading.Tasks.ValueTask(Of T)), System.Data.CommandBehavior, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ExecuteReaderAsync<T>(IDbCommand, Func<IDataReader, ValueTask<T>>, CommandBehavior, CancellationToken)
  nameWithType.vb: CommandExtensions.ExecuteReaderAsync(Of T)(IDbCommand, Func(Of IDataReader, ValueTask(Of T)), CommandBehavior, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.First*
  name: First
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_First_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.First
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.First
  nameWithType: CommandExtensions.First
- uid: Open.Database.Extensions.CommandExtensions.First``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: First<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_First__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.First``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: First(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.First<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.First(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.First<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: CommandExtensions.First(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.FirstOrDefault*
  name: FirstOrDefault
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_FirstOrDefault_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.FirstOrDefault
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.FirstOrDefault
  nameWithType: CommandExtensions.FirstOrDefault
- uid: Open.Database.Extensions.CommandExtensions.FirstOrDefault``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: FirstOrDefault<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_FirstOrDefault__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.FirstOrDefault``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: FirstOrDefault(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.FirstOrDefault<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.FirstOrDefault(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.FirstOrDefault<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: CommandExtensions.FirstOrDefault(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.FirstOrdinalResults(System.Data.IDbCommand,System.Data.CommandBehavior)
  name: FirstOrdinalResults(IDbCommand, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_FirstOrdinalResults_System_Data_IDbCommand_System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.FirstOrdinalResults(System.Data.IDbCommand,System.Data.CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.FirstOrdinalResults(System.Data.IDbCommand, System.Data.CommandBehavior)
  nameWithType: CommandExtensions.FirstOrdinalResults(IDbCommand, CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.FirstOrdinalResults*
  name: FirstOrdinalResults
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_FirstOrdinalResults_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.FirstOrdinalResults
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.FirstOrdinalResults
  nameWithType: CommandExtensions.FirstOrdinalResults
- uid: Open.Database.Extensions.CommandExtensions.FirstOrdinalResults``1(System.Data.Common.DbCommand,System.Data.CommandBehavior)
  name: FirstOrdinalResults<T0>(DbCommand, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_FirstOrdinalResults__1_System_Data_Common_DbCommand_System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.FirstOrdinalResults``1(System.Data.Common.DbCommand,System.Data.CommandBehavior)
  name.vb: FirstOrdinalResults(Of T0)(DbCommand, CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.FirstOrdinalResults<T0>(System.Data.Common.DbCommand, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.FirstOrdinalResults(Of T0)(System.Data.Common.DbCommand, System.Data.CommandBehavior)
  nameWithType: CommandExtensions.FirstOrdinalResults<T0>(DbCommand, CommandBehavior)
  nameWithType.vb: CommandExtensions.FirstOrdinalResults(Of T0)(DbCommand, CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.FirstOrdinalResults``1(System.Data.IDbCommand,System.Data.CommandBehavior)
  name: FirstOrdinalResults<T0>(IDbCommand, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_FirstOrdinalResults__1_System_Data_IDbCommand_System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.FirstOrdinalResults``1(System.Data.IDbCommand,System.Data.CommandBehavior)
  name.vb: FirstOrdinalResults(Of T0)(IDbCommand, CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.FirstOrdinalResults<T0>(System.Data.IDbCommand, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.FirstOrdinalResults(Of T0)(System.Data.IDbCommand, System.Data.CommandBehavior)
  nameWithType: CommandExtensions.FirstOrdinalResults<T0>(IDbCommand, CommandBehavior)
  nameWithType.vb: CommandExtensions.FirstOrdinalResults(Of T0)(IDbCommand, CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.FirstOrdinalResultsAsync(System.Data.Common.DbCommand,System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  name: FirstOrdinalResultsAsync(DbCommand, CommandBehavior, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_FirstOrdinalResultsAsync_System_Data_Common_DbCommand_System_Data_CommandBehavior_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.FirstOrdinalResultsAsync(System.Data.Common.DbCommand,System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.FirstOrdinalResultsAsync(System.Data.Common.DbCommand, System.Data.CommandBehavior, System.Boolean, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.FirstOrdinalResultsAsync(DbCommand, CommandBehavior, Boolean, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.FirstOrdinalResultsAsync*
  name: FirstOrdinalResultsAsync
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_FirstOrdinalResultsAsync_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.FirstOrdinalResultsAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.FirstOrdinalResultsAsync
  nameWithType: CommandExtensions.FirstOrdinalResultsAsync
- uid: Open.Database.Extensions.CommandExtensions.FirstOrdinalResultsAsync``1(System.Data.Common.DbCommand,System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  name: FirstOrdinalResultsAsync<T0>(DbCommand, CommandBehavior, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_FirstOrdinalResultsAsync__1_System_Data_Common_DbCommand_System_Data_CommandBehavior_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.FirstOrdinalResultsAsync``1(System.Data.Common.DbCommand,System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  name.vb: FirstOrdinalResultsAsync(Of T0)(DbCommand, CommandBehavior, Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.FirstOrdinalResultsAsync<T0>(System.Data.Common.DbCommand, System.Data.CommandBehavior, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.FirstOrdinalResultsAsync(Of T0)(System.Data.Common.DbCommand, System.Data.CommandBehavior, System.Boolean, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.FirstOrdinalResultsAsync<T0>(DbCommand, CommandBehavior, Boolean, CancellationToken)
  nameWithType.vb: CommandExtensions.FirstOrdinalResultsAsync(Of T0)(DbCommand, CommandBehavior, Boolean, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand,System.Action{System.Data.IDataRecord},System.Boolean,System.Threading.CancellationToken)
  name: ForEachAsync(DbCommand, Action<IDataRecord>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ForEachAsync_System_Data_Common_DbCommand_System_Action_System_Data_IDataRecord__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand,System.Action{System.Data.IDataRecord},System.Boolean,System.Threading.CancellationToken)
  name.vb: ForEachAsync(DbCommand, Action(Of IDataRecord), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand, System.Action<System.Data.IDataRecord>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand, System.Action(Of System.Data.IDataRecord), System.Boolean, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ForEachAsync(DbCommand, Action<IDataRecord>, Boolean, CancellationToken)
  nameWithType.vb: CommandExtensions.ForEachAsync(DbCommand, Action(Of IDataRecord), Boolean, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand,System.Action{System.Data.IDataRecord},System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  name: ForEachAsync(DbCommand, Action<IDataRecord>, CommandBehavior, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ForEachAsync_System_Data_Common_DbCommand_System_Action_System_Data_IDataRecord__System_Data_CommandBehavior_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand,System.Action{System.Data.IDataRecord},System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  name.vb: ForEachAsync(DbCommand, Action(Of IDataRecord), CommandBehavior, Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand, System.Action<System.Data.IDataRecord>, System.Data.CommandBehavior, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand, System.Action(Of System.Data.IDataRecord), System.Data.CommandBehavior, System.Boolean, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ForEachAsync(DbCommand, Action<IDataRecord>, CommandBehavior, Boolean, CancellationToken)
  nameWithType.vb: CommandExtensions.ForEachAsync(DbCommand, Action(Of IDataRecord), CommandBehavior, Boolean, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask},System.Boolean,System.Threading.CancellationToken)
  name: ForEachAsync(DbCommand, Func<IDataRecord, ValueTask>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ForEachAsync_System_Data_Common_DbCommand_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask},System.Boolean,System.Threading.CancellationToken)
  name.vb: ForEachAsync(DbCommand, Func(Of IDataRecord, ValueTask), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand, System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask), System.Boolean, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ForEachAsync(DbCommand, Func<IDataRecord, ValueTask>, Boolean, CancellationToken)
  nameWithType.vb: CommandExtensions.ForEachAsync(DbCommand, Func(Of IDataRecord, ValueTask), Boolean, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  name: ForEachAsync(DbCommand, Func<IDataRecord, ValueTask>, CommandBehavior, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ForEachAsync_System_Data_Common_DbCommand_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask__System_Data_CommandBehavior_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  name.vb: ForEachAsync(DbCommand, Func(Of IDataRecord, ValueTask), CommandBehavior, Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand, System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask>, System.Data.CommandBehavior, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ForEachAsync(System.Data.Common.DbCommand, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask), System.Data.CommandBehavior, System.Boolean, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ForEachAsync(DbCommand, Func<IDataRecord, ValueTask>, CommandBehavior, Boolean, CancellationToken)
  nameWithType.vb: CommandExtensions.ForEachAsync(DbCommand, Func(Of IDataRecord, ValueTask), CommandBehavior, Boolean, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ForEachAsync*
  name: ForEachAsync
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ForEachAsync_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.ForEachAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.ForEachAsync
  nameWithType: CommandExtensions.ForEachAsync
- uid: Open.Database.Extensions.CommandExtensions.IterateReader(System.Data.IDbCommand,System.Action{System.Data.IDataRecord},System.Data.CommandBehavior)
  name: IterateReader(IDbCommand, Action<IDataRecord>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_IterateReader_System_Data_IDbCommand_System_Action_System_Data_IDataRecord__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.IterateReader(System.Data.IDbCommand,System.Action{System.Data.IDataRecord},System.Data.CommandBehavior)
  name.vb: IterateReader(IDbCommand, Action(Of IDataRecord), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.IterateReader(System.Data.IDbCommand, System.Action<System.Data.IDataRecord>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.IterateReader(System.Data.IDbCommand, System.Action(Of System.Data.IDataRecord), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.IterateReader(IDbCommand, Action<IDataRecord>, CommandBehavior)
  nameWithType.vb: CommandExtensions.IterateReader(IDbCommand, Action(Of IDataRecord), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.IterateReader(System.Data.IDbCommand,System.Data.CommandBehavior,System.Action{System.Data.IDataRecord})
  name: IterateReader(IDbCommand, CommandBehavior, Action<IDataRecord>)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_IterateReader_System_Data_IDbCommand_System_Data_CommandBehavior_System_Action_System_Data_IDataRecord__
  commentId: M:Open.Database.Extensions.CommandExtensions.IterateReader(System.Data.IDbCommand,System.Data.CommandBehavior,System.Action{System.Data.IDataRecord})
  name.vb: IterateReader(IDbCommand, CommandBehavior, Action(Of IDataRecord))
  fullName: Open.Database.Extensions.CommandExtensions.IterateReader(System.Data.IDbCommand, System.Data.CommandBehavior, System.Action<System.Data.IDataRecord>)
  fullName.vb: Open.Database.Extensions.CommandExtensions.IterateReader(System.Data.IDbCommand, System.Data.CommandBehavior, System.Action(Of System.Data.IDataRecord))
  nameWithType: CommandExtensions.IterateReader(IDbCommand, CommandBehavior, Action<IDataRecord>)
  nameWithType.vb: CommandExtensions.IterateReader(IDbCommand, CommandBehavior, Action(Of IDataRecord))
- uid: Open.Database.Extensions.CommandExtensions.IterateReader*
  name: IterateReader
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_IterateReader_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.IterateReader
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.IterateReader
  nameWithType: CommandExtensions.IterateReader
- uid: Open.Database.Extensions.CommandExtensions.IterateReader``2(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})
  name: IterateReader<TEntity, TResult>(IDbCommand, CommandBehavior, Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_IterateReader__2_System_Data_IDbCommand_System_Data_CommandBehavior_System_Func_System_Data_IDataRecord___0__System_Func_System_Collections_Generic_IEnumerable___0____1__
  commentId: M:Open.Database.Extensions.CommandExtensions.IterateReader``2(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})
  name.vb: IterateReader(Of TEntity, TResult)(IDbCommand, CommandBehavior, Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult))
  fullName: Open.Database.Extensions.CommandExtensions.IterateReader<TEntity, TResult>(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func<System.Data.IDataRecord, TEntity>, System.Func<System.Collections.Generic.IEnumerable<TEntity>, TResult>)
  fullName.vb: Open.Database.Extensions.CommandExtensions.IterateReader(Of TEntity, TResult)(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func(Of System.Data.IDataRecord, TEntity), System.Func(Of System.Collections.Generic.IEnumerable(Of TEntity), TResult))
  nameWithType: CommandExtensions.IterateReader<TEntity, TResult>(IDbCommand, CommandBehavior, Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>)
  nameWithType.vb: CommandExtensions.IterateReader(Of TEntity, TResult)(IDbCommand, CommandBehavior, Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult))
- uid: Open.Database.Extensions.CommandExtensions.IterateReader``2(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1},System.Data.CommandBehavior)
  name: IterateReader<TEntity, TResult>(IDbCommand, Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_IterateReader__2_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__System_Func_System_Collections_Generic_IEnumerable___0____1__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.IterateReader``2(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1},System.Data.CommandBehavior)
  name.vb: IterateReader(Of TEntity, TResult)(IDbCommand, Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.IterateReader<TEntity, TResult>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, TEntity>, System.Func<System.Collections.Generic.IEnumerable<TEntity>, TResult>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.IterateReader(Of TEntity, TResult)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, TEntity), System.Func(Of System.Collections.Generic.IEnumerable(Of TEntity), TResult), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.IterateReader<TEntity, TResult>(IDbCommand, Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>, CommandBehavior)
  nameWithType.vb: CommandExtensions.IterateReader(Of TEntity, TResult)(IDbCommand, Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.IterateReaderWhile(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,System.Boolean},System.Data.CommandBehavior)
  name: IterateReaderWhile(IDbCommand, Func<IDataRecord, Boolean>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_IterateReaderWhile_System_Data_IDbCommand_System_Func_System_Data_IDataRecord_System_Boolean__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.IterateReaderWhile(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,System.Boolean},System.Data.CommandBehavior)
  name.vb: IterateReaderWhile(IDbCommand, Func(Of IDataRecord, Boolean), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.IterateReaderWhile(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, System.Boolean>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.IterateReaderWhile(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, System.Boolean), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.IterateReaderWhile(IDbCommand, Func<IDataRecord, Boolean>, CommandBehavior)
  nameWithType.vb: CommandExtensions.IterateReaderWhile(IDbCommand, Func(Of IDataRecord, Boolean), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.IterateReaderWhile*
  name: IterateReaderWhile
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_IterateReaderWhile_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.IterateReaderWhile
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.IterateReaderWhile
  nameWithType: CommandExtensions.IterateReaderWhile
- uid: Open.Database.Extensions.CommandExtensions.IterateReaderWhileAsync(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{System.Boolean}},System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  name: IterateReaderWhileAsync(DbCommand, Func<IDataRecord, ValueTask<Boolean>>, CommandBehavior, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_IterateReaderWhileAsync_System_Data_Common_DbCommand_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask_System_Boolean___System_Data_CommandBehavior_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.IterateReaderWhileAsync(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{System.Boolean}},System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  name.vb: IterateReaderWhileAsync(DbCommand, Func(Of IDataRecord, ValueTask(Of Boolean)), CommandBehavior, Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.IterateReaderWhileAsync(System.Data.Common.DbCommand, System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask<System.Boolean>>, System.Data.CommandBehavior, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.IterateReaderWhileAsync(System.Data.Common.DbCommand, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask(Of System.Boolean)), System.Data.CommandBehavior, System.Boolean, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.IterateReaderWhileAsync(DbCommand, Func<IDataRecord, ValueTask<Boolean>>, CommandBehavior, Boolean, CancellationToken)
  nameWithType.vb: CommandExtensions.IterateReaderWhileAsync(DbCommand, Func(Of IDataRecord, ValueTask(Of Boolean)), CommandBehavior, Boolean, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.IterateReaderWhileAsync*
  name: IterateReaderWhileAsync
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_IterateReaderWhileAsync_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.IterateReaderWhileAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.IterateReaderWhileAsync
  nameWithType: CommandExtensions.IterateReaderWhileAsync
- uid: Open.Database.Extensions.CommandExtensions.Single*
  name: Single
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_Single_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.Single
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.Single
  nameWithType: CommandExtensions.Single
- uid: Open.Database.Extensions.CommandExtensions.Single``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: Single<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_Single__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.Single``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: Single(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.Single<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.Single(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.Single<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: CommandExtensions.Single(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.SingleOrDefault*
  name: SingleOrDefault
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_SingleOrDefault_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.SingleOrDefault
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.SingleOrDefault
  nameWithType: CommandExtensions.SingleOrDefault
- uid: Open.Database.Extensions.CommandExtensions.SingleOrDefault``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: SingleOrDefault<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_SingleOrDefault__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.SingleOrDefault``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: SingleOrDefault(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.SingleOrDefault<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.SingleOrDefault(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.SingleOrDefault<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: CommandExtensions.SingleOrDefault(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.Skip*
  name: Skip
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_Skip_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.Skip
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.Skip
  nameWithType: CommandExtensions.Skip
- uid: Open.Database.Extensions.CommandExtensions.Skip``1(System.Data.IDbCommand,System.Int32,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: Skip<T>(IDbCommand, Int32, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_Skip__1_System_Data_IDbCommand_System_Int32_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.Skip``1(System.Data.IDbCommand,System.Int32,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: Skip(Of T)(IDbCommand, Int32, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.Skip<T>(System.Data.IDbCommand, System.Int32, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.Skip(Of T)(System.Data.IDbCommand, System.Int32, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.Skip<T>(IDbCommand, Int32, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: CommandExtensions.Skip(Of T)(IDbCommand, Int32, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.SkipThenTake*
  name: SkipThenTake
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_SkipThenTake_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.SkipThenTake
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.SkipThenTake
  nameWithType: CommandExtensions.SkipThenTake
- uid: Open.Database.Extensions.CommandExtensions.SkipThenTake``1(System.Data.IDbCommand,System.Int32,System.Int32,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: SkipThenTake<T>(IDbCommand, Int32, Int32, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_SkipThenTake__1_System_Data_IDbCommand_System_Int32_System_Int32_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.SkipThenTake``1(System.Data.IDbCommand,System.Int32,System.Int32,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: SkipThenTake(Of T)(IDbCommand, Int32, Int32, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.SkipThenTake<T>(System.Data.IDbCommand, System.Int32, System.Int32, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.SkipThenTake(Of T)(System.Data.IDbCommand, System.Int32, System.Int32, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.SkipThenTake<T>(IDbCommand, Int32, Int32, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: CommandExtensions.SkipThenTake(Of T)(IDbCommand, Int32, Int32, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.Take*
  name: Take
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_Take_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.Take
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.Take
  nameWithType: CommandExtensions.Take
- uid: Open.Database.Extensions.CommandExtensions.Take``1(System.Data.IDbCommand,System.Int32,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: Take<T>(IDbCommand, Int32, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_Take__1_System_Data_IDbCommand_System_Int32_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.Take``1(System.Data.IDbCommand,System.Int32,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: Take(Of T)(IDbCommand, Int32, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.Take<T>(System.Data.IDbCommand, System.Int32, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.Take(Of T)(System.Data.IDbCommand, System.Int32, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.Take<T>(IDbCommand, Int32, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: CommandExtensions.Take(Of T)(IDbCommand, Int32, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.ToArray*
  name: ToArray
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToArray_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.ToArray
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.ToArray
  nameWithType: CommandExtensions.ToArray
- uid: Open.Database.Extensions.CommandExtensions.ToArray``1(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0})
  name: ToArray<T>(IDbCommand, CommandBehavior, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToArray__1_System_Data_IDbCommand_System_Data_CommandBehavior_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.CommandExtensions.ToArray``1(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0})
  name.vb: ToArray(Of T)(IDbCommand, CommandBehavior, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.CommandExtensions.ToArray<T>(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ToArray(Of T)(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: CommandExtensions.ToArray<T>(IDbCommand, CommandBehavior, Func<IDataRecord, T>)
  nameWithType.vb: CommandExtensions.ToArray(Of T)(IDbCommand, CommandBehavior, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.CommandExtensions.ToArray``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: ToArray<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToArray__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.ToArray``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: ToArray(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.ToArray<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ToArray(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.ToArray<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: CommandExtensions.ToArray(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.ToDataTable(System.Data.IDbCommand,System.Data.CommandBehavior)
  name: ToDataTable(IDbCommand, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToDataTable_System_Data_IDbCommand_System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.ToDataTable(System.Data.IDbCommand,System.Data.CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.ToDataTable(System.Data.IDbCommand, System.Data.CommandBehavior)
  nameWithType: CommandExtensions.ToDataTable(IDbCommand, CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.ToDataTable*
  name: ToDataTable
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToDataTable_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.ToDataTable
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.ToDataTable
  nameWithType: CommandExtensions.ToDataTable
- uid: Open.Database.Extensions.CommandExtensions.ToDataTables(System.Data.IDbCommand,System.Data.CommandBehavior)
  name: ToDataTables(IDbCommand, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToDataTables_System_Data_IDbCommand_System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.ToDataTables(System.Data.IDbCommand,System.Data.CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.ToDataTables(System.Data.IDbCommand, System.Data.CommandBehavior)
  nameWithType: CommandExtensions.ToDataTables(IDbCommand, CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.ToDataTables*
  name: ToDataTables
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToDataTables_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.ToDataTables
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.ToDataTables
  nameWithType: CommandExtensions.ToDataTables
- uid: Open.Database.Extensions.CommandExtensions.ToImmutableArray*
  name: ToImmutableArray
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToImmutableArray_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.ToImmutableArray
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.ToImmutableArray
  nameWithType: CommandExtensions.ToImmutableArray
- uid: Open.Database.Extensions.CommandExtensions.ToImmutableArray``1(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0})
  name: ToImmutableArray<T>(IDbCommand, CommandBehavior, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToImmutableArray__1_System_Data_IDbCommand_System_Data_CommandBehavior_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.CommandExtensions.ToImmutableArray``1(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0})
  name.vb: ToImmutableArray(Of T)(IDbCommand, CommandBehavior, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.CommandExtensions.ToImmutableArray<T>(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ToImmutableArray(Of T)(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: CommandExtensions.ToImmutableArray<T>(IDbCommand, CommandBehavior, Func<IDataRecord, T>)
  nameWithType.vb: CommandExtensions.ToImmutableArray(Of T)(IDbCommand, CommandBehavior, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.CommandExtensions.ToImmutableArray``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: ToImmutableArray<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToImmutableArray__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.ToImmutableArray``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: ToImmutableArray(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.ToImmutableArray<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ToImmutableArray(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.ToImmutableArray<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: CommandExtensions.ToImmutableArray(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.ToList*
  name: ToList
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToList_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.ToList
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.ToList
  nameWithType: CommandExtensions.ToList
- uid: Open.Database.Extensions.CommandExtensions.ToList``1(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0})
  name: ToList<T>(IDbCommand, CommandBehavior, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToList__1_System_Data_IDbCommand_System_Data_CommandBehavior_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.CommandExtensions.ToList``1(System.Data.IDbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0})
  name.vb: ToList(Of T)(IDbCommand, CommandBehavior, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.CommandExtensions.ToList<T>(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ToList(Of T)(System.Data.IDbCommand, System.Data.CommandBehavior, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: CommandExtensions.ToList<T>(IDbCommand, CommandBehavior, Func<IDataRecord, T>)
  nameWithType.vb: CommandExtensions.ToList(Of T)(IDbCommand, CommandBehavior, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.CommandExtensions.ToList``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: ToList<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToList__1_System_Data_IDbCommand_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CommandExtensions.ToList``1(System.Data.IDbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: ToList(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.CommandExtensions.ToList<T>(System.Data.IDbCommand, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ToList(Of T)(System.Data.IDbCommand, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: CommandExtensions.ToList<T>(IDbCommand, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: CommandExtensions.ToList(Of T)(IDbCommand, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.CommandExtensions.ToListAsync*
  name: ToListAsync
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToListAsync_
  commentId: Overload:Open.Database.Extensions.CommandExtensions.ToListAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.CommandExtensions.ToListAsync
  nameWithType: CommandExtensions.ToListAsync
- uid: Open.Database.Extensions.CommandExtensions.ToListAsync``1(System.Data.Common.DbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0},System.Boolean,System.Threading.CancellationToken)
  name: ToListAsync<T>(DbCommand, CommandBehavior, Func<IDataRecord, T>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToListAsync__1_System_Data_Common_DbCommand_System_Data_CommandBehavior_System_Func_System_Data_IDataRecord___0__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ToListAsync``1(System.Data.Common.DbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0},System.Boolean,System.Threading.CancellationToken)
  name.vb: ToListAsync(Of T)(DbCommand, CommandBehavior, Func(Of IDataRecord, T), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ToListAsync<T>(System.Data.Common.DbCommand, System.Data.CommandBehavior, System.Func<System.Data.IDataRecord, T>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ToListAsync(Of T)(System.Data.Common.DbCommand, System.Data.CommandBehavior, System.Func(Of System.Data.IDataRecord, T), System.Boolean, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ToListAsync<T>(DbCommand, CommandBehavior, Func<IDataRecord, T>, Boolean, CancellationToken)
  nameWithType.vb: CommandExtensions.ToListAsync(Of T)(DbCommand, CommandBehavior, Func(Of IDataRecord, T), Boolean, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ToListAsync``1(System.Data.Common.DbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0},System.Threading.CancellationToken)
  name: ToListAsync<T>(DbCommand, CommandBehavior, Func<IDataRecord, T>, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToListAsync__1_System_Data_Common_DbCommand_System_Data_CommandBehavior_System_Func_System_Data_IDataRecord___0__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ToListAsync``1(System.Data.Common.DbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,``0},System.Threading.CancellationToken)
  name.vb: ToListAsync(Of T)(DbCommand, CommandBehavior, Func(Of IDataRecord, T), CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ToListAsync<T>(System.Data.Common.DbCommand, System.Data.CommandBehavior, System.Func<System.Data.IDataRecord, T>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ToListAsync(Of T)(System.Data.Common.DbCommand, System.Data.CommandBehavior, System.Func(Of System.Data.IDataRecord, T), System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ToListAsync<T>(DbCommand, CommandBehavior, Func<IDataRecord, T>, CancellationToken)
  nameWithType.vb: CommandExtensions.ToListAsync(Of T)(DbCommand, CommandBehavior, Func(Of IDataRecord, T), CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ToListAsync``1(System.Data.Common.DbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{``0}},System.Threading.CancellationToken)
  name: ToListAsync<T>(DbCommand, CommandBehavior, Func<IDataRecord, ValueTask<T>>, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToListAsync__1_System_Data_Common_DbCommand_System_Data_CommandBehavior_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask___0___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ToListAsync``1(System.Data.Common.DbCommand,System.Data.CommandBehavior,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{``0}},System.Threading.CancellationToken)
  name.vb: ToListAsync(Of T)(DbCommand, CommandBehavior, Func(Of IDataRecord, ValueTask(Of T)), CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ToListAsync<T>(System.Data.Common.DbCommand, System.Data.CommandBehavior, System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask<T>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ToListAsync(Of T)(System.Data.Common.DbCommand, System.Data.CommandBehavior, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask(Of T)), System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ToListAsync<T>(DbCommand, CommandBehavior, Func<IDataRecord, ValueTask<T>>, CancellationToken)
  nameWithType.vb: CommandExtensions.ToListAsync(Of T)(DbCommand, CommandBehavior, Func(Of IDataRecord, ValueTask(Of T)), CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ToListAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  name: ToListAsync<T>(DbCommand, Func<IDataRecord, T>, CommandBehavior, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToListAsync__1_System_Data_Common_DbCommand_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ToListAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior,System.Boolean,System.Threading.CancellationToken)
  name.vb: ToListAsync(Of T)(DbCommand, Func(Of IDataRecord, T), CommandBehavior, Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ToListAsync<T>(System.Data.Common.DbCommand, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ToListAsync(Of T)(System.Data.Common.DbCommand, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior, System.Boolean, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ToListAsync<T>(DbCommand, Func<IDataRecord, T>, CommandBehavior, Boolean, CancellationToken)
  nameWithType.vb: CommandExtensions.ToListAsync(Of T)(DbCommand, Func(Of IDataRecord, T), CommandBehavior, Boolean, CancellationToken)
- uid: Open.Database.Extensions.CommandExtensions.ToListAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name: ToListAsync<T>(DbCommand, Func<IDataRecord, ValueTask<T>>, CommandBehavior, CancellationToken)
  href: api/Open.Database.Extensions.CommandExtensions.html#Open_Database_Extensions_CommandExtensions_ToListAsync__1_System_Data_Common_DbCommand_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask___0___System_Data_CommandBehavior_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CommandExtensions.ToListAsync``1(System.Data.Common.DbCommand,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior,System.Threading.CancellationToken)
  name.vb: ToListAsync(Of T)(DbCommand, Func(Of IDataRecord, ValueTask(Of T)), CommandBehavior, CancellationToken)
  fullName: Open.Database.Extensions.CommandExtensions.ToListAsync<T>(System.Data.Common.DbCommand, System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask<T>>, System.Data.CommandBehavior, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CommandExtensions.ToListAsync(Of T)(System.Data.Common.DbCommand, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask(Of T)), System.Data.CommandBehavior, System.Threading.CancellationToken)
  nameWithType: CommandExtensions.ToListAsync<T>(DbCommand, Func<IDataRecord, ValueTask<T>>, CommandBehavior, CancellationToken)
  nameWithType.vb: CommandExtensions.ToListAsync(Of T)(DbCommand, Func(Of IDataRecord, ValueTask(Of T)), CommandBehavior, CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions
  name: ConnectionExtensions
  href: api/Open.Database.Extensions.ConnectionExtensions.html
  commentId: T:Open.Database.Extensions.ConnectionExtensions
  fullName: Open.Database.Extensions.ConnectionExtensions
  nameWithType: ConnectionExtensions
- uid: Open.Database.Extensions.ConnectionExtensions.Command(Open.Database.Extensions.IDbConnectionFactory,System.String,System.Data.CommandType)
  name: Command(IDbConnectionFactory, String, CommandType)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Command_Open_Database_Extensions_IDbConnectionFactory_System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Command(Open.Database.Extensions.IDbConnectionFactory,System.String,System.Data.CommandType)
  fullName: Open.Database.Extensions.ConnectionExtensions.Command(Open.Database.Extensions.IDbConnectionFactory, System.String, System.Data.CommandType)
  nameWithType: ConnectionExtensions.Command(IDbConnectionFactory, String, CommandType)
- uid: Open.Database.Extensions.ConnectionExtensions.Command(System.Data.Common.DbConnection,System.String,System.Data.CommandType)
  name: Command(DbConnection, String, CommandType)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Command_System_Data_Common_DbConnection_System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Command(System.Data.Common.DbConnection,System.String,System.Data.CommandType)
  fullName: Open.Database.Extensions.ConnectionExtensions.Command(System.Data.Common.DbConnection, System.String, System.Data.CommandType)
  nameWithType: ConnectionExtensions.Command(DbConnection, String, CommandType)
- uid: Open.Database.Extensions.ConnectionExtensions.Command(System.Data.Common.DbTransaction,System.String,System.Data.CommandType)
  name: Command(DbTransaction, String, CommandType)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Command_System_Data_Common_DbTransaction_System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Command(System.Data.Common.DbTransaction,System.String,System.Data.CommandType)
  fullName: Open.Database.Extensions.ConnectionExtensions.Command(System.Data.Common.DbTransaction, System.String, System.Data.CommandType)
  nameWithType: ConnectionExtensions.Command(DbTransaction, String, CommandType)
- uid: Open.Database.Extensions.ConnectionExtensions.Command(System.Data.IDbConnection,System.String,System.Data.CommandType)
  name: Command(IDbConnection, String, CommandType)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Command_System_Data_IDbConnection_System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Command(System.Data.IDbConnection,System.String,System.Data.CommandType)
  fullName: Open.Database.Extensions.ConnectionExtensions.Command(System.Data.IDbConnection, System.String, System.Data.CommandType)
  nameWithType: ConnectionExtensions.Command(IDbConnection, String, CommandType)
- uid: Open.Database.Extensions.ConnectionExtensions.Command(System.Data.IDbTransaction,System.String,System.Data.CommandType)
  name: Command(IDbTransaction, String, CommandType)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Command_System_Data_IDbTransaction_System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Command(System.Data.IDbTransaction,System.String,System.Data.CommandType)
  fullName: Open.Database.Extensions.ConnectionExtensions.Command(System.Data.IDbTransaction, System.String, System.Data.CommandType)
  nameWithType: ConnectionExtensions.Command(IDbTransaction, String, CommandType)
- uid: Open.Database.Extensions.ConnectionExtensions.Command(System.Func{System.Data.IDbConnection},System.String,System.Data.CommandType)
  name: Command(Func<IDbConnection>, String, CommandType)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Command_System_Func_System_Data_IDbConnection__System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Command(System.Func{System.Data.IDbConnection},System.String,System.Data.CommandType)
  name.vb: Command(Func(Of IDbConnection), String, CommandType)
  fullName: Open.Database.Extensions.ConnectionExtensions.Command(System.Func<System.Data.IDbConnection>, System.String, System.Data.CommandType)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Command(System.Func(Of System.Data.IDbConnection), System.String, System.Data.CommandType)
  nameWithType: ConnectionExtensions.Command(Func<IDbConnection>, String, CommandType)
  nameWithType.vb: ConnectionExtensions.Command(Func(Of IDbConnection), String, CommandType)
- uid: Open.Database.Extensions.ConnectionExtensions.Command*
  name: Command
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Command_
  commentId: Overload:Open.Database.Extensions.ConnectionExtensions.Command
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionExtensions.Command
  nameWithType: ConnectionExtensions.Command
- uid: Open.Database.Extensions.ConnectionExtensions.Command``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.String,System.Data.CommandType)
  name: Command<TConnection>(IDbConnectionFactory<TConnection>, String, CommandType)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Command__1_Open_Database_Extensions_IDbConnectionFactory___0__System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Command``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.String,System.Data.CommandType)
  name.vb: Command(Of TConnection)(IDbConnectionFactory(Of TConnection), String, CommandType)
  fullName: Open.Database.Extensions.ConnectionExtensions.Command<TConnection>(Open.Database.Extensions.IDbConnectionFactory<TConnection>, System.String, System.Data.CommandType)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Command(Of TConnection)(Open.Database.Extensions.IDbConnectionFactory(Of TConnection), System.String, System.Data.CommandType)
  nameWithType: ConnectionExtensions.Command<TConnection>(IDbConnectionFactory<TConnection>, String, CommandType)
  nameWithType.vb: ConnectionExtensions.Command(Of TConnection)(IDbConnectionFactory(Of TConnection), String, CommandType)
- uid: Open.Database.Extensions.ConnectionExtensions.Command``1(System.Func{``0},System.String,System.Data.CommandType)
  name: Command<TConnection>(Func<TConnection>, String, CommandType)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Command__1_System_Func___0__System_String_System_Data_CommandType_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Command``1(System.Func{``0},System.String,System.Data.CommandType)
  name.vb: Command(Of TConnection)(Func(Of TConnection), String, CommandType)
  fullName: Open.Database.Extensions.ConnectionExtensions.Command<TConnection>(System.Func<TConnection>, System.String, System.Data.CommandType)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Command(Of TConnection)(System.Func(Of TConnection), System.String, System.Data.CommandType)
  nameWithType: ConnectionExtensions.Command<TConnection>(Func<TConnection>, String, CommandType)
  nameWithType.vb: ConnectionExtensions.Command(Of TConnection)(Func(Of TConnection), String, CommandType)
- uid: Open.Database.Extensions.ConnectionExtensions.CreateCommand(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Int32)
  name: CreateCommand(DbConnection, CommandType, String, Int32)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_CreateCommand_System_Data_Common_DbConnection_System_Data_CommandType_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.CreateCommand(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Int32)
  fullName: Open.Database.Extensions.ConnectionExtensions.CreateCommand(System.Data.Common.DbConnection, System.Data.CommandType, System.String, System.Int32)
  nameWithType: ConnectionExtensions.CreateCommand(DbConnection, CommandType, String, Int32)
- uid: Open.Database.Extensions.ConnectionExtensions.CreateCommand(System.Data.IDbConnection,System.Data.CommandType,System.String,System.Int32)
  name: CreateCommand(IDbConnection, CommandType, String, Int32)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_CreateCommand_System_Data_IDbConnection_System_Data_CommandType_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.CreateCommand(System.Data.IDbConnection,System.Data.CommandType,System.String,System.Int32)
  fullName: Open.Database.Extensions.ConnectionExtensions.CreateCommand(System.Data.IDbConnection, System.Data.CommandType, System.String, System.Int32)
  nameWithType: ConnectionExtensions.CreateCommand(IDbConnection, CommandType, String, Int32)
- uid: Open.Database.Extensions.ConnectionExtensions.CreateCommand*
  name: CreateCommand
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_CreateCommand_
  commentId: Overload:Open.Database.Extensions.ConnectionExtensions.CreateCommand
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionExtensions.CreateCommand
  nameWithType: ConnectionExtensions.CreateCommand
- uid: Open.Database.Extensions.ConnectionExtensions.CreateStoredProcedureCommand(System.Data.Common.DbConnection,System.String,System.Int32)
  name: CreateStoredProcedureCommand(DbConnection, String, Int32)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_CreateStoredProcedureCommand_System_Data_Common_DbConnection_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.CreateStoredProcedureCommand(System.Data.Common.DbConnection,System.String,System.Int32)
  fullName: Open.Database.Extensions.ConnectionExtensions.CreateStoredProcedureCommand(System.Data.Common.DbConnection, System.String, System.Int32)
  nameWithType: ConnectionExtensions.CreateStoredProcedureCommand(DbConnection, String, Int32)
- uid: Open.Database.Extensions.ConnectionExtensions.CreateStoredProcedureCommand(System.Data.IDbConnection,System.String,System.Int32)
  name: CreateStoredProcedureCommand(IDbConnection, String, Int32)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_CreateStoredProcedureCommand_System_Data_IDbConnection_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.CreateStoredProcedureCommand(System.Data.IDbConnection,System.String,System.Int32)
  fullName: Open.Database.Extensions.ConnectionExtensions.CreateStoredProcedureCommand(System.Data.IDbConnection, System.String, System.Int32)
  nameWithType: ConnectionExtensions.CreateStoredProcedureCommand(IDbConnection, String, Int32)
- uid: Open.Database.Extensions.ConnectionExtensions.CreateStoredProcedureCommand*
  name: CreateStoredProcedureCommand
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_CreateStoredProcedureCommand_
  commentId: Overload:Open.Database.Extensions.ConnectionExtensions.CreateStoredProcedureCommand
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionExtensions.CreateStoredProcedureCommand
  nameWithType: ConnectionExtensions.CreateStoredProcedureCommand
- uid: Open.Database.Extensions.ConnectionExtensions.CreateTextCommand(System.Data.Common.DbConnection,System.String,System.Int32)
  name: CreateTextCommand(DbConnection, String, Int32)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_CreateTextCommand_System_Data_Common_DbConnection_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.CreateTextCommand(System.Data.Common.DbConnection,System.String,System.Int32)
  fullName: Open.Database.Extensions.ConnectionExtensions.CreateTextCommand(System.Data.Common.DbConnection, System.String, System.Int32)
  nameWithType: ConnectionExtensions.CreateTextCommand(DbConnection, String, Int32)
- uid: Open.Database.Extensions.ConnectionExtensions.CreateTextCommand(System.Data.IDbConnection,System.String,System.Int32)
  name: CreateTextCommand(IDbConnection, String, Int32)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_CreateTextCommand_System_Data_IDbConnection_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.CreateTextCommand(System.Data.IDbConnection,System.String,System.Int32)
  fullName: Open.Database.Extensions.ConnectionExtensions.CreateTextCommand(System.Data.IDbConnection, System.String, System.Int32)
  nameWithType: ConnectionExtensions.CreateTextCommand(IDbConnection, String, Int32)
- uid: Open.Database.Extensions.ConnectionExtensions.CreateTextCommand*
  name: CreateTextCommand
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_CreateTextCommand_
  commentId: Overload:Open.Database.Extensions.ConnectionExtensions.CreateTextCommand
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionExtensions.CreateTextCommand
  nameWithType: ConnectionExtensions.CreateTextCommand
- uid: Open.Database.Extensions.ConnectionExtensions.EnsureOpen(System.Data.IDbConnection)
  name: EnsureOpen(IDbConnection)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_EnsureOpen_System_Data_IDbConnection_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.EnsureOpen(System.Data.IDbConnection)
  fullName: Open.Database.Extensions.ConnectionExtensions.EnsureOpen(System.Data.IDbConnection)
  nameWithType: ConnectionExtensions.EnsureOpen(IDbConnection)
- uid: Open.Database.Extensions.ConnectionExtensions.EnsureOpen*
  name: EnsureOpen
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_EnsureOpen_
  commentId: Overload:Open.Database.Extensions.ConnectionExtensions.EnsureOpen
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionExtensions.EnsureOpen
  nameWithType: ConnectionExtensions.EnsureOpen
- uid: Open.Database.Extensions.ConnectionExtensions.EnsureOpenAsync(System.Data.Common.DbConnection,System.Boolean,System.Threading.CancellationToken)
  name: EnsureOpenAsync(DbConnection, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_EnsureOpenAsync_System_Data_Common_DbConnection_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.EnsureOpenAsync(System.Data.Common.DbConnection,System.Boolean,System.Threading.CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.EnsureOpenAsync(System.Data.Common.DbConnection, System.Boolean, System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.EnsureOpenAsync(DbConnection, Boolean, CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.EnsureOpenAsync(System.Data.Common.DbConnection,System.Threading.CancellationToken)
  name: EnsureOpenAsync(DbConnection, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_EnsureOpenAsync_System_Data_Common_DbConnection_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.EnsureOpenAsync(System.Data.Common.DbConnection,System.Threading.CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.EnsureOpenAsync(System.Data.Common.DbConnection, System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.EnsureOpenAsync(DbConnection, CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.EnsureOpenAsync*
  name: EnsureOpenAsync
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_EnsureOpenAsync_
  commentId: Overload:Open.Database.Extensions.ConnectionExtensions.EnsureOpenAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionExtensions.EnsureOpenAsync
  nameWithType: ConnectionExtensions.EnsureOpenAsync
- uid: Open.Database.Extensions.ConnectionExtensions.Open(Open.Database.Extensions.IDbConnectionFactory,System.Action{System.Data.IDbConnection})
  name: Open(IDbConnectionFactory, Action<IDbConnection>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Open_Open_Database_Extensions_IDbConnectionFactory_System_Action_System_Data_IDbConnection__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Open(Open.Database.Extensions.IDbConnectionFactory,System.Action{System.Data.IDbConnection})
  name.vb: Open(IDbConnectionFactory, Action(Of IDbConnection))
  fullName: Open.Database.Extensions.ConnectionExtensions.Open(Open.Database.Extensions.IDbConnectionFactory, System.Action<System.Data.IDbConnection>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Open(Open.Database.Extensions.IDbConnectionFactory, System.Action(Of System.Data.IDbConnection))
  nameWithType: ConnectionExtensions.Open(IDbConnectionFactory, Action<IDbConnection>)
  nameWithType.vb: ConnectionExtensions.Open(IDbConnectionFactory, Action(Of IDbConnection))
- uid: Open.Database.Extensions.ConnectionExtensions.Open(Open.Database.Extensions.IDbConnectionPool,System.Action{System.Data.IDbConnection,System.Data.ConnectionState})
  name: Open(IDbConnectionPool, Action<IDbConnection, ConnectionState>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Open_Open_Database_Extensions_IDbConnectionPool_System_Action_System_Data_IDbConnection_System_Data_ConnectionState__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Open(Open.Database.Extensions.IDbConnectionPool,System.Action{System.Data.IDbConnection,System.Data.ConnectionState})
  name.vb: Open(IDbConnectionPool, Action(Of IDbConnection, ConnectionState))
  fullName: Open.Database.Extensions.ConnectionExtensions.Open(Open.Database.Extensions.IDbConnectionPool, System.Action<System.Data.IDbConnection, System.Data.ConnectionState>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Open(Open.Database.Extensions.IDbConnectionPool, System.Action(Of System.Data.IDbConnection, System.Data.ConnectionState))
  nameWithType: ConnectionExtensions.Open(IDbConnectionPool, Action<IDbConnection, ConnectionState>)
  nameWithType.vb: ConnectionExtensions.Open(IDbConnectionPool, Action(Of IDbConnection, ConnectionState))
- uid: Open.Database.Extensions.ConnectionExtensions.Open*
  name: Open
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Open_
  commentId: Overload:Open.Database.Extensions.ConnectionExtensions.Open
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionExtensions.Open
  nameWithType: ConnectionExtensions.Open
- uid: Open.Database.Extensions.ConnectionExtensions.Open``1(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,``0})
  name: Open<T>(IDbConnectionFactory, Func<IDbConnection, T>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Open__1_Open_Database_Extensions_IDbConnectionFactory_System_Func_System_Data_IDbConnection___0__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Open``1(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,``0})
  name.vb: Open(Of T)(IDbConnectionFactory, Func(Of IDbConnection, T))
  fullName: Open.Database.Extensions.ConnectionExtensions.Open<T>(Open.Database.Extensions.IDbConnectionFactory, System.Func<System.Data.IDbConnection, T>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Open(Of T)(Open.Database.Extensions.IDbConnectionFactory, System.Func(Of System.Data.IDbConnection, T))
  nameWithType: ConnectionExtensions.Open<T>(IDbConnectionFactory, Func<IDbConnection, T>)
  nameWithType.vb: ConnectionExtensions.Open(Of T)(IDbConnectionFactory, Func(Of IDbConnection, T))
- uid: Open.Database.Extensions.ConnectionExtensions.Open``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Action{``0})
  name: Open<TConnection>(IDbConnectionFactory<TConnection>, Action<TConnection>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Open__1_Open_Database_Extensions_IDbConnectionFactory___0__System_Action___0__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Open``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Action{``0})
  name.vb: Open(Of TConnection)(IDbConnectionFactory(Of TConnection), Action(Of TConnection))
  fullName: Open.Database.Extensions.ConnectionExtensions.Open<TConnection>(Open.Database.Extensions.IDbConnectionFactory<TConnection>, System.Action<TConnection>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Open(Of TConnection)(Open.Database.Extensions.IDbConnectionFactory(Of TConnection), System.Action(Of TConnection))
  nameWithType: ConnectionExtensions.Open<TConnection>(IDbConnectionFactory<TConnection>, Action<TConnection>)
  nameWithType.vb: ConnectionExtensions.Open(Of TConnection)(IDbConnectionFactory(Of TConnection), Action(Of TConnection))
- uid: Open.Database.Extensions.ConnectionExtensions.Open``1(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,System.Data.ConnectionState,``0})
  name: Open<T>(IDbConnectionPool, Func<IDbConnection, ConnectionState, T>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Open__1_Open_Database_Extensions_IDbConnectionPool_System_Func_System_Data_IDbConnection_System_Data_ConnectionState___0__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Open``1(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,System.Data.ConnectionState,``0})
  name.vb: Open(Of T)(IDbConnectionPool, Func(Of IDbConnection, ConnectionState, T))
  fullName: Open.Database.Extensions.ConnectionExtensions.Open<T>(Open.Database.Extensions.IDbConnectionPool, System.Func<System.Data.IDbConnection, System.Data.ConnectionState, T>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Open(Of T)(Open.Database.Extensions.IDbConnectionPool, System.Func(Of System.Data.IDbConnection, System.Data.ConnectionState, T))
  nameWithType: ConnectionExtensions.Open<T>(IDbConnectionPool, Func<IDbConnection, ConnectionState, T>)
  nameWithType.vb: ConnectionExtensions.Open(Of T)(IDbConnectionPool, Func(Of IDbConnection, ConnectionState, T))
- uid: Open.Database.Extensions.ConnectionExtensions.Open``1(Open.Database.Extensions.IDbConnectionPool{``0},System.Action{``0,System.Data.ConnectionState})
  name: Open<TConnection>(IDbConnectionPool<TConnection>, Action<TConnection, ConnectionState>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Open__1_Open_Database_Extensions_IDbConnectionPool___0__System_Action___0_System_Data_ConnectionState__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Open``1(Open.Database.Extensions.IDbConnectionPool{``0},System.Action{``0,System.Data.ConnectionState})
  name.vb: Open(Of TConnection)(IDbConnectionPool(Of TConnection), Action(Of TConnection, ConnectionState))
  fullName: Open.Database.Extensions.ConnectionExtensions.Open<TConnection>(Open.Database.Extensions.IDbConnectionPool<TConnection>, System.Action<TConnection, System.Data.ConnectionState>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Open(Of TConnection)(Open.Database.Extensions.IDbConnectionPool(Of TConnection), System.Action(Of TConnection, System.Data.ConnectionState))
  nameWithType: ConnectionExtensions.Open<TConnection>(IDbConnectionPool<TConnection>, Action<TConnection, ConnectionState>)
  nameWithType.vb: ConnectionExtensions.Open(Of TConnection)(IDbConnectionPool(Of TConnection), Action(Of TConnection, ConnectionState))
- uid: Open.Database.Extensions.ConnectionExtensions.Open``1(System.Func{``0},System.Action{``0})
  name: Open<TConnection>(Func<TConnection>, Action<TConnection>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Open__1_System_Func___0__System_Action___0__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Open``1(System.Func{``0},System.Action{``0})
  name.vb: Open(Of TConnection)(Func(Of TConnection), Action(Of TConnection))
  fullName: Open.Database.Extensions.ConnectionExtensions.Open<TConnection>(System.Func<TConnection>, System.Action<TConnection>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Open(Of TConnection)(System.Func(Of TConnection), System.Action(Of TConnection))
  nameWithType: ConnectionExtensions.Open<TConnection>(Func<TConnection>, Action<TConnection>)
  nameWithType.vb: ConnectionExtensions.Open(Of TConnection)(Func(Of TConnection), Action(Of TConnection))
- uid: Open.Database.Extensions.ConnectionExtensions.Open``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,``1})
  name: Open<TConnection, T>(IDbConnectionFactory<TConnection>, Func<TConnection, T>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Open__2_Open_Database_Extensions_IDbConnectionFactory___0__System_Func___0___1__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Open``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,``1})
  name.vb: Open(Of TConnection, T)(IDbConnectionFactory(Of TConnection), Func(Of TConnection, T))
  fullName: Open.Database.Extensions.ConnectionExtensions.Open<TConnection, T>(Open.Database.Extensions.IDbConnectionFactory<TConnection>, System.Func<TConnection, T>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Open(Of TConnection, T)(Open.Database.Extensions.IDbConnectionFactory(Of TConnection), System.Func(Of TConnection, T))
  nameWithType: ConnectionExtensions.Open<TConnection, T>(IDbConnectionFactory<TConnection>, Func<TConnection, T>)
  nameWithType.vb: ConnectionExtensions.Open(Of TConnection, T)(IDbConnectionFactory(Of TConnection), Func(Of TConnection, T))
- uid: Open.Database.Extensions.ConnectionExtensions.Open``2(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,System.Data.ConnectionState,``1})
  name: Open<TConnection, T>(IDbConnectionPool<TConnection>, Func<TConnection, ConnectionState, T>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Open__2_Open_Database_Extensions_IDbConnectionPool___0__System_Func___0_System_Data_ConnectionState___1__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Open``2(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,System.Data.ConnectionState,``1})
  name.vb: Open(Of TConnection, T)(IDbConnectionPool(Of TConnection), Func(Of TConnection, ConnectionState, T))
  fullName: Open.Database.Extensions.ConnectionExtensions.Open<TConnection, T>(Open.Database.Extensions.IDbConnectionPool<TConnection>, System.Func<TConnection, System.Data.ConnectionState, T>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Open(Of TConnection, T)(Open.Database.Extensions.IDbConnectionPool(Of TConnection), System.Func(Of TConnection, System.Data.ConnectionState, T))
  nameWithType: ConnectionExtensions.Open<TConnection, T>(IDbConnectionPool<TConnection>, Func<TConnection, ConnectionState, T>)
  nameWithType.vb: ConnectionExtensions.Open(Of TConnection, T)(IDbConnectionPool(Of TConnection), Func(Of TConnection, ConnectionState, T))
- uid: Open.Database.Extensions.ConnectionExtensions.Open``2(System.Func{``0},System.Func{``0,``1})
  name: Open<TConnection, T>(Func<TConnection>, Func<TConnection, T>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Open__2_System_Func___0__System_Func___0___1__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Open``2(System.Func{``0},System.Func{``0,``1})
  name.vb: Open(Of TConnection, T)(Func(Of TConnection), Func(Of TConnection, T))
  fullName: Open.Database.Extensions.ConnectionExtensions.Open<TConnection, T>(System.Func<TConnection>, System.Func<TConnection, T>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Open(Of TConnection, T)(System.Func(Of TConnection), System.Func(Of TConnection, T))
  nameWithType: ConnectionExtensions.Open<TConnection, T>(Func<TConnection>, Func<TConnection, T>)
  nameWithType.vb: ConnectionExtensions.Open(Of TConnection, T)(Func(Of TConnection), Func(Of TConnection, T))
- uid: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name: OpenAsync(IDbConnectionFactory, Func<IDbConnection, ValueTask>, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_OpenAsync_Open_Database_Extensions_IDbConnectionFactory_System_Func_System_Data_IDbConnection_System_Threading_Tasks_ValueTask__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.OpenAsync(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name.vb: OpenAsync(IDbConnectionFactory, Func(Of IDbConnection, ValueTask), CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Open.Database.Extensions.IDbConnectionFactory, System.Func<System.Data.IDbConnection, System.Threading.Tasks.ValueTask>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Open.Database.Extensions.IDbConnectionFactory, System.Func(Of System.Data.IDbConnection, System.Threading.Tasks.ValueTask), System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.OpenAsync(IDbConnectionFactory, Func<IDbConnection, ValueTask>, CancellationToken)
  nameWithType.vb: ConnectionExtensions.OpenAsync(IDbConnectionFactory, Func(Of IDbConnection, ValueTask), CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,System.Data.ConnectionState,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name: OpenAsync(IDbConnectionPool, Func<IDbConnection, ConnectionState, ValueTask>, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_OpenAsync_Open_Database_Extensions_IDbConnectionPool_System_Func_System_Data_IDbConnection_System_Data_ConnectionState_System_Threading_Tasks_ValueTask__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.OpenAsync(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,System.Data.ConnectionState,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name.vb: OpenAsync(IDbConnectionPool, Func(Of IDbConnection, ConnectionState, ValueTask), CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Open.Database.Extensions.IDbConnectionPool, System.Func<System.Data.IDbConnection, System.Data.ConnectionState, System.Threading.Tasks.ValueTask>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Open.Database.Extensions.IDbConnectionPool, System.Func(Of System.Data.IDbConnection, System.Data.ConnectionState, System.Threading.Tasks.ValueTask), System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.OpenAsync(IDbConnectionPool, Func<IDbConnection, ConnectionState, ValueTask>, CancellationToken)
  nameWithType.vb: ConnectionExtensions.OpenAsync(IDbConnectionPool, Func(Of IDbConnection, ConnectionState, ValueTask), CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.OpenAsync*
  name: OpenAsync
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_OpenAsync_
  commentId: Overload:Open.Database.Extensions.ConnectionExtensions.OpenAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionExtensions.OpenAsync
  nameWithType: ConnectionExtensions.OpenAsync
- uid: Open.Database.Extensions.ConnectionExtensions.OpenAsync``1(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask{``0}},System.Threading.CancellationToken)
  name: OpenAsync<T>(IDbConnectionFactory, Func<IDbConnection, ValueTask<T>>, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_OpenAsync__1_Open_Database_Extensions_IDbConnectionFactory_System_Func_System_Data_IDbConnection_System_Threading_Tasks_ValueTask___0___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.OpenAsync``1(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask{``0}},System.Threading.CancellationToken)
  name.vb: OpenAsync(Of T)(IDbConnectionFactory, Func(Of IDbConnection, ValueTask(Of T)), CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.OpenAsync<T>(Open.Database.Extensions.IDbConnectionFactory, System.Func<System.Data.IDbConnection, System.Threading.Tasks.ValueTask<T>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Of T)(Open.Database.Extensions.IDbConnectionFactory, System.Func(Of System.Data.IDbConnection, System.Threading.Tasks.ValueTask(Of T)), System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.OpenAsync<T>(IDbConnectionFactory, Func<IDbConnection, ValueTask<T>>, CancellationToken)
  nameWithType.vb: ConnectionExtensions.OpenAsync(Of T)(IDbConnectionFactory, Func(Of IDbConnection, ValueTask(Of T)), CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.OpenAsync``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name: OpenAsync<TConnection>(IDbConnectionFactory<TConnection>, Func<TConnection, ValueTask>, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_OpenAsync__1_Open_Database_Extensions_IDbConnectionFactory___0__System_Func___0_System_Threading_Tasks_ValueTask__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.OpenAsync``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name.vb: OpenAsync(Of TConnection)(IDbConnectionFactory(Of TConnection), Func(Of TConnection, ValueTask), CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.OpenAsync<TConnection>(Open.Database.Extensions.IDbConnectionFactory<TConnection>, System.Func<TConnection, System.Threading.Tasks.ValueTask>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Of TConnection)(Open.Database.Extensions.IDbConnectionFactory(Of TConnection), System.Func(Of TConnection, System.Threading.Tasks.ValueTask), System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.OpenAsync<TConnection>(IDbConnectionFactory<TConnection>, Func<TConnection, ValueTask>, CancellationToken)
  nameWithType.vb: ConnectionExtensions.OpenAsync(Of TConnection)(IDbConnectionFactory(Of TConnection), Func(Of TConnection, ValueTask), CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.OpenAsync``1(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,System.Data.ConnectionState,System.Threading.Tasks.ValueTask{``0}},System.Threading.CancellationToken)
  name: OpenAsync<T>(IDbConnectionPool, Func<IDbConnection, ConnectionState, ValueTask<T>>, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_OpenAsync__1_Open_Database_Extensions_IDbConnectionPool_System_Func_System_Data_IDbConnection_System_Data_ConnectionState_System_Threading_Tasks_ValueTask___0___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.OpenAsync``1(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,System.Data.ConnectionState,System.Threading.Tasks.ValueTask{``0}},System.Threading.CancellationToken)
  name.vb: OpenAsync(Of T)(IDbConnectionPool, Func(Of IDbConnection, ConnectionState, ValueTask(Of T)), CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.OpenAsync<T>(Open.Database.Extensions.IDbConnectionPool, System.Func<System.Data.IDbConnection, System.Data.ConnectionState, System.Threading.Tasks.ValueTask<T>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Of T)(Open.Database.Extensions.IDbConnectionPool, System.Func(Of System.Data.IDbConnection, System.Data.ConnectionState, System.Threading.Tasks.ValueTask(Of T)), System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.OpenAsync<T>(IDbConnectionPool, Func<IDbConnection, ConnectionState, ValueTask<T>>, CancellationToken)
  nameWithType.vb: ConnectionExtensions.OpenAsync(Of T)(IDbConnectionPool, Func(Of IDbConnection, ConnectionState, ValueTask(Of T)), CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.OpenAsync``1(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,System.Data.ConnectionState,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name: OpenAsync<TConnection>(IDbConnectionPool<TConnection>, Func<TConnection, ConnectionState, ValueTask>, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_OpenAsync__1_Open_Database_Extensions_IDbConnectionPool___0__System_Func___0_System_Data_ConnectionState_System_Threading_Tasks_ValueTask__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.OpenAsync``1(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,System.Data.ConnectionState,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name.vb: OpenAsync(Of TConnection)(IDbConnectionPool(Of TConnection), Func(Of TConnection, ConnectionState, ValueTask), CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.OpenAsync<TConnection>(Open.Database.Extensions.IDbConnectionPool<TConnection>, System.Func<TConnection, System.Data.ConnectionState, System.Threading.Tasks.ValueTask>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Of TConnection)(Open.Database.Extensions.IDbConnectionPool(Of TConnection), System.Func(Of TConnection, System.Data.ConnectionState, System.Threading.Tasks.ValueTask), System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.OpenAsync<TConnection>(IDbConnectionPool<TConnection>, Func<TConnection, ConnectionState, ValueTask>, CancellationToken)
  nameWithType.vb: ConnectionExtensions.OpenAsync(Of TConnection)(IDbConnectionPool(Of TConnection), Func(Of TConnection, ConnectionState, ValueTask), CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.OpenAsync``1(System.Func{``0},System.Func{``0,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name: OpenAsync<TConnection>(Func<TConnection>, Func<TConnection, ValueTask>, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_OpenAsync__1_System_Func___0__System_Func___0_System_Threading_Tasks_ValueTask__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.OpenAsync``1(System.Func{``0},System.Func{``0,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name.vb: OpenAsync(Of TConnection)(Func(Of TConnection), Func(Of TConnection, ValueTask), CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.OpenAsync<TConnection>(System.Func<TConnection>, System.Func<TConnection, System.Threading.Tasks.ValueTask>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Of TConnection)(System.Func(Of TConnection), System.Func(Of TConnection, System.Threading.Tasks.ValueTask), System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.OpenAsync<TConnection>(Func<TConnection>, Func<TConnection, ValueTask>, CancellationToken)
  nameWithType.vb: ConnectionExtensions.OpenAsync(Of TConnection)(Func(Of TConnection), Func(Of TConnection, ValueTask), CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.OpenAsync``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}},System.Threading.CancellationToken)
  name: OpenAsync<TConnection, T>(IDbConnectionFactory<TConnection>, Func<TConnection, ValueTask<T>>, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_OpenAsync__2_Open_Database_Extensions_IDbConnectionFactory___0__System_Func___0_System_Threading_Tasks_ValueTask___1___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.OpenAsync``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}},System.Threading.CancellationToken)
  name.vb: OpenAsync(Of TConnection, T)(IDbConnectionFactory(Of TConnection), Func(Of TConnection, ValueTask(Of T)), CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.OpenAsync<TConnection, T>(Open.Database.Extensions.IDbConnectionFactory<TConnection>, System.Func<TConnection, System.Threading.Tasks.ValueTask<T>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Of TConnection, T)(Open.Database.Extensions.IDbConnectionFactory(Of TConnection), System.Func(Of TConnection, System.Threading.Tasks.ValueTask(Of T)), System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.OpenAsync<TConnection, T>(IDbConnectionFactory<TConnection>, Func<TConnection, ValueTask<T>>, CancellationToken)
  nameWithType.vb: ConnectionExtensions.OpenAsync(Of TConnection, T)(IDbConnectionFactory(Of TConnection), Func(Of TConnection, ValueTask(Of T)), CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.OpenAsync``2(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,System.Data.ConnectionState,System.Threading.Tasks.ValueTask{``1}},System.Threading.CancellationToken)
  name: OpenAsync<TConnection, T>(IDbConnectionPool<TConnection>, Func<TConnection, ConnectionState, ValueTask<T>>, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_OpenAsync__2_Open_Database_Extensions_IDbConnectionPool___0__System_Func___0_System_Data_ConnectionState_System_Threading_Tasks_ValueTask___1___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.OpenAsync``2(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,System.Data.ConnectionState,System.Threading.Tasks.ValueTask{``1}},System.Threading.CancellationToken)
  name.vb: OpenAsync(Of TConnection, T)(IDbConnectionPool(Of TConnection), Func(Of TConnection, ConnectionState, ValueTask(Of T)), CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.OpenAsync<TConnection, T>(Open.Database.Extensions.IDbConnectionPool<TConnection>, System.Func<TConnection, System.Data.ConnectionState, System.Threading.Tasks.ValueTask<T>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Of TConnection, T)(Open.Database.Extensions.IDbConnectionPool(Of TConnection), System.Func(Of TConnection, System.Data.ConnectionState, System.Threading.Tasks.ValueTask(Of T)), System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.OpenAsync<TConnection, T>(IDbConnectionPool<TConnection>, Func<TConnection, ConnectionState, ValueTask<T>>, CancellationToken)
  nameWithType.vb: ConnectionExtensions.OpenAsync(Of TConnection, T)(IDbConnectionPool(Of TConnection), Func(Of TConnection, ConnectionState, ValueTask(Of T)), CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.OpenAsync``2(System.Func{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}},System.Threading.CancellationToken)
  name: OpenAsync<TConnection, T>(Func<TConnection>, Func<TConnection, ValueTask<T>>, CancellationToken)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_OpenAsync__2_System_Func___0__System_Func___0_System_Threading_Tasks_ValueTask___1___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.OpenAsync``2(System.Func{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}},System.Threading.CancellationToken)
  name.vb: OpenAsync(Of TConnection, T)(Func(Of TConnection), Func(Of TConnection, ValueTask(Of T)), CancellationToken)
  fullName: Open.Database.Extensions.ConnectionExtensions.OpenAsync<TConnection, T>(System.Func<TConnection>, System.Func<TConnection, System.Threading.Tasks.ValueTask<T>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.OpenAsync(Of TConnection, T)(System.Func(Of TConnection), System.Func(Of TConnection, System.Threading.Tasks.ValueTask(Of T)), System.Threading.CancellationToken)
  nameWithType: ConnectionExtensions.OpenAsync<TConnection, T>(Func<TConnection>, Func<TConnection, ValueTask<T>>, CancellationToken)
  nameWithType.vb: ConnectionExtensions.OpenAsync(Of TConnection, T)(Func(Of TConnection), Func(Of TConnection, ValueTask(Of T)), CancellationToken)
- uid: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(Open.Database.Extensions.IDbConnectionFactory,System.String)
  name: StoredProcedure(IDbConnectionFactory, String)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_StoredProcedure_Open_Database_Extensions_IDbConnectionFactory_System_String_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.StoredProcedure(Open.Database.Extensions.IDbConnectionFactory,System.String)
  fullName: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(Open.Database.Extensions.IDbConnectionFactory, System.String)
  nameWithType: ConnectionExtensions.StoredProcedure(IDbConnectionFactory, String)
- uid: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.Common.DbConnection,System.String)
  name: StoredProcedure(DbConnection, String)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_StoredProcedure_System_Data_Common_DbConnection_System_String_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.Common.DbConnection,System.String)
  fullName: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.Common.DbConnection, System.String)
  nameWithType: ConnectionExtensions.StoredProcedure(DbConnection, String)
- uid: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.Common.DbTransaction,System.String)
  name: StoredProcedure(DbTransaction, String)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_StoredProcedure_System_Data_Common_DbTransaction_System_String_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.Common.DbTransaction,System.String)
  fullName: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.Common.DbTransaction, System.String)
  nameWithType: ConnectionExtensions.StoredProcedure(DbTransaction, String)
- uid: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.IDbConnection,System.String)
  name: StoredProcedure(IDbConnection, String)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_StoredProcedure_System_Data_IDbConnection_System_String_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.IDbConnection,System.String)
  fullName: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.IDbConnection, System.String)
  nameWithType: ConnectionExtensions.StoredProcedure(IDbConnection, String)
- uid: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.IDbTransaction,System.String)
  name: StoredProcedure(IDbTransaction, String)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_StoredProcedure_System_Data_IDbTransaction_System_String_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.IDbTransaction,System.String)
  fullName: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Data.IDbTransaction, System.String)
  nameWithType: ConnectionExtensions.StoredProcedure(IDbTransaction, String)
- uid: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Func{System.Data.IDbConnection},System.String)
  name: StoredProcedure(Func<IDbConnection>, String)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_StoredProcedure_System_Func_System_Data_IDbConnection__System_String_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Func{System.Data.IDbConnection},System.String)
  name.vb: StoredProcedure(Func(Of IDbConnection), String)
  fullName: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Func<System.Data.IDbConnection>, System.String)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(System.Func(Of System.Data.IDbConnection), System.String)
  nameWithType: ConnectionExtensions.StoredProcedure(Func<IDbConnection>, String)
  nameWithType.vb: ConnectionExtensions.StoredProcedure(Func(Of IDbConnection), String)
- uid: Open.Database.Extensions.ConnectionExtensions.StoredProcedure*
  name: StoredProcedure
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_StoredProcedure_
  commentId: Overload:Open.Database.Extensions.ConnectionExtensions.StoredProcedure
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionExtensions.StoredProcedure
  nameWithType: ConnectionExtensions.StoredProcedure
- uid: Open.Database.Extensions.ConnectionExtensions.StoredProcedure``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.String)
  name: StoredProcedure<TConnection>(IDbConnectionFactory<TConnection>, String)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_StoredProcedure__1_Open_Database_Extensions_IDbConnectionFactory___0__System_String_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.StoredProcedure``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.String)
  name.vb: StoredProcedure(Of TConnection)(IDbConnectionFactory(Of TConnection), String)
  fullName: Open.Database.Extensions.ConnectionExtensions.StoredProcedure<TConnection>(Open.Database.Extensions.IDbConnectionFactory<TConnection>, System.String)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(Of TConnection)(Open.Database.Extensions.IDbConnectionFactory(Of TConnection), System.String)
  nameWithType: ConnectionExtensions.StoredProcedure<TConnection>(IDbConnectionFactory<TConnection>, String)
  nameWithType.vb: ConnectionExtensions.StoredProcedure(Of TConnection)(IDbConnectionFactory(Of TConnection), String)
- uid: Open.Database.Extensions.ConnectionExtensions.StoredProcedure``1(System.Func{``0},System.String)
  name: StoredProcedure<TConnection>(Func<TConnection>, String)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_StoredProcedure__1_System_Func___0__System_String_
  commentId: M:Open.Database.Extensions.ConnectionExtensions.StoredProcedure``1(System.Func{``0},System.String)
  name.vb: StoredProcedure(Of TConnection)(Func(Of TConnection), String)
  fullName: Open.Database.Extensions.ConnectionExtensions.StoredProcedure<TConnection>(System.Func<TConnection>, System.String)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.StoredProcedure(Of TConnection)(System.Func(Of TConnection), System.String)
  nameWithType: ConnectionExtensions.StoredProcedure<TConnection>(Func<TConnection>, String)
  nameWithType.vb: ConnectionExtensions.StoredProcedure(Of TConnection)(Func(Of TConnection), String)
- uid: Open.Database.Extensions.ConnectionExtensions.Using(Open.Database.Extensions.IDbConnectionFactory,System.Action{System.Data.IDbConnection})
  name: Using(IDbConnectionFactory, Action<IDbConnection>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Using_Open_Database_Extensions_IDbConnectionFactory_System_Action_System_Data_IDbConnection__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Using(Open.Database.Extensions.IDbConnectionFactory,System.Action{System.Data.IDbConnection})
  name.vb: Using(IDbConnectionFactory, Action(Of IDbConnection))
  fullName: Open.Database.Extensions.ConnectionExtensions.Using(Open.Database.Extensions.IDbConnectionFactory, System.Action<System.Data.IDbConnection>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Using(Open.Database.Extensions.IDbConnectionFactory, System.Action(Of System.Data.IDbConnection))
  nameWithType: ConnectionExtensions.Using(IDbConnectionFactory, Action<IDbConnection>)
  nameWithType.vb: ConnectionExtensions.Using(IDbConnectionFactory, Action(Of IDbConnection))
- uid: Open.Database.Extensions.ConnectionExtensions.Using(Open.Database.Extensions.IDbConnectionPool,System.Action{System.Data.IDbConnection})
  name: Using(IDbConnectionPool, Action<IDbConnection>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Using_Open_Database_Extensions_IDbConnectionPool_System_Action_System_Data_IDbConnection__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Using(Open.Database.Extensions.IDbConnectionPool,System.Action{System.Data.IDbConnection})
  name.vb: Using(IDbConnectionPool, Action(Of IDbConnection))
  fullName: Open.Database.Extensions.ConnectionExtensions.Using(Open.Database.Extensions.IDbConnectionPool, System.Action<System.Data.IDbConnection>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Using(Open.Database.Extensions.IDbConnectionPool, System.Action(Of System.Data.IDbConnection))
  nameWithType: ConnectionExtensions.Using(IDbConnectionPool, Action<IDbConnection>)
  nameWithType.vb: ConnectionExtensions.Using(IDbConnectionPool, Action(Of IDbConnection))
- uid: Open.Database.Extensions.ConnectionExtensions.Using*
  name: Using
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Using_
  commentId: Overload:Open.Database.Extensions.ConnectionExtensions.Using
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionExtensions.Using
  nameWithType: ConnectionExtensions.Using
- uid: Open.Database.Extensions.ConnectionExtensions.Using``1(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,``0})
  name: Using<T>(IDbConnectionFactory, Func<IDbConnection, T>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Using__1_Open_Database_Extensions_IDbConnectionFactory_System_Func_System_Data_IDbConnection___0__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Using``1(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,``0})
  name.vb: Using(Of T)(IDbConnectionFactory, Func(Of IDbConnection, T))
  fullName: Open.Database.Extensions.ConnectionExtensions.Using<T>(Open.Database.Extensions.IDbConnectionFactory, System.Func<System.Data.IDbConnection, T>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Using(Of T)(Open.Database.Extensions.IDbConnectionFactory, System.Func(Of System.Data.IDbConnection, T))
  nameWithType: ConnectionExtensions.Using<T>(IDbConnectionFactory, Func<IDbConnection, T>)
  nameWithType.vb: ConnectionExtensions.Using(Of T)(IDbConnectionFactory, Func(Of IDbConnection, T))
- uid: Open.Database.Extensions.ConnectionExtensions.Using``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Action{``0})
  name: Using<TConn>(IDbConnectionFactory<TConn>, Action<TConn>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Using__1_Open_Database_Extensions_IDbConnectionFactory___0__System_Action___0__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Using``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Action{``0})
  name.vb: Using(Of TConn)(IDbConnectionFactory(Of TConn), Action(Of TConn))
  fullName: Open.Database.Extensions.ConnectionExtensions.Using<TConn>(Open.Database.Extensions.IDbConnectionFactory<TConn>, System.Action<TConn>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Using(Of TConn)(Open.Database.Extensions.IDbConnectionFactory(Of TConn), System.Action(Of TConn))
  nameWithType: ConnectionExtensions.Using<TConn>(IDbConnectionFactory<TConn>, Action<TConn>)
  nameWithType.vb: ConnectionExtensions.Using(Of TConn)(IDbConnectionFactory(Of TConn), Action(Of TConn))
- uid: Open.Database.Extensions.ConnectionExtensions.Using``1(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,``0})
  name: Using<T>(IDbConnectionPool, Func<IDbConnection, T>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Using__1_Open_Database_Extensions_IDbConnectionPool_System_Func_System_Data_IDbConnection___0__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Using``1(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,``0})
  name.vb: Using(Of T)(IDbConnectionPool, Func(Of IDbConnection, T))
  fullName: Open.Database.Extensions.ConnectionExtensions.Using<T>(Open.Database.Extensions.IDbConnectionPool, System.Func<System.Data.IDbConnection, T>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Using(Of T)(Open.Database.Extensions.IDbConnectionPool, System.Func(Of System.Data.IDbConnection, T))
  nameWithType: ConnectionExtensions.Using<T>(IDbConnectionPool, Func<IDbConnection, T>)
  nameWithType.vb: ConnectionExtensions.Using(Of T)(IDbConnectionPool, Func(Of IDbConnection, T))
- uid: Open.Database.Extensions.ConnectionExtensions.Using``1(Open.Database.Extensions.IDbConnectionPool{``0},System.Action{``0})
  name: Using<TConn>(IDbConnectionPool<TConn>, Action<TConn>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Using__1_Open_Database_Extensions_IDbConnectionPool___0__System_Action___0__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Using``1(Open.Database.Extensions.IDbConnectionPool{``0},System.Action{``0})
  name.vb: Using(Of TConn)(IDbConnectionPool(Of TConn), Action(Of TConn))
  fullName: Open.Database.Extensions.ConnectionExtensions.Using<TConn>(Open.Database.Extensions.IDbConnectionPool<TConn>, System.Action<TConn>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Using(Of TConn)(Open.Database.Extensions.IDbConnectionPool(Of TConn), System.Action(Of TConn))
  nameWithType: ConnectionExtensions.Using<TConn>(IDbConnectionPool<TConn>, Action<TConn>)
  nameWithType.vb: ConnectionExtensions.Using(Of TConn)(IDbConnectionPool(Of TConn), Action(Of TConn))
- uid: Open.Database.Extensions.ConnectionExtensions.Using``1(System.Func{``0},System.Action{``0})
  name: Using<TConn>(Func<TConn>, Action<TConn>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Using__1_System_Func___0__System_Action___0__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Using``1(System.Func{``0},System.Action{``0})
  name.vb: Using(Of TConn)(Func(Of TConn), Action(Of TConn))
  fullName: Open.Database.Extensions.ConnectionExtensions.Using<TConn>(System.Func<TConn>, System.Action<TConn>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Using(Of TConn)(System.Func(Of TConn), System.Action(Of TConn))
  nameWithType: ConnectionExtensions.Using<TConn>(Func<TConn>, Action<TConn>)
  nameWithType.vb: ConnectionExtensions.Using(Of TConn)(Func(Of TConn), Action(Of TConn))
- uid: Open.Database.Extensions.ConnectionExtensions.Using``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,``1})
  name: Using<TConn, T>(IDbConnectionFactory<TConn>, Func<TConn, T>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Using__2_Open_Database_Extensions_IDbConnectionFactory___0__System_Func___0___1__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Using``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,``1})
  name.vb: Using(Of TConn, T)(IDbConnectionFactory(Of TConn), Func(Of TConn, T))
  fullName: Open.Database.Extensions.ConnectionExtensions.Using<TConn, T>(Open.Database.Extensions.IDbConnectionFactory<TConn>, System.Func<TConn, T>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Using(Of TConn, T)(Open.Database.Extensions.IDbConnectionFactory(Of TConn), System.Func(Of TConn, T))
  nameWithType: ConnectionExtensions.Using<TConn, T>(IDbConnectionFactory<TConn>, Func<TConn, T>)
  nameWithType.vb: ConnectionExtensions.Using(Of TConn, T)(IDbConnectionFactory(Of TConn), Func(Of TConn, T))
- uid: Open.Database.Extensions.ConnectionExtensions.Using``2(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,``1})
  name: Using<TConn, T>(IDbConnectionPool<TConn>, Func<TConn, T>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Using__2_Open_Database_Extensions_IDbConnectionPool___0__System_Func___0___1__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Using``2(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,``1})
  name.vb: Using(Of TConn, T)(IDbConnectionPool(Of TConn), Func(Of TConn, T))
  fullName: Open.Database.Extensions.ConnectionExtensions.Using<TConn, T>(Open.Database.Extensions.IDbConnectionPool<TConn>, System.Func<TConn, T>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Using(Of TConn, T)(Open.Database.Extensions.IDbConnectionPool(Of TConn), System.Func(Of TConn, T))
  nameWithType: ConnectionExtensions.Using<TConn, T>(IDbConnectionPool<TConn>, Func<TConn, T>)
  nameWithType.vb: ConnectionExtensions.Using(Of TConn, T)(IDbConnectionPool(Of TConn), Func(Of TConn, T))
- uid: Open.Database.Extensions.ConnectionExtensions.Using``2(System.Func{``0},System.Func{``0,``1})
  name: Using<TConn, T>(Func<TConn>, Func<TConn, T>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_Using__2_System_Func___0__System_Func___0___1__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.Using``2(System.Func{``0},System.Func{``0,``1})
  name.vb: Using(Of TConn, T)(Func(Of TConn), Func(Of TConn, T))
  fullName: Open.Database.Extensions.ConnectionExtensions.Using<TConn, T>(System.Func<TConn>, System.Func<TConn, T>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.Using(Of TConn, T)(System.Func(Of TConn), System.Func(Of TConn, T))
  nameWithType: ConnectionExtensions.Using<TConn, T>(Func<TConn>, Func<TConn, T>)
  nameWithType.vb: ConnectionExtensions.Using(Of TConn, T)(Func(Of TConn), Func(Of TConn, T))
- uid: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask})
  name: UsingAsync(IDbConnectionFactory, Func<IDbConnection, ValueTask>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_UsingAsync_Open_Database_Extensions_IDbConnectionFactory_System_Func_System_Data_IDbConnection_System_Threading_Tasks_ValueTask__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.UsingAsync(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask})
  name.vb: UsingAsync(IDbConnectionFactory, Func(Of IDbConnection, ValueTask))
  fullName: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Open.Database.Extensions.IDbConnectionFactory, System.Func<System.Data.IDbConnection, System.Threading.Tasks.ValueTask>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Open.Database.Extensions.IDbConnectionFactory, System.Func(Of System.Data.IDbConnection, System.Threading.Tasks.ValueTask))
  nameWithType: ConnectionExtensions.UsingAsync(IDbConnectionFactory, Func<IDbConnection, ValueTask>)
  nameWithType.vb: ConnectionExtensions.UsingAsync(IDbConnectionFactory, Func(Of IDbConnection, ValueTask))
- uid: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask})
  name: UsingAsync(IDbConnectionPool, Func<IDbConnection, ValueTask>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_UsingAsync_Open_Database_Extensions_IDbConnectionPool_System_Func_System_Data_IDbConnection_System_Threading_Tasks_ValueTask__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.UsingAsync(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask})
  name.vb: UsingAsync(IDbConnectionPool, Func(Of IDbConnection, ValueTask))
  fullName: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Open.Database.Extensions.IDbConnectionPool, System.Func<System.Data.IDbConnection, System.Threading.Tasks.ValueTask>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Open.Database.Extensions.IDbConnectionPool, System.Func(Of System.Data.IDbConnection, System.Threading.Tasks.ValueTask))
  nameWithType: ConnectionExtensions.UsingAsync(IDbConnectionPool, Func<IDbConnection, ValueTask>)
  nameWithType.vb: ConnectionExtensions.UsingAsync(IDbConnectionPool, Func(Of IDbConnection, ValueTask))
- uid: Open.Database.Extensions.ConnectionExtensions.UsingAsync*
  name: UsingAsync
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_UsingAsync_
  commentId: Overload:Open.Database.Extensions.ConnectionExtensions.UsingAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionExtensions.UsingAsync
  nameWithType: ConnectionExtensions.UsingAsync
- uid: Open.Database.Extensions.ConnectionExtensions.UsingAsync``1(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask{``0}})
  name: UsingAsync<T>(IDbConnectionFactory, Func<IDbConnection, ValueTask<T>>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_UsingAsync__1_Open_Database_Extensions_IDbConnectionFactory_System_Func_System_Data_IDbConnection_System_Threading_Tasks_ValueTask___0___
  commentId: M:Open.Database.Extensions.ConnectionExtensions.UsingAsync``1(Open.Database.Extensions.IDbConnectionFactory,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask{``0}})
  name.vb: UsingAsync(Of T)(IDbConnectionFactory, Func(Of IDbConnection, ValueTask(Of T)))
  fullName: Open.Database.Extensions.ConnectionExtensions.UsingAsync<T>(Open.Database.Extensions.IDbConnectionFactory, System.Func<System.Data.IDbConnection, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Of T)(Open.Database.Extensions.IDbConnectionFactory, System.Func(Of System.Data.IDbConnection, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: ConnectionExtensions.UsingAsync<T>(IDbConnectionFactory, Func<IDbConnection, ValueTask<T>>)
  nameWithType.vb: ConnectionExtensions.UsingAsync(Of T)(IDbConnectionFactory, Func(Of IDbConnection, ValueTask(Of T)))
- uid: Open.Database.Extensions.ConnectionExtensions.UsingAsync``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.ValueTask})
  name: UsingAsync<TConn>(IDbConnectionFactory<TConn>, Func<TConn, ValueTask>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_UsingAsync__1_Open_Database_Extensions_IDbConnectionFactory___0__System_Func___0_System_Threading_Tasks_ValueTask__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.UsingAsync``1(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.ValueTask})
  name.vb: UsingAsync(Of TConn)(IDbConnectionFactory(Of TConn), Func(Of TConn, ValueTask))
  fullName: Open.Database.Extensions.ConnectionExtensions.UsingAsync<TConn>(Open.Database.Extensions.IDbConnectionFactory<TConn>, System.Func<TConn, System.Threading.Tasks.ValueTask>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Of TConn)(Open.Database.Extensions.IDbConnectionFactory(Of TConn), System.Func(Of TConn, System.Threading.Tasks.ValueTask))
  nameWithType: ConnectionExtensions.UsingAsync<TConn>(IDbConnectionFactory<TConn>, Func<TConn, ValueTask>)
  nameWithType.vb: ConnectionExtensions.UsingAsync(Of TConn)(IDbConnectionFactory(Of TConn), Func(Of TConn, ValueTask))
- uid: Open.Database.Extensions.ConnectionExtensions.UsingAsync``1(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask{``0}})
  name: UsingAsync<T>(IDbConnectionPool, Func<IDbConnection, ValueTask<T>>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_UsingAsync__1_Open_Database_Extensions_IDbConnectionPool_System_Func_System_Data_IDbConnection_System_Threading_Tasks_ValueTask___0___
  commentId: M:Open.Database.Extensions.ConnectionExtensions.UsingAsync``1(Open.Database.Extensions.IDbConnectionPool,System.Func{System.Data.IDbConnection,System.Threading.Tasks.ValueTask{``0}})
  name.vb: UsingAsync(Of T)(IDbConnectionPool, Func(Of IDbConnection, ValueTask(Of T)))
  fullName: Open.Database.Extensions.ConnectionExtensions.UsingAsync<T>(Open.Database.Extensions.IDbConnectionPool, System.Func<System.Data.IDbConnection, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Of T)(Open.Database.Extensions.IDbConnectionPool, System.Func(Of System.Data.IDbConnection, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: ConnectionExtensions.UsingAsync<T>(IDbConnectionPool, Func<IDbConnection, ValueTask<T>>)
  nameWithType.vb: ConnectionExtensions.UsingAsync(Of T)(IDbConnectionPool, Func(Of IDbConnection, ValueTask(Of T)))
- uid: Open.Database.Extensions.ConnectionExtensions.UsingAsync``1(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,System.Threading.Tasks.ValueTask})
  name: UsingAsync<TConn>(IDbConnectionPool<TConn>, Func<TConn, ValueTask>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_UsingAsync__1_Open_Database_Extensions_IDbConnectionPool___0__System_Func___0_System_Threading_Tasks_ValueTask__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.UsingAsync``1(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,System.Threading.Tasks.ValueTask})
  name.vb: UsingAsync(Of TConn)(IDbConnectionPool(Of TConn), Func(Of TConn, ValueTask))
  fullName: Open.Database.Extensions.ConnectionExtensions.UsingAsync<TConn>(Open.Database.Extensions.IDbConnectionPool<TConn>, System.Func<TConn, System.Threading.Tasks.ValueTask>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Of TConn)(Open.Database.Extensions.IDbConnectionPool(Of TConn), System.Func(Of TConn, System.Threading.Tasks.ValueTask))
  nameWithType: ConnectionExtensions.UsingAsync<TConn>(IDbConnectionPool<TConn>, Func<TConn, ValueTask>)
  nameWithType.vb: ConnectionExtensions.UsingAsync(Of TConn)(IDbConnectionPool(Of TConn), Func(Of TConn, ValueTask))
- uid: Open.Database.Extensions.ConnectionExtensions.UsingAsync``1(System.Func{``0},System.Func{``0,System.Threading.Tasks.ValueTask})
  name: UsingAsync<TConn>(Func<TConn>, Func<TConn, ValueTask>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_UsingAsync__1_System_Func___0__System_Func___0_System_Threading_Tasks_ValueTask__
  commentId: M:Open.Database.Extensions.ConnectionExtensions.UsingAsync``1(System.Func{``0},System.Func{``0,System.Threading.Tasks.ValueTask})
  name.vb: UsingAsync(Of TConn)(Func(Of TConn), Func(Of TConn, ValueTask))
  fullName: Open.Database.Extensions.ConnectionExtensions.UsingAsync<TConn>(System.Func<TConn>, System.Func<TConn, System.Threading.Tasks.ValueTask>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Of TConn)(System.Func(Of TConn), System.Func(Of TConn, System.Threading.Tasks.ValueTask))
  nameWithType: ConnectionExtensions.UsingAsync<TConn>(Func<TConn>, Func<TConn, ValueTask>)
  nameWithType.vb: ConnectionExtensions.UsingAsync(Of TConn)(Func(Of TConn), Func(Of TConn, ValueTask))
- uid: Open.Database.Extensions.ConnectionExtensions.UsingAsync``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}})
  name: UsingAsync<TConn, T>(IDbConnectionFactory<TConn>, Func<TConn, ValueTask<T>>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_UsingAsync__2_Open_Database_Extensions_IDbConnectionFactory___0__System_Func___0_System_Threading_Tasks_ValueTask___1___
  commentId: M:Open.Database.Extensions.ConnectionExtensions.UsingAsync``2(Open.Database.Extensions.IDbConnectionFactory{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}})
  name.vb: UsingAsync(Of TConn, T)(IDbConnectionFactory(Of TConn), Func(Of TConn, ValueTask(Of T)))
  fullName: Open.Database.Extensions.ConnectionExtensions.UsingAsync<TConn, T>(Open.Database.Extensions.IDbConnectionFactory<TConn>, System.Func<TConn, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Of TConn, T)(Open.Database.Extensions.IDbConnectionFactory(Of TConn), System.Func(Of TConn, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: ConnectionExtensions.UsingAsync<TConn, T>(IDbConnectionFactory<TConn>, Func<TConn, ValueTask<T>>)
  nameWithType.vb: ConnectionExtensions.UsingAsync(Of TConn, T)(IDbConnectionFactory(Of TConn), Func(Of TConn, ValueTask(Of T)))
- uid: Open.Database.Extensions.ConnectionExtensions.UsingAsync``2(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}})
  name: UsingAsync<TConn, T>(IDbConnectionPool<TConn>, Func<TConn, ValueTask<T>>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_UsingAsync__2_Open_Database_Extensions_IDbConnectionPool___0__System_Func___0_System_Threading_Tasks_ValueTask___1___
  commentId: M:Open.Database.Extensions.ConnectionExtensions.UsingAsync``2(Open.Database.Extensions.IDbConnectionPool{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}})
  name.vb: UsingAsync(Of TConn, T)(IDbConnectionPool(Of TConn), Func(Of TConn, ValueTask(Of T)))
  fullName: Open.Database.Extensions.ConnectionExtensions.UsingAsync<TConn, T>(Open.Database.Extensions.IDbConnectionPool<TConn>, System.Func<TConn, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Of TConn, T)(Open.Database.Extensions.IDbConnectionPool(Of TConn), System.Func(Of TConn, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: ConnectionExtensions.UsingAsync<TConn, T>(IDbConnectionPool<TConn>, Func<TConn, ValueTask<T>>)
  nameWithType.vb: ConnectionExtensions.UsingAsync(Of TConn, T)(IDbConnectionPool(Of TConn), Func(Of TConn, ValueTask(Of T)))
- uid: Open.Database.Extensions.ConnectionExtensions.UsingAsync``2(System.Func{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}})
  name: UsingAsync<TConn, T>(Func<TConn>, Func<TConn, ValueTask<T>>)
  href: api/Open.Database.Extensions.ConnectionExtensions.html#Open_Database_Extensions_ConnectionExtensions_UsingAsync__2_System_Func___0__System_Func___0_System_Threading_Tasks_ValueTask___1___
  commentId: M:Open.Database.Extensions.ConnectionExtensions.UsingAsync``2(System.Func{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}})
  name.vb: UsingAsync(Of TConn, T)(Func(Of TConn), Func(Of TConn, ValueTask(Of T)))
  fullName: Open.Database.Extensions.ConnectionExtensions.UsingAsync<TConn, T>(System.Func<TConn>, System.Func<TConn, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.ConnectionExtensions.UsingAsync(Of TConn, T)(System.Func(Of TConn), System.Func(Of TConn, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: ConnectionExtensions.UsingAsync<TConn, T>(Func<TConn>, Func<TConn, ValueTask<T>>)
  nameWithType.vb: ConnectionExtensions.UsingAsync(Of TConn, T)(Func(Of TConn), Func(Of TConn, ValueTask(Of T)))
- uid: Open.Database.Extensions.ConnectionPoolExtensions
  name: ConnectionPoolExtensions
  href: api/Open.Database.Extensions.ConnectionPoolExtensions.html
  commentId: T:Open.Database.Extensions.ConnectionPoolExtensions
  fullName: Open.Database.Extensions.ConnectionPoolExtensions
  nameWithType: ConnectionPoolExtensions
- uid: Open.Database.Extensions.ConnectionPoolExtensions.AsGeneric(Open.Database.Extensions.IDbConnectionPool)
  name: AsGeneric(IDbConnectionPool)
  href: api/Open.Database.Extensions.ConnectionPoolExtensions.html#Open_Database_Extensions_ConnectionPoolExtensions_AsGeneric_Open_Database_Extensions_IDbConnectionPool_
  commentId: M:Open.Database.Extensions.ConnectionPoolExtensions.AsGeneric(Open.Database.Extensions.IDbConnectionPool)
  fullName: Open.Database.Extensions.ConnectionPoolExtensions.AsGeneric(Open.Database.Extensions.IDbConnectionPool)
  nameWithType: ConnectionPoolExtensions.AsGeneric(IDbConnectionPool)
- uid: Open.Database.Extensions.ConnectionPoolExtensions.AsGeneric*
  name: AsGeneric
  href: api/Open.Database.Extensions.ConnectionPoolExtensions.html#Open_Database_Extensions_ConnectionPoolExtensions_AsGeneric_
  commentId: Overload:Open.Database.Extensions.ConnectionPoolExtensions.AsGeneric
  isSpec: "True"
  fullName: Open.Database.Extensions.ConnectionPoolExtensions.AsGeneric
  nameWithType: ConnectionPoolExtensions.AsGeneric
- uid: Open.Database.Extensions.Core
  name: Open.Database.Extensions.Core
  href: api/Open.Database.Extensions.Core.html
  commentId: N:Open.Database.Extensions.Core
  fullName: Open.Database.Extensions.Core
  nameWithType: Open.Database.Extensions.Core
- uid: Open.Database.Extensions.Core.QueryResult`1
  name: QueryResult<TResult>
  href: api/Open.Database.Extensions.Core.QueryResult-1.html
  commentId: T:Open.Database.Extensions.Core.QueryResult`1
  name.vb: QueryResult(Of TResult)
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult)
  nameWithType: QueryResult<TResult>
  nameWithType.vb: QueryResult(Of TResult)
- uid: Open.Database.Extensions.Core.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.String},`0)
  name: QueryResult(IEnumerable<Int32>, IEnumerable<String>, TResult)
  href: api/Open.Database.Extensions.Core.QueryResult-1.html#Open_Database_Extensions_Core_QueryResult_1__ctor_System_Collections_Generic_IEnumerable_System_Int32__System_Collections_Generic_IEnumerable_System_String___0_
  commentId: M:Open.Database.Extensions.Core.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{System.Int32},System.Collections.Generic.IEnumerable{System.String},`0)
  name.vb: QueryResult(IEnumerable(Of Int32), IEnumerable(Of String), TResult)
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>.QueryResult(System.Collections.Generic.IEnumerable<System.Int32>, System.Collections.Generic.IEnumerable<System.String>, TResult)
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult).QueryResult(System.Collections.Generic.IEnumerable(Of System.Int32), System.Collections.Generic.IEnumerable(Of System.String), TResult)
  nameWithType: QueryResult<TResult>.QueryResult(IEnumerable<Int32>, IEnumerable<String>, TResult)
  nameWithType.vb: QueryResult(Of TResult).QueryResult(IEnumerable(Of Int32), IEnumerable(Of String), TResult)
- uid: Open.Database.Extensions.Core.QueryResult`1.#ctor(System.Collections.Immutable.ImmutableArray{System.Int32},System.Collections.Immutable.ImmutableArray{System.String},`0)
  name: QueryResult(ImmutableArray<Int32>, ImmutableArray<String>, TResult)
  href: api/Open.Database.Extensions.Core.QueryResult-1.html#Open_Database_Extensions_Core_QueryResult_1__ctor_System_Collections_Immutable_ImmutableArray_System_Int32__System_Collections_Immutable_ImmutableArray_System_String___0_
  commentId: M:Open.Database.Extensions.Core.QueryResult`1.#ctor(System.Collections.Immutable.ImmutableArray{System.Int32},System.Collections.Immutable.ImmutableArray{System.String},`0)
  name.vb: QueryResult(ImmutableArray(Of Int32), ImmutableArray(Of String), TResult)
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>.QueryResult(System.Collections.Immutable.ImmutableArray<System.Int32>, System.Collections.Immutable.ImmutableArray<System.String>, TResult)
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult).QueryResult(System.Collections.Immutable.ImmutableArray(Of System.Int32), System.Collections.Immutable.ImmutableArray(Of System.String), TResult)
  nameWithType: QueryResult<TResult>.QueryResult(ImmutableArray<Int32>, ImmutableArray<String>, TResult)
  nameWithType.vb: QueryResult(Of TResult).QueryResult(ImmutableArray(Of Int32), ImmutableArray(Of String), TResult)
- uid: Open.Database.Extensions.Core.QueryResult`1.#ctor*
  name: QueryResult
  href: api/Open.Database.Extensions.Core.QueryResult-1.html#Open_Database_Extensions_Core_QueryResult_1__ctor_
  commentId: Overload:Open.Database.Extensions.Core.QueryResult`1.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>.QueryResult
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult).QueryResult
  nameWithType: QueryResult<TResult>.QueryResult
  nameWithType.vb: QueryResult(Of TResult).QueryResult
- uid: Open.Database.Extensions.Core.QueryResult`1.ColumnCount
  name: ColumnCount
  href: api/Open.Database.Extensions.Core.QueryResult-1.html#Open_Database_Extensions_Core_QueryResult_1_ColumnCount
  commentId: P:Open.Database.Extensions.Core.QueryResult`1.ColumnCount
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>.ColumnCount
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult).ColumnCount
  nameWithType: QueryResult<TResult>.ColumnCount
  nameWithType.vb: QueryResult(Of TResult).ColumnCount
- uid: Open.Database.Extensions.Core.QueryResult`1.ColumnCount*
  name: ColumnCount
  href: api/Open.Database.Extensions.Core.QueryResult-1.html#Open_Database_Extensions_Core_QueryResult_1_ColumnCount_
  commentId: Overload:Open.Database.Extensions.Core.QueryResult`1.ColumnCount
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>.ColumnCount
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult).ColumnCount
  nameWithType: QueryResult<TResult>.ColumnCount
  nameWithType.vb: QueryResult(Of TResult).ColumnCount
- uid: Open.Database.Extensions.Core.QueryResult`1.Names
  name: Names
  href: api/Open.Database.Extensions.Core.QueryResult-1.html#Open_Database_Extensions_Core_QueryResult_1_Names
  commentId: P:Open.Database.Extensions.Core.QueryResult`1.Names
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>.Names
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult).Names
  nameWithType: QueryResult<TResult>.Names
  nameWithType.vb: QueryResult(Of TResult).Names
- uid: Open.Database.Extensions.Core.QueryResult`1.Names*
  name: Names
  href: api/Open.Database.Extensions.Core.QueryResult-1.html#Open_Database_Extensions_Core_QueryResult_1_Names_
  commentId: Overload:Open.Database.Extensions.Core.QueryResult`1.Names
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>.Names
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult).Names
  nameWithType: QueryResult<TResult>.Names
  nameWithType.vb: QueryResult(Of TResult).Names
- uid: Open.Database.Extensions.Core.QueryResult`1.Ordinals
  name: Ordinals
  href: api/Open.Database.Extensions.Core.QueryResult-1.html#Open_Database_Extensions_Core_QueryResult_1_Ordinals
  commentId: P:Open.Database.Extensions.Core.QueryResult`1.Ordinals
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>.Ordinals
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult).Ordinals
  nameWithType: QueryResult<TResult>.Ordinals
  nameWithType.vb: QueryResult(Of TResult).Ordinals
- uid: Open.Database.Extensions.Core.QueryResult`1.Ordinals*
  name: Ordinals
  href: api/Open.Database.Extensions.Core.QueryResult-1.html#Open_Database_Extensions_Core_QueryResult_1_Ordinals_
  commentId: Overload:Open.Database.Extensions.Core.QueryResult`1.Ordinals
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>.Ordinals
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult).Ordinals
  nameWithType: QueryResult<TResult>.Ordinals
  nameWithType.vb: QueryResult(Of TResult).Ordinals
- uid: Open.Database.Extensions.Core.QueryResult`1.Result
  name: Result
  href: api/Open.Database.Extensions.Core.QueryResult-1.html#Open_Database_Extensions_Core_QueryResult_1_Result
  commentId: P:Open.Database.Extensions.Core.QueryResult`1.Result
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>.Result
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult).Result
  nameWithType: QueryResult<TResult>.Result
  nameWithType.vb: QueryResult(Of TResult).Result
- uid: Open.Database.Extensions.Core.QueryResult`1.Result*
  name: Result
  href: api/Open.Database.Extensions.Core.QueryResult-1.html#Open_Database_Extensions_Core_QueryResult_1_Result_
  commentId: Overload:Open.Database.Extensions.Core.QueryResult`1.Result
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.QueryResult<TResult>.Result
  fullName.vb: Open.Database.Extensions.Core.QueryResult(Of TResult).Result
  nameWithType: QueryResult<TResult>.Result
  nameWithType.vb: QueryResult(Of TResult).Result
- uid: Open.Database.Extensions.Core.QueryResultExtensions
  name: QueryResultExtensions
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html
  commentId: T:Open.Database.Extensions.Core.QueryResultExtensions
  fullName: Open.Database.Extensions.Core.QueryResultExtensions
  nameWithType: QueryResultExtensions
- uid: Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.IEnumerable{System.Object[]}})
  name: AsMappedDictionaries(QueryResult<IEnumerable<Object[]>>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_AsMappedDictionaries_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_IEnumerable_System_Object_____
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.IEnumerable{System.Object[]}})
  name.vb: AsMappedDictionaries(QueryResult(Of IEnumerable(Of Object())))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.IEnumerable<System.Object[]>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.IEnumerable(Of System.Object())))
  nameWithType: QueryResultExtensions.AsMappedDictionaries(QueryResult<IEnumerable<Object[]>>)
  nameWithType.vb: QueryResultExtensions.AsMappedDictionaries(QueryResult(Of IEnumerable(Of Object())))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.Task{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.IEnumerable{System.Object[]}}})
  name: AsMappedDictionaries(Task<QueryResult<IEnumerable<Object[]>>>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_AsMappedDictionaries_System_Threading_Tasks_Task_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_IEnumerable_System_Object______
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.Task{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.IEnumerable{System.Object[]}}})
  name.vb: AsMappedDictionaries(Task(Of QueryResult(Of IEnumerable(Of Object()))))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.Task<Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.IEnumerable<System.Object[]>>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.Task(Of Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.IEnumerable(Of System.Object()))))
  nameWithType: QueryResultExtensions.AsMappedDictionaries(Task<QueryResult<IEnumerable<Object[]>>>)
  nameWithType.vb: QueryResultExtensions.AsMappedDictionaries(Task(Of QueryResult(Of IEnumerable(Of Object()))))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.ValueTask{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.IEnumerable{System.Object[]}}})
  name: AsMappedDictionaries(ValueTask<QueryResult<IEnumerable<Object[]>>>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_AsMappedDictionaries_System_Threading_Tasks_ValueTask_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_IEnumerable_System_Object______
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.ValueTask{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.IEnumerable{System.Object[]}}})
  name.vb: AsMappedDictionaries(ValueTask(Of QueryResult(Of IEnumerable(Of Object()))))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.ValueTask<Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.IEnumerable<System.Object[]>>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries(System.Threading.Tasks.ValueTask(Of Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.IEnumerable(Of System.Object()))))
  nameWithType: QueryResultExtensions.AsMappedDictionaries(ValueTask<QueryResult<IEnumerable<Object[]>>>)
  nameWithType.vb: QueryResultExtensions.AsMappedDictionaries(ValueTask(Of QueryResult(Of IEnumerable(Of Object()))))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries*
  name: AsMappedDictionaries
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_AsMappedDictionaries_
  commentId: Overload:Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.AsMappedDictionaries
  nameWithType: QueryResultExtensions.AsMappedDictionaries
- uid: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs*
  name: DequeueAs
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_DequeueAs_
  commentId: Overload:Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs
  nameWithType: QueryResultExtensions.DequeueAs
- uid: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: DequeueAs<T>(QueryResult<Queue<Object[]>>, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_DequeueAs__1_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_Queue_System_Object_____System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: DequeueAs(Of T)(QueryResult(Of Queue(Of Object())), IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs<T>(Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.Queue<System.Object[]>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs(Of T)(Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.Queue(Of System.Object())), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: QueryResultExtensions.DequeueAs<T>(QueryResult<Queue<Object[]>>, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: QueryResultExtensions.DequeueAs(Of T)(QueryResult(Of Queue(Of Object())), IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: DequeueAs<T>(QueryResult<Queue<Object[]>>, IEnumerable<(String Field, String Column)>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_DequeueAs__1_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_Queue_System_Object_____System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: DequeueAs(Of T)(QueryResult(Of Queue(Of Object())), IEnumerable(Of (Field As String, Column As String)))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs<T>(Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.Queue<System.Object[]>>, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs(Of T)(Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.Queue(Of System.Object())), System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)))
  nameWithType: QueryResultExtensions.DequeueAs<T>(QueryResult<Queue<Object[]>>, IEnumerable<(String Field, String Column)>)
  nameWithType.vb: QueryResultExtensions.DequeueAs(Of T)(QueryResult(Of Queue(Of Object())), IEnumerable(Of (Field As String, Column As String)))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.Task{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: DequeueAs<T>(Task<QueryResult<Queue<Object[]>>>, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_DequeueAs__1_System_Threading_Tasks_Task_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_Queue_System_Object______System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.Task{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: DequeueAs(Of T)(Task(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs<T>(System.Threading.Tasks.Task<Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.Queue<System.Object[]>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs(Of T)(System.Threading.Tasks.Task(Of Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.Queue(Of System.Object()))), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: QueryResultExtensions.DequeueAs<T>(Task<QueryResult<Queue<Object[]>>>, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: QueryResultExtensions.DequeueAs(Of T)(Task(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.Task{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: DequeueAs<T>(Task<QueryResult<Queue<Object[]>>>, IEnumerable<(String, String)>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_DequeueAs__1_System_Threading_Tasks_Task_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_Queue_System_Object______System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.Task{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: DequeueAs(Of T)(Task(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of (String, String)))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs<T>(System.Threading.Tasks.Task<Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.Queue<System.Object[]>>>, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs(Of T)(System.Threading.Tasks.Task(Of Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.Queue(Of System.Object()))), System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)))
  nameWithType: QueryResultExtensions.DequeueAs<T>(Task<QueryResult<Queue<Object[]>>>, IEnumerable<(String, String)>)
  nameWithType.vb: QueryResultExtensions.DequeueAs(Of T)(Task(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of (String, String)))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.ValueTask{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: DequeueAs<T>(ValueTask<QueryResult<Queue<Object[]>>>, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_DequeueAs__1_System_Threading_Tasks_ValueTask_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_Queue_System_Object______System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.ValueTask{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: DequeueAs(Of T)(ValueTask(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs<T>(System.Threading.Tasks.ValueTask<Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.Queue<System.Object[]>>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs(Of T)(System.Threading.Tasks.ValueTask(Of Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.Queue(Of System.Object()))), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: QueryResultExtensions.DequeueAs<T>(ValueTask<QueryResult<Queue<Object[]>>>, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: QueryResultExtensions.DequeueAs(Of T)(ValueTask(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.ValueTask{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: DequeueAs<T>(ValueTask<QueryResult<Queue<Object[]>>>, IEnumerable<(String, String)>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_DequeueAs__1_System_Threading_Tasks_ValueTask_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_Queue_System_Object______System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs``1(System.Threading.Tasks.ValueTask{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}},System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: DequeueAs(Of T)(ValueTask(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of (String, String)))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs<T>(System.Threading.Tasks.ValueTask<Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.Queue<System.Object[]>>>, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAs(Of T)(System.Threading.Tasks.ValueTask(Of Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.Queue(Of System.Object()))), System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)))
  nameWithType: QueryResultExtensions.DequeueAs<T>(ValueTask<QueryResult<Queue<Object[]>>>, IEnumerable<(String, String)>)
  nameWithType.vb: QueryResultExtensions.DequeueAs(Of T)(ValueTask(Of QueryResult(Of Queue(Of Object()))), IEnumerable(Of (String, String)))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}})
  name: DequeueAsMappedDictionaries(QueryResult<Queue<Object[]>>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_DequeueAsMappedDictionaries_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_Queue_System_Object_____
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}})
  name.vb: DequeueAsMappedDictionaries(QueryResult(Of Queue(Of Object())))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.Queue<System.Object[]>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.Queue(Of System.Object())))
  nameWithType: QueryResultExtensions.DequeueAsMappedDictionaries(QueryResult<Queue<Object[]>>)
  nameWithType.vb: QueryResultExtensions.DequeueAsMappedDictionaries(QueryResult(Of Queue(Of Object())))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.Task{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}})
  name: DequeueAsMappedDictionaries(Task<QueryResult<Queue<Object[]>>>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_DequeueAsMappedDictionaries_System_Threading_Tasks_Task_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_Queue_System_Object______
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.Task{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}})
  name.vb: DequeueAsMappedDictionaries(Task(Of QueryResult(Of Queue(Of Object()))))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.Task<Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.Queue<System.Object[]>>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.Task(Of Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.Queue(Of System.Object()))))
  nameWithType: QueryResultExtensions.DequeueAsMappedDictionaries(Task<QueryResult<Queue<Object[]>>>)
  nameWithType.vb: QueryResultExtensions.DequeueAsMappedDictionaries(Task(Of QueryResult(Of Queue(Of Object()))))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.ValueTask{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}})
  name: DequeueAsMappedDictionaries(ValueTask<QueryResult<Queue<Object[]>>>)
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_DequeueAsMappedDictionaries_System_Threading_Tasks_ValueTask_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_Queue_System_Object______
  commentId: M:Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.ValueTask{Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}}})
  name.vb: DequeueAsMappedDictionaries(ValueTask(Of QueryResult(Of Queue(Of Object()))))
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.ValueTask<Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.Queue<System.Object[]>>>)
  fullName.vb: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries(System.Threading.Tasks.ValueTask(Of Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.Queue(Of System.Object()))))
  nameWithType: QueryResultExtensions.DequeueAsMappedDictionaries(ValueTask<QueryResult<Queue<Object[]>>>)
  nameWithType.vb: QueryResultExtensions.DequeueAsMappedDictionaries(ValueTask(Of QueryResult(Of Queue(Of Object()))))
- uid: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries*
  name: DequeueAsMappedDictionaries
  href: api/Open.Database.Extensions.Core.QueryResultExtensions.html#Open_Database_Extensions_Core_QueryResultExtensions_DequeueAsMappedDictionaries_
  commentId: Overload:Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.QueryResultExtensions.DequeueAsMappedDictionaries
  nameWithType: QueryResultExtensions.DequeueAsMappedDictionaries
- uid: Open.Database.Extensions.Core.Transformer`1
  name: Transformer<T>
  href: api/Open.Database.Extensions.Core.Transformer-1.html
  commentId: T:Open.Database.Extensions.Core.Transformer`1
  name.vb: Transformer(Of T)
  fullName: Open.Database.Extensions.Core.Transformer<T>
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T)
  nameWithType: Transformer<T>
  nameWithType.vb: Transformer(Of T)
- uid: Open.Database.Extensions.Core.Transformer`1.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: Transformer(IEnumerable<(String Field, String Column)>)
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1__ctor_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.Core.Transformer`1.#ctor(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: Transformer(IEnumerable(Of (Field As String, Column As String)))
  fullName: Open.Database.Extensions.Core.Transformer<T>.Transformer(System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Transformer(System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)))
  nameWithType: Transformer<T>.Transformer(IEnumerable<(String Field, String Column)>)
  nameWithType.vb: Transformer(Of T).Transformer(IEnumerable(Of (Field As String, Column As String)))
- uid: Open.Database.Extensions.Core.Transformer`1.#ctor*
  name: Transformer
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1__ctor_
  commentId: Overload:Open.Database.Extensions.Core.Transformer`1.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.Transformer<T>.Transformer
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Transformer
  nameWithType: Transformer<T>.Transformer
  nameWithType.vb: Transformer(Of T).Transformer
- uid: Open.Database.Extensions.Core.Transformer`1.AsDequeueingEnumerable(Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}})
  name: AsDequeueingEnumerable(QueryResult<Queue<Object[]>>)
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_AsDequeueingEnumerable_Open_Database_Extensions_Core_QueryResult_System_Collections_Generic_Queue_System_Object_____
  commentId: M:Open.Database.Extensions.Core.Transformer`1.AsDequeueingEnumerable(Open.Database.Extensions.Core.QueryResult{System.Collections.Generic.Queue{System.Object[]}})
  name.vb: AsDequeueingEnumerable(QueryResult(Of Queue(Of Object())))
  fullName: Open.Database.Extensions.Core.Transformer<T>.AsDequeueingEnumerable(Open.Database.Extensions.Core.QueryResult<System.Collections.Generic.Queue<System.Object[]>>)
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).AsDequeueingEnumerable(Open.Database.Extensions.Core.QueryResult(Of System.Collections.Generic.Queue(Of System.Object())))
  nameWithType: Transformer<T>.AsDequeueingEnumerable(QueryResult<Queue<Object[]>>)
  nameWithType.vb: Transformer(Of T).AsDequeueingEnumerable(QueryResult(Of Queue(Of Object())))
- uid: Open.Database.Extensions.Core.Transformer`1.AsDequeueingEnumerable*
  name: AsDequeueingEnumerable
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_AsDequeueingEnumerable_
  commentId: Overload:Open.Database.Extensions.Core.Transformer`1.AsDequeueingEnumerable
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.Transformer<T>.AsDequeueingEnumerable
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).AsDequeueingEnumerable
  nameWithType: Transformer<T>.AsDequeueingEnumerable
  nameWithType.vb: Transformer(Of T).AsDequeueingEnumerable
- uid: Open.Database.Extensions.Core.Transformer`1.ColumnNames
  name: ColumnNames
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_ColumnNames
  commentId: P:Open.Database.Extensions.Core.Transformer`1.ColumnNames
  fullName: Open.Database.Extensions.Core.Transformer<T>.ColumnNames
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).ColumnNames
  nameWithType: Transformer<T>.ColumnNames
  nameWithType.vb: Transformer(Of T).ColumnNames
- uid: Open.Database.Extensions.Core.Transformer`1.ColumnNames*
  name: ColumnNames
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_ColumnNames_
  commentId: Overload:Open.Database.Extensions.Core.Transformer`1.ColumnNames
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.Transformer<T>.ColumnNames
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).ColumnNames
  nameWithType: Transformer<T>.ColumnNames
  nameWithType.vb: Transformer(Of T).ColumnNames
- uid: Open.Database.Extensions.Core.Transformer`1.Create(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: Create(IEnumerable<(String Field, String Column)>)
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_Create_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.Core.Transformer`1.Create(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: Create(IEnumerable(Of (Field As String, Column As String)))
  fullName: Open.Database.Extensions.Core.Transformer<T>.Create(System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Create(System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)))
  nameWithType: Transformer<T>.Create(IEnumerable<(String Field, String Column)>)
  nameWithType.vb: Transformer(Of T).Create(IEnumerable(Of (Field As String, Column As String)))
- uid: Open.Database.Extensions.Core.Transformer`1.Create*
  name: Create
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_Create_
  commentId: Overload:Open.Database.Extensions.Core.Transformer`1.Create
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.Transformer<T>.Create
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Create
  nameWithType: Transformer<T>.Create
  nameWithType.vb: Transformer(Of T).Create
- uid: Open.Database.Extensions.Core.Transformer`1.Processor
  name: Transformer<T>.Processor
  href: api/Open.Database.Extensions.Core.Transformer-1.Processor.html
  commentId: T:Open.Database.Extensions.Core.Transformer`1.Processor
  name.vb: Transformer(Of T).Processor
  fullName: Open.Database.Extensions.Core.Transformer<T>.Processor
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Processor
  nameWithType: Transformer<T>.Processor
  nameWithType.vb: Transformer(Of T).Processor
- uid: Open.Database.Extensions.Core.Transformer`1.Processor.#ctor(Open.Database.Extensions.Core.Transformer{`0})
  name: Processor(Transformer<T>)
  href: api/Open.Database.Extensions.Core.Transformer-1.Processor.html#Open_Database_Extensions_Core_Transformer_1_Processor__ctor_Open_Database_Extensions_Core_Transformer__0__
  commentId: M:Open.Database.Extensions.Core.Transformer`1.Processor.#ctor(Open.Database.Extensions.Core.Transformer{`0})
  name.vb: Processor(Transformer(Of T))
  fullName: Open.Database.Extensions.Core.Transformer<T>.Processor.Processor(Open.Database.Extensions.Core.Transformer<T>)
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Processor.Processor(Open.Database.Extensions.Core.Transformer(Of T))
  nameWithType: Transformer<T>.Processor.Processor(Transformer<T>)
  nameWithType.vb: Transformer(Of T).Processor.Processor(Transformer(Of T))
- uid: Open.Database.Extensions.Core.Transformer`1.Processor.#ctor(Open.Database.Extensions.Core.Transformer{`0},System.Collections.Immutable.ImmutableArray{System.String})
  name: Processor(Transformer<T>, ImmutableArray<String>)
  href: api/Open.Database.Extensions.Core.Transformer-1.Processor.html#Open_Database_Extensions_Core_Transformer_1_Processor__ctor_Open_Database_Extensions_Core_Transformer__0__System_Collections_Immutable_ImmutableArray_System_String__
  commentId: M:Open.Database.Extensions.Core.Transformer`1.Processor.#ctor(Open.Database.Extensions.Core.Transformer{`0},System.Collections.Immutable.ImmutableArray{System.String})
  name.vb: Processor(Transformer(Of T), ImmutableArray(Of String))
  fullName: Open.Database.Extensions.Core.Transformer<T>.Processor.Processor(Open.Database.Extensions.Core.Transformer<T>, System.Collections.Immutable.ImmutableArray<System.String>)
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Processor.Processor(Open.Database.Extensions.Core.Transformer(Of T), System.Collections.Immutable.ImmutableArray(Of System.String))
  nameWithType: Transformer<T>.Processor.Processor(Transformer<T>, ImmutableArray<String>)
  nameWithType.vb: Transformer(Of T).Processor.Processor(Transformer(Of T), ImmutableArray(Of String))
- uid: Open.Database.Extensions.Core.Transformer`1.Processor.#ctor*
  name: Processor
  href: api/Open.Database.Extensions.Core.Transformer-1.Processor.html#Open_Database_Extensions_Core_Transformer_1_Processor__ctor_
  commentId: Overload:Open.Database.Extensions.Core.Transformer`1.Processor.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.Transformer<T>.Processor.Processor
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Processor.Processor
  nameWithType: Transformer<T>.Processor.Processor
  nameWithType.vb: Transformer(Of T).Processor.Processor
- uid: Open.Database.Extensions.Core.Transformer`1.Processor.SetNames(System.Collections.Immutable.ImmutableArray{System.String})
  name: SetNames(ImmutableArray<String>)
  href: api/Open.Database.Extensions.Core.Transformer-1.Processor.html#Open_Database_Extensions_Core_Transformer_1_Processor_SetNames_System_Collections_Immutable_ImmutableArray_System_String__
  commentId: M:Open.Database.Extensions.Core.Transformer`1.Processor.SetNames(System.Collections.Immutable.ImmutableArray{System.String})
  name.vb: SetNames(ImmutableArray(Of String))
  fullName: Open.Database.Extensions.Core.Transformer<T>.Processor.SetNames(System.Collections.Immutable.ImmutableArray<System.String>)
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Processor.SetNames(System.Collections.Immutable.ImmutableArray(Of System.String))
  nameWithType: Transformer<T>.Processor.SetNames(ImmutableArray<String>)
  nameWithType.vb: Transformer(Of T).Processor.SetNames(ImmutableArray(Of String))
- uid: Open.Database.Extensions.Core.Transformer`1.Processor.SetNames*
  name: SetNames
  href: api/Open.Database.Extensions.Core.Transformer-1.Processor.html#Open_Database_Extensions_Core_Transformer_1_Processor_SetNames_
  commentId: Overload:Open.Database.Extensions.Core.Transformer`1.Processor.SetNames
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.Transformer<T>.Processor.SetNames
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Processor.SetNames
  nameWithType: Transformer<T>.Processor.SetNames
  nameWithType.vb: Transformer(Of T).Processor.SetNames
- uid: Open.Database.Extensions.Core.Transformer`1.Processor.Transform
  name: Transform
  href: api/Open.Database.Extensions.Core.Transformer-1.Processor.html#Open_Database_Extensions_Core_Transformer_1_Processor_Transform
  commentId: P:Open.Database.Extensions.Core.Transformer`1.Processor.Transform
  fullName: Open.Database.Extensions.Core.Transformer<T>.Processor.Transform
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Processor.Transform
  nameWithType: Transformer<T>.Processor.Transform
  nameWithType.vb: Transformer(Of T).Processor.Transform
- uid: Open.Database.Extensions.Core.Transformer`1.Processor.Transform*
  name: Transform
  href: api/Open.Database.Extensions.Core.Transformer-1.Processor.html#Open_Database_Extensions_Core_Transformer_1_Processor_Transform_
  commentId: Overload:Open.Database.Extensions.Core.Transformer`1.Processor.Transform
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.Transformer<T>.Processor.Transform
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Processor.Transform
  nameWithType: Transformer<T>.Processor.Transform
  nameWithType.vb: Transformer(Of T).Processor.Transform
- uid: Open.Database.Extensions.Core.Transformer`1.Processor.Transformer
  name: Transformer
  href: api/Open.Database.Extensions.Core.Transformer-1.Processor.html#Open_Database_Extensions_Core_Transformer_1_Processor_Transformer
  commentId: P:Open.Database.Extensions.Core.Transformer`1.Processor.Transformer
  fullName: Open.Database.Extensions.Core.Transformer<T>.Processor.Transformer
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Processor.Transformer
  nameWithType: Transformer<T>.Processor.Transformer
  nameWithType.vb: Transformer(Of T).Processor.Transformer
- uid: Open.Database.Extensions.Core.Transformer`1.Processor.Transformer*
  name: Transformer
  href: api/Open.Database.Extensions.Core.Transformer-1.Processor.html#Open_Database_Extensions_Core_Transformer_1_Processor_Transformer_
  commentId: Overload:Open.Database.Extensions.Core.Transformer`1.Processor.Transformer
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.Transformer<T>.Processor.Transformer
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Processor.Transformer
  nameWithType: Transformer<T>.Processor.Transformer
  nameWithType.vb: Transformer(Of T).Processor.Transformer
- uid: Open.Database.Extensions.Core.Transformer`1.PropertyNames
  name: PropertyNames
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_PropertyNames
  commentId: P:Open.Database.Extensions.Core.Transformer`1.PropertyNames
  fullName: Open.Database.Extensions.Core.Transformer<T>.PropertyNames
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).PropertyNames
  nameWithType: Transformer<T>.PropertyNames
  nameWithType.vb: Transformer(Of T).PropertyNames
- uid: Open.Database.Extensions.Core.Transformer`1.PropertyNames*
  name: PropertyNames
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_PropertyNames_
  commentId: Overload:Open.Database.Extensions.Core.Transformer`1.PropertyNames
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.Transformer<T>.PropertyNames
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).PropertyNames
  nameWithType: Transformer<T>.PropertyNames
  nameWithType.vb: Transformer(Of T).PropertyNames
- uid: Open.Database.Extensions.Core.Transformer`1.Results(System.Data.DataTable,System.Boolean)
  name: Results(DataTable, Boolean)
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_Results_System_Data_DataTable_System_Boolean_
  commentId: M:Open.Database.Extensions.Core.Transformer`1.Results(System.Data.DataTable,System.Boolean)
  fullName: Open.Database.Extensions.Core.Transformer<T>.Results(System.Data.DataTable, System.Boolean)
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Results(System.Data.DataTable, System.Boolean)
  nameWithType: Transformer<T>.Results(DataTable, Boolean)
  nameWithType.vb: Transformer(Of T).Results(DataTable, Boolean)
- uid: Open.Database.Extensions.Core.Transformer`1.Results*
  name: Results
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_Results_
  commentId: Overload:Open.Database.Extensions.Core.Transformer`1.Results
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.Transformer<T>.Results
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Results
  nameWithType: Transformer<T>.Results
  nameWithType.vb: Transformer(Of T).Results
- uid: Open.Database.Extensions.Core.Transformer`1.Type
  name: Type
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_Type
  commentId: P:Open.Database.Extensions.Core.Transformer`1.Type
  fullName: Open.Database.Extensions.Core.Transformer<T>.Type
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Type
  nameWithType: Transformer<T>.Type
  nameWithType.vb: Transformer(Of T).Type
- uid: Open.Database.Extensions.Core.Transformer`1.Type*
  name: Type
  href: api/Open.Database.Extensions.Core.Transformer-1.html#Open_Database_Extensions_Core_Transformer_1_Type_
  commentId: Overload:Open.Database.Extensions.Core.Transformer`1.Type
  isSpec: "True"
  fullName: Open.Database.Extensions.Core.Transformer<T>.Type
  fullName.vb: Open.Database.Extensions.Core.Transformer(Of T).Type
  nameWithType: Transformer<T>.Type
  nameWithType.vb: Transformer(Of T).Type
- uid: Open.Database.Extensions.CoreExtensions
  name: CoreExtensions
  href: api/Open.Database.Extensions.CoreExtensions.html
  commentId: T:Open.Database.Extensions.CoreExtensions
  fullName: Open.Database.Extensions.CoreExtensions
  nameWithType: CoreExtensions
- uid: Open.Database.Extensions.CoreExtensions.AsEnumerable(System.Data.DataColumnCollection)
  name: AsEnumerable(DataColumnCollection)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_AsEnumerable_System_Data_DataColumnCollection_
  commentId: M:Open.Database.Extensions.CoreExtensions.AsEnumerable(System.Data.DataColumnCollection)
  fullName: Open.Database.Extensions.CoreExtensions.AsEnumerable(System.Data.DataColumnCollection)
  nameWithType: CoreExtensions.AsEnumerable(DataColumnCollection)
- uid: Open.Database.Extensions.CoreExtensions.AsEnumerable(System.Data.DataRowCollection)
  name: AsEnumerable(DataRowCollection)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_AsEnumerable_System_Data_DataRowCollection_
  commentId: M:Open.Database.Extensions.CoreExtensions.AsEnumerable(System.Data.DataRowCollection)
  fullName: Open.Database.Extensions.CoreExtensions.AsEnumerable(System.Data.DataRowCollection)
  nameWithType: CoreExtensions.AsEnumerable(DataRowCollection)
- uid: Open.Database.Extensions.CoreExtensions.AsEnumerable*
  name: AsEnumerable
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_AsEnumerable_
  commentId: Overload:Open.Database.Extensions.CoreExtensions.AsEnumerable
  isSpec: "True"
  fullName: Open.Database.Extensions.CoreExtensions.AsEnumerable
  nameWithType: CoreExtensions.AsEnumerable
- uid: Open.Database.Extensions.CoreExtensions.DBNullToNull(System.Collections.Generic.IEnumerable{System.Object})
  name: DBNullToNull(IEnumerable<Object>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_DBNullToNull_System_Collections_Generic_IEnumerable_System_Object__
  commentId: M:Open.Database.Extensions.CoreExtensions.DBNullToNull(System.Collections.Generic.IEnumerable{System.Object})
  name.vb: DBNullToNull(IEnumerable(Of Object))
  fullName: Open.Database.Extensions.CoreExtensions.DBNullToNull(System.Collections.Generic.IEnumerable<System.Object>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.DBNullToNull(System.Collections.Generic.IEnumerable(Of System.Object))
  nameWithType: CoreExtensions.DBNullToNull(IEnumerable<Object>)
  nameWithType.vb: CoreExtensions.DBNullToNull(IEnumerable(Of Object))
- uid: Open.Database.Extensions.CoreExtensions.DBNullToNull(System.Object[])
  name: DBNullToNull(Object[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_DBNullToNull_System_Object___
  commentId: M:Open.Database.Extensions.CoreExtensions.DBNullToNull(System.Object[])
  name.vb: DBNullToNull(Object())
  fullName: Open.Database.Extensions.CoreExtensions.DBNullToNull(System.Object[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.DBNullToNull(System.Object())
  nameWithType: CoreExtensions.DBNullToNull(Object[])
  nameWithType.vb: CoreExtensions.DBNullToNull(Object())
- uid: Open.Database.Extensions.CoreExtensions.DBNullToNull(System.ReadOnlySpan{System.Object}@)
  name: DBNullToNull(ReadOnlySpan<Object>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_DBNullToNull_System_ReadOnlySpan_System_Object___
  commentId: M:Open.Database.Extensions.CoreExtensions.DBNullToNull(System.ReadOnlySpan{System.Object}@)
  name.vb: DBNullToNull(ByRef ReadOnlySpan(Of Object))
  fullName: Open.Database.Extensions.CoreExtensions.DBNullToNull(System.ReadOnlySpan<System.Object>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.DBNullToNull(ByRef System.ReadOnlySpan(Of System.Object))
  nameWithType: CoreExtensions.DBNullToNull(ReadOnlySpan<Object>)
  nameWithType.vb: CoreExtensions.DBNullToNull(ByRef ReadOnlySpan(Of Object))
- uid: Open.Database.Extensions.CoreExtensions.DBNullToNull(System.Span{System.Object}@)
  name: DBNullToNull(Span<Object>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_DBNullToNull_System_Span_System_Object___
  commentId: M:Open.Database.Extensions.CoreExtensions.DBNullToNull(System.Span{System.Object}@)
  name.vb: DBNullToNull(ByRef Span(Of Object))
  fullName: Open.Database.Extensions.CoreExtensions.DBNullToNull(System.Span<System.Object>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.DBNullToNull(ByRef System.Span(Of System.Object))
  nameWithType: CoreExtensions.DBNullToNull(Span<Object>)
  nameWithType.vb: CoreExtensions.DBNullToNull(ByRef Span(Of Object))
- uid: Open.Database.Extensions.CoreExtensions.DBNullToNull*
  name: DBNullToNull
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_DBNullToNull_
  commentId: Overload:Open.Database.Extensions.CoreExtensions.DBNullToNull
  isSpec: "True"
  fullName: Open.Database.Extensions.CoreExtensions.DBNullToNull
  nameWithType: CoreExtensions.DBNullToNull
- uid: Open.Database.Extensions.CoreExtensions.DequeueEach*
  name: DequeueEach
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_DequeueEach_
  commentId: Overload:Open.Database.Extensions.CoreExtensions.DequeueEach
  isSpec: "True"
  fullName: Open.Database.Extensions.CoreExtensions.DequeueEach
  nameWithType: CoreExtensions.DequeueEach
- uid: Open.Database.Extensions.CoreExtensions.DequeueEach``1(System.Collections.Generic.Queue{``0})
  name: DequeueEach<T>(Queue<T>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_DequeueEach__1_System_Collections_Generic_Queue___0__
  commentId: M:Open.Database.Extensions.CoreExtensions.DequeueEach``1(System.Collections.Generic.Queue{``0})
  name.vb: DequeueEach(Of T)(Queue(Of T))
  fullName: Open.Database.Extensions.CoreExtensions.DequeueEach<T>(System.Collections.Generic.Queue<T>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.DequeueEach(Of T)(System.Collections.Generic.Queue(Of T))
  nameWithType: CoreExtensions.DequeueEach<T>(Queue<T>)
  nameWithType.vb: CoreExtensions.DequeueEach(Of T)(Queue(Of T))
- uid: Open.Database.Extensions.CoreExtensions.ReplaceDBNullWithNull(System.Object[])
  name: ReplaceDBNullWithNull(Object[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ReplaceDBNullWithNull_System_Object___
  commentId: M:Open.Database.Extensions.CoreExtensions.ReplaceDBNullWithNull(System.Object[])
  name.vb: ReplaceDBNullWithNull(Object())
  fullName: Open.Database.Extensions.CoreExtensions.ReplaceDBNullWithNull(System.Object[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.ReplaceDBNullWithNull(System.Object())
  nameWithType: CoreExtensions.ReplaceDBNullWithNull(Object[])
  nameWithType.vb: CoreExtensions.ReplaceDBNullWithNull(Object())
- uid: Open.Database.Extensions.CoreExtensions.ReplaceDBNullWithNull(System.Span{System.Object})
  name: ReplaceDBNullWithNull(Span<Object>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ReplaceDBNullWithNull_System_Span_System_Object__
  commentId: M:Open.Database.Extensions.CoreExtensions.ReplaceDBNullWithNull(System.Span{System.Object})
  name.vb: ReplaceDBNullWithNull(Span(Of Object))
  fullName: Open.Database.Extensions.CoreExtensions.ReplaceDBNullWithNull(System.Span<System.Object>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.ReplaceDBNullWithNull(System.Span(Of System.Object))
  nameWithType: CoreExtensions.ReplaceDBNullWithNull(Span<Object>)
  nameWithType.vb: CoreExtensions.ReplaceDBNullWithNull(Span(Of Object))
- uid: Open.Database.Extensions.CoreExtensions.ReplaceDBNullWithNull*
  name: ReplaceDBNullWithNull
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ReplaceDBNullWithNull_
  commentId: Overload:Open.Database.Extensions.CoreExtensions.ReplaceDBNullWithNull
  isSpec: "True"
  fullName: Open.Database.Extensions.CoreExtensions.ReplaceDBNullWithNull
  nameWithType: CoreExtensions.ReplaceDBNullWithNull
- uid: Open.Database.Extensions.CoreExtensions.Results*
  name: Results
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Results_
  commentId: Overload:Open.Database.Extensions.CoreExtensions.Results
  isSpec: "True"
  fullName: Open.Database.Extensions.CoreExtensions.Results
  nameWithType: CoreExtensions.Results
- uid: Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: Results<T>(IDataReader, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Results__1_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: Results(Of T)(IDataReader, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.CoreExtensions.Results<T>(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.Results(Of T)(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: CoreExtensions.Results<T>(IDataReader, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: CoreExtensions.Results(Of T)(IDataReader, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: Results<T>(IDataReader, IEnumerable<(String Field, String Column)>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Results__1_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: Results(Of T)(IDataReader, IEnumerable(Of (Field As String, Column As String)))
  fullName: Open.Database.Extensions.CoreExtensions.Results<T>(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.Results(Of T)(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)))
  nameWithType: CoreExtensions.Results<T>(IDataReader, IEnumerable<(String Field, String Column)>)
  nameWithType.vb: CoreExtensions.Results(Of T)(IDataReader, IEnumerable(Of (Field As String, Column As String)))
- uid: Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDataReader,System.ValueTuple{System.String,System.String}[])
  name: Results<T>(IDataReader, (String Field, String Column)[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Results__1_System_Data_IDataReader_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDataReader,System.ValueTuple{System.String,System.String}[])
  name.vb: Results(Of T)(IDataReader, (Field As String, Column As String)())
  fullName: Open.Database.Extensions.CoreExtensions.Results<T>(System.Data.IDataReader, System.ValueTuple<System.String, System.String>[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.Results(Of T)(System.Data.IDataReader, System.ValueTuple(Of System.String, System.String)())
  nameWithType: CoreExtensions.Results<T>(IDataReader, (String Field, String Column)[])
  nameWithType.vb: CoreExtensions.Results(Of T)(IDataReader, (Field As String, Column As String)())
- uid: Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: Results<T>(IDbCommand, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Results__1_System_Data_IDbCommand_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: Results(Of T)(IDbCommand, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.CoreExtensions.Results<T>(System.Data.IDbCommand, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.Results(Of T)(System.Data.IDbCommand, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: CoreExtensions.Results<T>(IDbCommand, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: CoreExtensions.Results(Of T)(IDbCommand, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: Results<T>(IDbCommand, IEnumerable<(String Field, String Column)>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Results__1_System_Data_IDbCommand_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: Results(Of T)(IDbCommand, IEnumerable(Of (Field As String, Column As String)))
  fullName: Open.Database.Extensions.CoreExtensions.Results<T>(System.Data.IDbCommand, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.Results(Of T)(System.Data.IDbCommand, System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)))
  nameWithType: CoreExtensions.Results<T>(IDbCommand, IEnumerable<(String Field, String Column)>)
  nameWithType.vb: CoreExtensions.Results(Of T)(IDbCommand, IEnumerable(Of (Field As String, Column As String)))
- uid: Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDbCommand,System.ValueTuple{System.String,System.String}[])
  name: Results<T>(IDbCommand, (String Field, String Column)[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Results__1_System_Data_IDbCommand_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.CoreExtensions.Results``1(System.Data.IDbCommand,System.ValueTuple{System.String,System.String}[])
  name.vb: Results(Of T)(IDbCommand, (Field As String, Column As String)())
  fullName: Open.Database.Extensions.CoreExtensions.Results<T>(System.Data.IDbCommand, System.ValueTuple<System.String, System.String>[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.Results(Of T)(System.Data.IDbCommand, System.ValueTuple(Of System.String, System.String)())
  nameWithType: CoreExtensions.Results<T>(IDbCommand, (String Field, String Column)[])
  nameWithType.vb: CoreExtensions.Results(Of T)(IDbCommand, (Field As String, Column As String)())
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync*
  name: ResultsAsync
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync_
  commentId: Overload:Open.Database.Extensions.CoreExtensions.ResultsAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync
  nameWithType: CoreExtensions.ResultsAsync
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean,System.Threading.CancellationToken)
  name: ResultsAsync<T>(DbCommand, IEnumerable<KeyValuePair<String, String>>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean,System.Threading.CancellationToken)
  name.vb: ResultsAsync(Of T)(DbCommand, IEnumerable(Of KeyValuePair(Of String, String)), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.ResultsAsync<T>(DbCommand, IEnumerable<KeyValuePair<String, String>>, Boolean, CancellationToken)
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbCommand, IEnumerable(Of KeyValuePair(Of String, String)), Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  name: ResultsAsync<T>(DbCommand, IEnumerable<KeyValuePair<String, String>>, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  name.vb: ResultsAsync(Of T)(DbCommand, IEnumerable(Of KeyValuePair(Of String, String)), CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Threading.CancellationToken)
  nameWithType: CoreExtensions.ResultsAsync<T>(DbCommand, IEnumerable<KeyValuePair<String, String>>, CancellationToken)
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbCommand, IEnumerable(Of KeyValuePair(Of String, String)), CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Boolean,System.Threading.CancellationToken)
  name: ResultsAsync<T>(DbCommand, IEnumerable<(String Field, String Column)>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Boolean,System.Threading.CancellationToken)
  name.vb: ResultsAsync(Of T)(DbCommand, IEnumerable(Of (Field As String, Column As String)), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)), System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.ResultsAsync<T>(DbCommand, IEnumerable<(String Field, String Column)>, Boolean, CancellationToken)
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbCommand, IEnumerable(Of (Field As String, Column As String)), Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Threading.CancellationToken)
  name: ResultsAsync<T>(DbCommand, IEnumerable<(String Field, String Column)>, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Threading.CancellationToken)
  name.vb: ResultsAsync(Of T)(DbCommand, IEnumerable(Of (Field As String, Column As String)), CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)), System.Threading.CancellationToken)
  nameWithType: CoreExtensions.ResultsAsync<T>(DbCommand, IEnumerable<(String Field, String Column)>, CancellationToken)
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbCommand, IEnumerable(Of (Field As String, Column As String)), CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  name: ResultsAsync<T>(DbCommand, CancellationToken, (String Field, String Column)[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbCommand_System_Threading_CancellationToken_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  name.vb: ResultsAsync(Of T)(DbCommand, CancellationToken, (Field As String, Column As String)())
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.ValueTuple<System.String, System.String>[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.ValueTuple(Of System.String, System.String)())
  nameWithType: CoreExtensions.ResultsAsync<T>(DbCommand, CancellationToken, (String Field, String Column)[])
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbCommand, CancellationToken, (Field As String, Column As String)())
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.ValueTuple{System.String,System.String}[])
  name: ResultsAsync<T>(DbCommand, (String Field, String Column)[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbCommand_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbCommand,System.ValueTuple{System.String,System.String}[])
  name.vb: ResultsAsync(Of T)(DbCommand, (Field As String, Column As String)())
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbCommand, System.ValueTuple<System.String, System.String>[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbCommand, System.ValueTuple(Of System.String, System.String)())
  nameWithType: CoreExtensions.ResultsAsync<T>(DbCommand, (String Field, String Column)[])
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbCommand, (Field As String, Column As String)())
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean,System.Threading.CancellationToken)
  name: ResultsAsync<T>(DbDataReader, IEnumerable<KeyValuePair<String, String>>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean,System.Threading.CancellationToken)
  name.vb: ResultsAsync(Of T)(DbDataReader, IEnumerable(Of KeyValuePair(Of String, String)), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.ResultsAsync<T>(DbDataReader, IEnumerable<KeyValuePair<String, String>>, Boolean, CancellationToken)
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbDataReader, IEnumerable(Of KeyValuePair(Of String, String)), Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  name: ResultsAsync<T>(DbDataReader, IEnumerable<KeyValuePair<String, String>>, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Threading.CancellationToken)
  name.vb: ResultsAsync(Of T)(DbDataReader, IEnumerable(Of KeyValuePair(Of String, String)), CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Threading.CancellationToken)
  nameWithType: CoreExtensions.ResultsAsync<T>(DbDataReader, IEnumerable<KeyValuePair<String, String>>, CancellationToken)
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbDataReader, IEnumerable(Of KeyValuePair(Of String, String)), CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Boolean,System.Threading.CancellationToken)
  name: ResultsAsync<T>(DbDataReader, IEnumerable<(String Field, String Column)>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Boolean,System.Threading.CancellationToken)
  name.vb: ResultsAsync(Of T)(DbDataReader, IEnumerable(Of (Field As String, Column As String)), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)), System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.ResultsAsync<T>(DbDataReader, IEnumerable<(String Field, String Column)>, Boolean, CancellationToken)
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbDataReader, IEnumerable(Of (Field As String, Column As String)), Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Threading.CancellationToken)
  name: ResultsAsync<T>(DbDataReader, IEnumerable<(String Field, String Column)>, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Threading.CancellationToken)
  name.vb: ResultsAsync(Of T)(DbDataReader, IEnumerable(Of (Field As String, Column As String)), CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)), System.Threading.CancellationToken)
  nameWithType: CoreExtensions.ResultsAsync<T>(DbDataReader, IEnumerable<(String Field, String Column)>, CancellationToken)
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbDataReader, IEnumerable(Of (Field As String, Column As String)), CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  name: ResultsAsync<T>(DbDataReader, CancellationToken, (String Field, String Column)[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbDataReader_System_Threading_CancellationToken_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.ValueTuple{System.String,System.String}[])
  name.vb: ResultsAsync(Of T)(DbDataReader, CancellationToken, (Field As String, Column As String)())
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.ValueTuple<System.String, System.String>[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.ValueTuple(Of System.String, System.String)())
  nameWithType: CoreExtensions.ResultsAsync<T>(DbDataReader, CancellationToken, (String Field, String Column)[])
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbDataReader, CancellationToken, (Field As String, Column As String)())
- uid: Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.ValueTuple{System.String,System.String}[])
  name: ResultsAsync<T>(DbDataReader, (String Field, String Column)[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsAsync__1_System_Data_Common_DbDataReader_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsAsync``1(System.Data.Common.DbDataReader,System.ValueTuple{System.String,System.String}[])
  name.vb: ResultsAsync(Of T)(DbDataReader, (Field As String, Column As String)())
  fullName: Open.Database.Extensions.CoreExtensions.ResultsAsync<T>(System.Data.Common.DbDataReader, System.ValueTuple<System.String, System.String>[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsAsync(Of T)(System.Data.Common.DbDataReader, System.ValueTuple(Of System.String, System.String)())
  nameWithType: CoreExtensions.ResultsAsync<T>(DbDataReader, (String Field, String Column)[])
  nameWithType.vb: CoreExtensions.ResultsAsync(Of T)(DbDataReader, (Field As String, Column As String)())
- uid: Open.Database.Extensions.CoreExtensions.ResultsFromDataTable*
  name: ResultsFromDataTable
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsFromDataTable_
  commentId: Overload:Open.Database.Extensions.CoreExtensions.ResultsFromDataTable
  isSpec: "True"
  fullName: Open.Database.Extensions.CoreExtensions.ResultsFromDataTable
  nameWithType: CoreExtensions.ResultsFromDataTable
- uid: Open.Database.Extensions.CoreExtensions.ResultsFromDataTable``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: ResultsFromDataTable<T>(IDataReader, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsFromDataTable__1_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsFromDataTable``1(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: ResultsFromDataTable(Of T)(IDataReader, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.CoreExtensions.ResultsFromDataTable<T>(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsFromDataTable(Of T)(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: CoreExtensions.ResultsFromDataTable<T>(IDataReader, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: CoreExtensions.ResultsFromDataTable(Of T)(IDataReader, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.CoreExtensions.ResultsFromDataTable``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: ResultsFromDataTable<T>(IDbCommand, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_ResultsFromDataTable__1_System_Data_IDbCommand_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.ResultsFromDataTable``1(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: ResultsFromDataTable(Of T)(IDbCommand, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.CoreExtensions.ResultsFromDataTable<T>(System.Data.IDbCommand, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.ResultsFromDataTable(Of T)(System.Data.IDbCommand, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: CoreExtensions.ResultsFromDataTable<T>(IDbCommand, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: CoreExtensions.ResultsFromDataTable(Of T)(IDbCommand, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader)
  name: Retrieve(IDataReader)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Retrieve_System_Data_IDataReader_
  commentId: M:Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader)
  fullName: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader)
  nameWithType: CoreExtensions.Retrieve(IDataReader)
- uid: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Int32})
  name: Retrieve(IDataReader, IEnumerable<Int32>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Retrieve_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: Retrieve(IDataReader, IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: CoreExtensions.Retrieve(IDataReader, IEnumerable<Int32>)
  nameWithType.vb: CoreExtensions.Retrieve(IDataReader, IEnumerable(Of Int32))
- uid: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.String})
  name: Retrieve(IDataReader, IEnumerable<String>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Retrieve_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.String})
  name.vb: Retrieve(IDataReader, IEnumerable(Of String))
  fullName: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: CoreExtensions.Retrieve(IDataReader, IEnumerable<String>)
  nameWithType.vb: CoreExtensions.Retrieve(IDataReader, IEnumerable(Of String))
- uid: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader,System.Int32,System.Int32[])
  name: Retrieve(IDataReader, Int32, Int32[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Retrieve_System_Data_IDataReader_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader,System.Int32,System.Int32[])
  name.vb: Retrieve(IDataReader, Int32, Int32())
  fullName: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader, System.Int32, System.Int32())
  nameWithType: CoreExtensions.Retrieve(IDataReader, Int32, Int32[])
  nameWithType.vb: CoreExtensions.Retrieve(IDataReader, Int32, Int32())
- uid: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader,System.String,System.String[])
  name: Retrieve(IDataReader, String, String[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Retrieve_System_Data_IDataReader_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader,System.String,System.String[])
  name.vb: Retrieve(IDataReader, String, String())
  fullName: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDataReader, System.String, System.String())
  nameWithType: CoreExtensions.Retrieve(IDataReader, String, String[])
  nameWithType.vb: CoreExtensions.Retrieve(IDataReader, String, String())
- uid: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Int32})
  name: Retrieve(IDbCommand, IEnumerable<Int32>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Retrieve_System_Data_IDbCommand_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: Retrieve(IDbCommand, IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand, System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand, System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: CoreExtensions.Retrieve(IDbCommand, IEnumerable<Int32>)
  nameWithType.vb: CoreExtensions.Retrieve(IDbCommand, IEnumerable(Of Int32))
- uid: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.String})
  name: Retrieve(IDbCommand, IEnumerable<String>)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Retrieve_System_Data_IDbCommand_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.String})
  name.vb: Retrieve(IDbCommand, IEnumerable(Of String))
  fullName: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand, System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: CoreExtensions.Retrieve(IDbCommand, IEnumerable<String>)
  nameWithType.vb: CoreExtensions.Retrieve(IDbCommand, IEnumerable(Of String))
- uid: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand,System.Data.CommandBehavior)
  name: Retrieve(IDbCommand, CommandBehavior)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Retrieve_System_Data_IDbCommand_System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand,System.Data.CommandBehavior)
  fullName: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand, System.Data.CommandBehavior)
  nameWithType: CoreExtensions.Retrieve(IDbCommand, CommandBehavior)
- uid: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand,System.Int32,System.Int32[])
  name: Retrieve(IDbCommand, Int32, Int32[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Retrieve_System_Data_IDbCommand_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand,System.Int32,System.Int32[])
  name.vb: Retrieve(IDbCommand, Int32, Int32())
  fullName: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand, System.Int32, System.Int32())
  nameWithType: CoreExtensions.Retrieve(IDbCommand, Int32, Int32[])
  nameWithType.vb: CoreExtensions.Retrieve(IDbCommand, Int32, Int32())
- uid: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand,System.String,System.String[])
  name: Retrieve(IDbCommand, String, String[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Retrieve_System_Data_IDbCommand_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand,System.String,System.String[])
  name.vb: Retrieve(IDbCommand, String, String())
  fullName: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.Retrieve(System.Data.IDbCommand, System.String, System.String())
  nameWithType: CoreExtensions.Retrieve(IDbCommand, String, String[])
  nameWithType.vb: CoreExtensions.Retrieve(IDbCommand, String, String())
- uid: Open.Database.Extensions.CoreExtensions.Retrieve*
  name: Retrieve
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_Retrieve_
  commentId: Overload:Open.Database.Extensions.CoreExtensions.Retrieve
  isSpec: "True"
  fullName: Open.Database.Extensions.CoreExtensions.Retrieve
  nameWithType: CoreExtensions.Retrieve
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Boolean,System.Threading.CancellationToken)
  name: RetrieveAsync(DbCommand, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbCommand_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Boolean,System.Threading.CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbCommand, Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  name: RetrieveAsync(DbCommand, IEnumerable<Int32>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_Int32__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  name.vb: RetrieveAsync(DbCommand, IEnumerable(Of Int32), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.Int32>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.Int32), System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbCommand, IEnumerable<Int32>, Boolean, CancellationToken)
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbCommand, IEnumerable(Of Int32), Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Int32},System.Threading.CancellationToken)
  name: RetrieveAsync(DbCommand, IEnumerable<Int32>, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_Int32__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Int32},System.Threading.CancellationToken)
  name.vb: RetrieveAsync(DbCommand, IEnumerable(Of Int32), CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.Int32>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.Int32), System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbCommand, IEnumerable<Int32>, CancellationToken)
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbCommand, IEnumerable(Of Int32), CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name: RetrieveAsync(DbCommand, IEnumerable<String>, Boolean, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_String__System_Boolean_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name.vb: RetrieveAsync(DbCommand, IEnumerable(Of String), Boolean, Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.String>, System.Boolean, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean, System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbCommand, IEnumerable<String>, Boolean, Boolean, CancellationToken)
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbCommand, IEnumerable(Of String), Boolean, Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)
  name: RetrieveAsync(DbCommand, IEnumerable<String>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_String__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)
  name.vb: RetrieveAsync(DbCommand, IEnumerable(Of String), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.String>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbCommand, IEnumerable<String>, Boolean, CancellationToken)
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbCommand, IEnumerable(Of String), Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name: RetrieveAsync(DbCommand, IEnumerable<String>, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbCommand_System_Collections_Generic_IEnumerable_System_String__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name.vb: RetrieveAsync(DbCommand, IEnumerable(Of String), CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable<System.String>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Collections.Generic.IEnumerable(Of System.String), System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbCommand, IEnumerable<String>, CancellationToken)
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbCommand, IEnumerable(Of String), CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Int32,System.Int32[])
  name: RetrieveAsync(DbCommand, Int32, Int32[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbCommand_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Int32,System.Int32[])
  name.vb: RetrieveAsync(DbCommand, Int32, Int32())
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Int32, System.Int32())
  nameWithType: CoreExtensions.RetrieveAsync(DbCommand, Int32, Int32[])
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbCommand, Int32, Int32())
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.String,System.String[])
  name: RetrieveAsync(DbCommand, String, String[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbCommand_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.String,System.String[])
  name.vb: RetrieveAsync(DbCommand, String, String())
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.String, System.String())
  nameWithType: CoreExtensions.RetrieveAsync(DbCommand, String, String[])
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbCommand, String, String())
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Threading.CancellationToken)
  name: RetrieveAsync(DbCommand, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbCommand_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Threading.CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbCommand, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.Int32,System.Int32[])
  name: RetrieveAsync(DbCommand, CancellationToken, Int32, Int32[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbCommand_System_Threading_CancellationToken_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.Int32,System.Int32[])
  name.vb: RetrieveAsync(DbCommand, CancellationToken, Int32, Int32())
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.Int32, System.Int32())
  nameWithType: CoreExtensions.RetrieveAsync(DbCommand, CancellationToken, Int32, Int32[])
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbCommand, CancellationToken, Int32, Int32())
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.String,System.String[])
  name: RetrieveAsync(DbCommand, CancellationToken, String, String[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbCommand_System_Threading_CancellationToken_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand,System.Threading.CancellationToken,System.String,System.String[])
  name.vb: RetrieveAsync(DbCommand, CancellationToken, String, String())
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbCommand, System.Threading.CancellationToken, System.String, System.String())
  nameWithType: CoreExtensions.RetrieveAsync(DbCommand, CancellationToken, String, String[])
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbCommand, CancellationToken, String, String())
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Boolean,System.Threading.CancellationToken)
  name: RetrieveAsync(DbDataReader, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Boolean,System.Threading.CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbDataReader, Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  name: RetrieveAsync(DbDataReader, IEnumerable<Int32>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_Int32__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Threading.CancellationToken)
  name.vb: RetrieveAsync(DbDataReader, IEnumerable(Of Int32), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.Int32>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.Int32), System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbDataReader, IEnumerable<Int32>, Boolean, CancellationToken)
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbDataReader, IEnumerable(Of Int32), Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Int32},System.Threading.CancellationToken)
  name: RetrieveAsync(DbDataReader, IEnumerable<Int32>, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_Int32__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.Int32},System.Threading.CancellationToken)
  name.vb: RetrieveAsync(DbDataReader, IEnumerable(Of Int32), CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.Int32>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.Int32), System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbDataReader, IEnumerable<Int32>, CancellationToken)
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbDataReader, IEnumerable(Of Int32), CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name: RetrieveAsync(DbDataReader, IEnumerable<String>, Boolean, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_String__System_Boolean_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name.vb: RetrieveAsync(DbDataReader, IEnumerable(Of String), Boolean, Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.String>, System.Boolean, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean, System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbDataReader, IEnumerable<String>, Boolean, Boolean, CancellationToken)
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbDataReader, IEnumerable(Of String), Boolean, Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)
  name: RetrieveAsync(DbDataReader, IEnumerable<String>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_String__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)
  name.vb: RetrieveAsync(DbDataReader, IEnumerable(Of String), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.String>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbDataReader, IEnumerable<String>, Boolean, CancellationToken)
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbDataReader, IEnumerable(Of String), Boolean, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name: RetrieveAsync(DbDataReader, IEnumerable<String>, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Collections_Generic_IEnumerable_System_String__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name.vb: RetrieveAsync(DbDataReader, IEnumerable(Of String), CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable<System.String>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Collections.Generic.IEnumerable(Of System.String), System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbDataReader, IEnumerable<String>, CancellationToken)
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbDataReader, IEnumerable(Of String), CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Int32,System.Int32[])
  name: RetrieveAsync(DbDataReader, Int32, Int32[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Int32,System.Int32[])
  name.vb: RetrieveAsync(DbDataReader, Int32, Int32())
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Int32, System.Int32())
  nameWithType: CoreExtensions.RetrieveAsync(DbDataReader, Int32, Int32[])
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbDataReader, Int32, Int32())
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.String,System.String[])
  name: RetrieveAsync(DbDataReader, String, String[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbDataReader_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.String,System.String[])
  name.vb: RetrieveAsync(DbDataReader, String, String())
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.String, System.String())
  nameWithType: CoreExtensions.RetrieveAsync(DbDataReader, String, String[])
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbDataReader, String, String())
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)
  name: RetrieveAsync(DbDataReader, CancellationToken)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Threading.CancellationToken)
  nameWithType: CoreExtensions.RetrieveAsync(DbDataReader, CancellationToken)
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.Int32,System.Int32[])
  name: RetrieveAsync(DbDataReader, CancellationToken, Int32, Int32[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Threading_CancellationToken_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.Int32,System.Int32[])
  name.vb: RetrieveAsync(DbDataReader, CancellationToken, Int32, Int32())
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.Int32, System.Int32())
  nameWithType: CoreExtensions.RetrieveAsync(DbDataReader, CancellationToken, Int32, Int32[])
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbDataReader, CancellationToken, Int32, Int32())
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.String,System.String[])
  name: RetrieveAsync(DbDataReader, CancellationToken, String, String[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_System_Data_Common_DbDataReader_System_Threading_CancellationToken_System_String_System_String___
  commentId: M:Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken,System.String,System.String[])
  name.vb: RetrieveAsync(DbDataReader, CancellationToken, String, String())
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.RetrieveAsync(System.Data.Common.DbDataReader, System.Threading.CancellationToken, System.String, System.String())
  nameWithType: CoreExtensions.RetrieveAsync(DbDataReader, CancellationToken, String, String[])
  nameWithType.vb: CoreExtensions.RetrieveAsync(DbDataReader, CancellationToken, String, String())
- uid: Open.Database.Extensions.CoreExtensions.RetrieveAsync*
  name: RetrieveAsync
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_RetrieveAsync_
  commentId: Overload:Open.Database.Extensions.CoreExtensions.RetrieveAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.CoreExtensions.RetrieveAsync
  nameWithType: CoreExtensions.RetrieveAsync
- uid: Open.Database.Extensions.CoreExtensions.To*
  name: To
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_To_
  commentId: Overload:Open.Database.Extensions.CoreExtensions.To
  isSpec: "True"
  fullName: Open.Database.Extensions.CoreExtensions.To
  nameWithType: CoreExtensions.To
- uid: Open.Database.Extensions.CoreExtensions.To``1(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean)
  name: To<T>(DataTable, IEnumerable<KeyValuePair<String, String>>, Boolean)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_To__1_System_Data_DataTable_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___System_Boolean_
  commentId: M:Open.Database.Extensions.CoreExtensions.To``1(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean)
  name.vb: To(Of T)(DataTable, IEnumerable(Of KeyValuePair(Of String, String)), Boolean)
  fullName: Open.Database.Extensions.CoreExtensions.To<T>(System.Data.DataTable, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, System.Boolean)
  fullName.vb: Open.Database.Extensions.CoreExtensions.To(Of T)(System.Data.DataTable, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), System.Boolean)
  nameWithType: CoreExtensions.To<T>(DataTable, IEnumerable<KeyValuePair<String, String>>, Boolean)
  nameWithType.vb: CoreExtensions.To(Of T)(DataTable, IEnumerable(Of KeyValuePair(Of String, String)), Boolean)
- uid: Open.Database.Extensions.CoreExtensions.To``1(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Boolean)
  name: To<T>(DataTable, IEnumerable<(String Field, String Column)>, Boolean)
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_To__1_System_Data_DataTable_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___System_Boolean_
  commentId: M:Open.Database.Extensions.CoreExtensions.To``1(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.Boolean)
  name.vb: To(Of T)(DataTable, IEnumerable(Of (Field As String, Column As String)), Boolean)
  fullName: Open.Database.Extensions.CoreExtensions.To<T>(System.Data.DataTable, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>, System.Boolean)
  fullName.vb: Open.Database.Extensions.CoreExtensions.To(Of T)(System.Data.DataTable, System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)), System.Boolean)
  nameWithType: CoreExtensions.To<T>(DataTable, IEnumerable<(String Field, String Column)>, Boolean)
  nameWithType.vb: CoreExtensions.To(Of T)(DataTable, IEnumerable(Of (Field As String, Column As String)), Boolean)
- uid: Open.Database.Extensions.CoreExtensions.To``1(System.Data.DataTable,System.ValueTuple{System.String,System.String}[])
  name: To<T>(DataTable, (String Field, String Column)[])
  href: api/Open.Database.Extensions.CoreExtensions.html#Open_Database_Extensions_CoreExtensions_To__1_System_Data_DataTable_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.CoreExtensions.To``1(System.Data.DataTable,System.ValueTuple{System.String,System.String}[])
  name.vb: To(Of T)(DataTable, (Field As String, Column As String)())
  fullName: Open.Database.Extensions.CoreExtensions.To<T>(System.Data.DataTable, System.ValueTuple<System.String, System.String>[])
  fullName.vb: Open.Database.Extensions.CoreExtensions.To(Of T)(System.Data.DataTable, System.ValueTuple(Of System.String, System.String)())
  nameWithType: CoreExtensions.To<T>(DataTable, (String Field, String Column)[])
  nameWithType.vb: CoreExtensions.To(Of T)(DataTable, (Field As String, Column As String)())
- uid: Open.Database.Extensions.DataReaderExtensions
  name: DataReaderExtensions
  href: api/Open.Database.Extensions.DataReaderExtensions.html
  commentId: T:Open.Database.Extensions.DataReaderExtensions
  fullName: Open.Database.Extensions.DataReaderExtensions
  nameWithType: DataReaderExtensions
- uid: Open.Database.Extensions.DataReaderExtensions.AsEnumerable(System.Data.IDataReader)
  name: AsEnumerable(IDataReader)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_AsEnumerable_System_Data_IDataReader_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.AsEnumerable(System.Data.IDataReader)
  fullName: Open.Database.Extensions.DataReaderExtensions.AsEnumerable(System.Data.IDataReader)
  nameWithType: DataReaderExtensions.AsEnumerable(IDataReader)
- uid: Open.Database.Extensions.DataReaderExtensions.AsEnumerable(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Int32})
  name: AsEnumerable(IDataReader, IEnumerable<Int32>)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_AsEnumerable_System_Data_IDataReader_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.DataReaderExtensions.AsEnumerable(System.Data.IDataReader,System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: AsEnumerable(IDataReader, IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.DataReaderExtensions.AsEnumerable(System.Data.IDataReader, System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.AsEnumerable(System.Data.IDataReader, System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: DataReaderExtensions.AsEnumerable(IDataReader, IEnumerable<Int32>)
  nameWithType.vb: DataReaderExtensions.AsEnumerable(IDataReader, IEnumerable(Of Int32))
- uid: Open.Database.Extensions.DataReaderExtensions.AsEnumerable(System.Data.IDataReader,System.Int32,System.Int32[])
  name: AsEnumerable(IDataReader, Int32, Int32[])
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_AsEnumerable_System_Data_IDataReader_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.DataReaderExtensions.AsEnumerable(System.Data.IDataReader,System.Int32,System.Int32[])
  name.vb: AsEnumerable(IDataReader, Int32, Int32())
  fullName: Open.Database.Extensions.DataReaderExtensions.AsEnumerable(System.Data.IDataReader, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.AsEnumerable(System.Data.IDataReader, System.Int32, System.Int32())
  nameWithType: DataReaderExtensions.AsEnumerable(IDataReader, Int32, Int32[])
  nameWithType.vb: DataReaderExtensions.AsEnumerable(IDataReader, Int32, Int32())
- uid: Open.Database.Extensions.DataReaderExtensions.AsEnumerable*
  name: AsEnumerable
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_AsEnumerable_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.AsEnumerable
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.AsEnumerable
  nameWithType: DataReaderExtensions.AsEnumerable
- uid: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults(System.Data.IDataReader)
  name: FirstOrdinalResults(IDataReader)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_FirstOrdinalResults_System_Data_IDataReader_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults(System.Data.IDataReader)
  fullName: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults(System.Data.IDataReader)
  nameWithType: DataReaderExtensions.FirstOrdinalResults(IDataReader)
- uid: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults*
  name: FirstOrdinalResults
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_FirstOrdinalResults_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults
  nameWithType: DataReaderExtensions.FirstOrdinalResults
- uid: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults``1(System.Data.Common.DbDataReader)
  name: FirstOrdinalResults<T0>(DbDataReader)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_FirstOrdinalResults__1_System_Data_Common_DbDataReader_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults``1(System.Data.Common.DbDataReader)
  name.vb: FirstOrdinalResults(Of T0)(DbDataReader)
  fullName: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults<T0>(System.Data.Common.DbDataReader)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults(Of T0)(System.Data.Common.DbDataReader)
  nameWithType: DataReaderExtensions.FirstOrdinalResults<T0>(DbDataReader)
  nameWithType.vb: DataReaderExtensions.FirstOrdinalResults(Of T0)(DbDataReader)
- uid: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults``1(System.Data.IDataReader)
  name: FirstOrdinalResults<T0>(IDataReader)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_FirstOrdinalResults__1_System_Data_IDataReader_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults``1(System.Data.IDataReader)
  name.vb: FirstOrdinalResults(Of T0)(IDataReader)
  fullName: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults<T0>(System.Data.IDataReader)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResults(Of T0)(System.Data.IDataReader)
  nameWithType: DataReaderExtensions.FirstOrdinalResults<T0>(IDataReader)
  nameWithType.vb: DataReaderExtensions.FirstOrdinalResults(Of T0)(IDataReader)
- uid: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResultsAsync(System.Data.Common.DbDataReader,System.Boolean,System.Threading.CancellationToken)
  name: FirstOrdinalResultsAsync(DbDataReader, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_FirstOrdinalResultsAsync_System_Data_Common_DbDataReader_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResultsAsync(System.Data.Common.DbDataReader,System.Boolean,System.Threading.CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResultsAsync(System.Data.Common.DbDataReader, System.Boolean, System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.FirstOrdinalResultsAsync(DbDataReader, Boolean, CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResultsAsync*
  name: FirstOrdinalResultsAsync
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_FirstOrdinalResultsAsync_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResultsAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResultsAsync
  nameWithType: DataReaderExtensions.FirstOrdinalResultsAsync
- uid: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResultsAsync``1(System.Data.Common.DbDataReader,System.Boolean,System.Threading.CancellationToken)
  name: FirstOrdinalResultsAsync<T0>(DbDataReader, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_FirstOrdinalResultsAsync__1_System_Data_Common_DbDataReader_System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResultsAsync``1(System.Data.Common.DbDataReader,System.Boolean,System.Threading.CancellationToken)
  name.vb: FirstOrdinalResultsAsync(Of T0)(DbDataReader, Boolean, CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResultsAsync<T0>(System.Data.Common.DbDataReader, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.FirstOrdinalResultsAsync(Of T0)(System.Data.Common.DbDataReader, System.Boolean, System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.FirstOrdinalResultsAsync<T0>(DbDataReader, Boolean, CancellationToken)
  nameWithType.vb: DataReaderExtensions.FirstOrdinalResultsAsync(Of T0)(DbDataReader, Boolean, CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.ForEach(System.Data.IDataReader,System.Action{System.Data.IDataRecord},System.Boolean,System.Threading.CancellationToken)
  name: ForEach(IDataReader, Action<IDataRecord>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ForEach_System_Data_IDataReader_System_Action_System_Data_IDataRecord__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ForEach(System.Data.IDataReader,System.Action{System.Data.IDataRecord},System.Boolean,System.Threading.CancellationToken)
  name.vb: ForEach(IDataReader, Action(Of IDataRecord), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.ForEach(System.Data.IDataReader, System.Action<System.Data.IDataRecord>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.ForEach(System.Data.IDataReader, System.Action(Of System.Data.IDataRecord), System.Boolean, System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.ForEach(IDataReader, Action<IDataRecord>, Boolean, CancellationToken)
  nameWithType.vb: DataReaderExtensions.ForEach(IDataReader, Action(Of IDataRecord), Boolean, CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.ForEach(System.Data.IDataReader,System.Action{System.Data.IDataRecord},System.Threading.CancellationToken)
  name: ForEach(IDataReader, Action<IDataRecord>, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ForEach_System_Data_IDataReader_System_Action_System_Data_IDataRecord__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ForEach(System.Data.IDataReader,System.Action{System.Data.IDataRecord},System.Threading.CancellationToken)
  name.vb: ForEach(IDataReader, Action(Of IDataRecord), CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.ForEach(System.Data.IDataReader, System.Action<System.Data.IDataRecord>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.ForEach(System.Data.IDataReader, System.Action(Of System.Data.IDataRecord), System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.ForEach(IDataReader, Action<IDataRecord>, CancellationToken)
  nameWithType.vb: DataReaderExtensions.ForEach(IDataReader, Action(Of IDataRecord), CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.ForEach*
  name: ForEach
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ForEach_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.ForEach
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.ForEach
  nameWithType: DataReaderExtensions.ForEach
- uid: Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader,System.Action{System.Data.IDataRecord},System.Boolean,System.Threading.CancellationToken)
  name: ForEachAsync(DbDataReader, Action<IDataRecord>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ForEachAsync_System_Data_Common_DbDataReader_System_Action_System_Data_IDataRecord__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader,System.Action{System.Data.IDataRecord},System.Boolean,System.Threading.CancellationToken)
  name.vb: ForEachAsync(DbDataReader, Action(Of IDataRecord), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader, System.Action<System.Data.IDataRecord>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader, System.Action(Of System.Data.IDataRecord), System.Boolean, System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.ForEachAsync(DbDataReader, Action<IDataRecord>, Boolean, CancellationToken)
  nameWithType.vb: DataReaderExtensions.ForEachAsync(DbDataReader, Action(Of IDataRecord), Boolean, CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask},System.Boolean,System.Threading.CancellationToken)
  name: ForEachAsync(DbDataReader, Func<IDataRecord, ValueTask>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ForEachAsync_System_Data_Common_DbDataReader_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask},System.Boolean,System.Threading.CancellationToken)
  name.vb: ForEachAsync(DbDataReader, Func(Of IDataRecord, ValueTask), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader, System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask), System.Boolean, System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.ForEachAsync(DbDataReader, Func<IDataRecord, ValueTask>, Boolean, CancellationToken)
  nameWithType.vb: DataReaderExtensions.ForEachAsync(DbDataReader, Func(Of IDataRecord, ValueTask), Boolean, CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name: ForEachAsync(DbDataReader, Func<IDataRecord, ValueTask>, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ForEachAsync_System_Data_Common_DbDataReader_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name.vb: ForEachAsync(DbDataReader, Func(Of IDataRecord, ValueTask), CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader, System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.ForEachAsync(System.Data.Common.DbDataReader, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask), System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.ForEachAsync(DbDataReader, Func<IDataRecord, ValueTask>, CancellationToken)
  nameWithType.vb: DataReaderExtensions.ForEachAsync(DbDataReader, Func(Of IDataRecord, ValueTask), CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.ForEachAsync*
  name: ForEachAsync
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ForEachAsync_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.ForEachAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.ForEachAsync
  nameWithType: DataReaderExtensions.ForEachAsync
- uid: Open.Database.Extensions.DataReaderExtensions.IterateWhile(System.Data.IDataReader,System.Func{System.Data.IDataRecord,System.Boolean},System.Boolean,System.Threading.CancellationToken)
  name: IterateWhile(IDataReader, Func<IDataRecord, Boolean>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_IterateWhile_System_Data_IDataReader_System_Func_System_Data_IDataRecord_System_Boolean__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.IterateWhile(System.Data.IDataReader,System.Func{System.Data.IDataRecord,System.Boolean},System.Boolean,System.Threading.CancellationToken)
  name.vb: IterateWhile(IDataReader, Func(Of IDataRecord, Boolean), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.IterateWhile(System.Data.IDataReader, System.Func<System.Data.IDataRecord, System.Boolean>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.IterateWhile(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, System.Boolean), System.Boolean, System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.IterateWhile(IDataReader, Func<IDataRecord, Boolean>, Boolean, CancellationToken)
  nameWithType.vb: DataReaderExtensions.IterateWhile(IDataReader, Func(Of IDataRecord, Boolean), Boolean, CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.IterateWhile(System.Data.IDataReader,System.Func{System.Data.IDataRecord,System.Boolean},System.Threading.CancellationToken)
  name: IterateWhile(IDataReader, Func<IDataRecord, Boolean>, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_IterateWhile_System_Data_IDataReader_System_Func_System_Data_IDataRecord_System_Boolean__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.IterateWhile(System.Data.IDataReader,System.Func{System.Data.IDataRecord,System.Boolean},System.Threading.CancellationToken)
  name.vb: IterateWhile(IDataReader, Func(Of IDataRecord, Boolean), CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.IterateWhile(System.Data.IDataReader, System.Func<System.Data.IDataRecord, System.Boolean>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.IterateWhile(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, System.Boolean), System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.IterateWhile(IDataReader, Func<IDataRecord, Boolean>, CancellationToken)
  nameWithType.vb: DataReaderExtensions.IterateWhile(IDataReader, Func(Of IDataRecord, Boolean), CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.IterateWhile*
  name: IterateWhile
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_IterateWhile_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.IterateWhile
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.IterateWhile
  nameWithType: DataReaderExtensions.IterateWhile
- uid: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Boolean},System.Boolean,System.Threading.CancellationToken)
  name: IterateWhileAsync(DbDataReader, Func<IDataRecord, Boolean>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_IterateWhileAsync_System_Data_Common_DbDataReader_System_Func_System_Data_IDataRecord_System_Boolean__System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Boolean},System.Boolean,System.Threading.CancellationToken)
  name.vb: IterateWhileAsync(DbDataReader, Func(Of IDataRecord, Boolean), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.Common.DbDataReader, System.Func<System.Data.IDataRecord, System.Boolean>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.Common.DbDataReader, System.Func(Of System.Data.IDataRecord, System.Boolean), System.Boolean, System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.IterateWhileAsync(DbDataReader, Func<IDataRecord, Boolean>, Boolean, CancellationToken)
  nameWithType.vb: DataReaderExtensions.IterateWhileAsync(DbDataReader, Func(Of IDataRecord, Boolean), Boolean, CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Boolean},System.Threading.CancellationToken)
  name: IterateWhileAsync(DbDataReader, Func<IDataRecord, Boolean>, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_IterateWhileAsync_System_Data_Common_DbDataReader_System_Func_System_Data_IDataRecord_System_Boolean__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Boolean},System.Threading.CancellationToken)
  name.vb: IterateWhileAsync(DbDataReader, Func(Of IDataRecord, Boolean), CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.Common.DbDataReader, System.Func<System.Data.IDataRecord, System.Boolean>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.Common.DbDataReader, System.Func(Of System.Data.IDataRecord, System.Boolean), System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.IterateWhileAsync(DbDataReader, Func<IDataRecord, Boolean>, CancellationToken)
  nameWithType.vb: DataReaderExtensions.IterateWhileAsync(DbDataReader, Func(Of IDataRecord, Boolean), CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.IDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  name: IterateWhileAsync(IDataReader, Func<IDataRecord, ValueTask<Boolean>>, Boolean, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_IterateWhileAsync_System_Data_IDataReader_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask_System_Boolean___System_Boolean_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.IDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{System.Boolean}},System.Boolean,System.Threading.CancellationToken)
  name.vb: IterateWhileAsync(IDataReader, Func(Of IDataRecord, ValueTask(Of Boolean)), Boolean, CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.IDataReader, System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask<System.Boolean>>, System.Boolean, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask(Of System.Boolean)), System.Boolean, System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.IterateWhileAsync(IDataReader, Func<IDataRecord, ValueTask<Boolean>>, Boolean, CancellationToken)
  nameWithType.vb: DataReaderExtensions.IterateWhileAsync(IDataReader, Func(Of IDataRecord, ValueTask(Of Boolean)), Boolean, CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.IDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{System.Boolean}},System.Threading.CancellationToken)
  name: IterateWhileAsync(IDataReader, Func<IDataRecord, ValueTask<Boolean>>, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_IterateWhileAsync_System_Data_IDataReader_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask_System_Boolean___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.IDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{System.Boolean}},System.Threading.CancellationToken)
  name.vb: IterateWhileAsync(IDataReader, Func(Of IDataRecord, ValueTask(Of Boolean)), CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.IDataReader, System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask<System.Boolean>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask(Of System.Boolean)), System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.IterateWhileAsync(IDataReader, Func<IDataRecord, ValueTask<Boolean>>, CancellationToken)
  nameWithType.vb: DataReaderExtensions.IterateWhileAsync(IDataReader, Func(Of IDataRecord, ValueTask(Of Boolean)), CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync*
  name: IterateWhileAsync
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_IterateWhileAsync_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.IterateWhileAsync
  nameWithType: DataReaderExtensions.IterateWhileAsync
- uid: Open.Database.Extensions.DataReaderExtensions.Select*
  name: Select
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_Select_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.Select
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.Select
  nameWithType: DataReaderExtensions.Select
- uid: Open.Database.Extensions.DataReaderExtensions.Select``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name: Select<T>(IDataReader, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_Select__1_System_Data_IDataReader_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.DataReaderExtensions.Select``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name.vb: Select(Of T)(IDataReader, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.DataReaderExtensions.Select<T>(System.Data.IDataReader, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.Select(Of T)(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: DataReaderExtensions.Select<T>(IDataReader, Func<IDataRecord, T>)
  nameWithType.vb: DataReaderExtensions.Select(Of T)(IDataReader, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.DataReaderExtensions.Select``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0},System.Threading.CancellationToken,System.Boolean)
  name: Select<T>(IDataReader, Func<IDataRecord, T>, CancellationToken, Boolean)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_Select__1_System_Data_IDataReader_System_Func_System_Data_IDataRecord___0__System_Threading_CancellationToken_System_Boolean_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.Select``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0},System.Threading.CancellationToken,System.Boolean)
  name.vb: Select(Of T)(IDataReader, Func(Of IDataRecord, T), CancellationToken, Boolean)
  fullName: Open.Database.Extensions.DataReaderExtensions.Select<T>(System.Data.IDataReader, System.Func<System.Data.IDataRecord, T>, System.Threading.CancellationToken, System.Boolean)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.Select(Of T)(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, T), System.Threading.CancellationToken, System.Boolean)
  nameWithType: DataReaderExtensions.Select<T>(IDataReader, Func<IDataRecord, T>, CancellationToken, Boolean)
  nameWithType.vb: DataReaderExtensions.Select(Of T)(IDataReader, Func(Of IDataRecord, T), CancellationToken, Boolean)
- uid: Open.Database.Extensions.DataReaderExtensions.Select``1(System.Data.IDataReader,System.Threading.CancellationToken,System.Func{System.Data.IDataRecord,``0},System.Boolean)
  name: Select<T>(IDataReader, CancellationToken, Func<IDataRecord, T>, Boolean)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_Select__1_System_Data_IDataReader_System_Threading_CancellationToken_System_Func_System_Data_IDataRecord___0__System_Boolean_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.Select``1(System.Data.IDataReader,System.Threading.CancellationToken,System.Func{System.Data.IDataRecord,``0},System.Boolean)
  name.vb: Select(Of T)(IDataReader, CancellationToken, Func(Of IDataRecord, T), Boolean)
  fullName: Open.Database.Extensions.DataReaderExtensions.Select<T>(System.Data.IDataReader, System.Threading.CancellationToken, System.Func<System.Data.IDataRecord, T>, System.Boolean)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.Select(Of T)(System.Data.IDataReader, System.Threading.CancellationToken, System.Func(Of System.Data.IDataRecord, T), System.Boolean)
  nameWithType: DataReaderExtensions.Select<T>(IDataReader, CancellationToken, Func<IDataRecord, T>, Boolean)
  nameWithType.vb: DataReaderExtensions.Select(Of T)(IDataReader, CancellationToken, Func(Of IDataRecord, T), Boolean)
- uid: Open.Database.Extensions.DataReaderExtensions.ToArray*
  name: ToArray
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToArray_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.ToArray
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.ToArray
  nameWithType: DataReaderExtensions.ToArray
- uid: Open.Database.Extensions.DataReaderExtensions.ToArray``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name: ToArray<T>(IDataReader, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToArray__1_System_Data_IDataReader_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ToArray``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name.vb: ToArray(Of T)(IDataReader, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.DataReaderExtensions.ToArray<T>(System.Data.IDataReader, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.ToArray(Of T)(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: DataReaderExtensions.ToArray<T>(IDataReader, Func<IDataRecord, T>)
  nameWithType.vb: DataReaderExtensions.ToArray(Of T)(IDataReader, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.DataReaderExtensions.ToDataTable(System.Data.IDataReader)
  name: ToDataTable(IDataReader)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToDataTable_System_Data_IDataReader_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ToDataTable(System.Data.IDataReader)
  fullName: Open.Database.Extensions.DataReaderExtensions.ToDataTable(System.Data.IDataReader)
  nameWithType: DataReaderExtensions.ToDataTable(IDataReader)
- uid: Open.Database.Extensions.DataReaderExtensions.ToDataTable*
  name: ToDataTable
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToDataTable_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.ToDataTable
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.ToDataTable
  nameWithType: DataReaderExtensions.ToDataTable
- uid: Open.Database.Extensions.DataReaderExtensions.ToDataTables(System.Data.IDataReader)
  name: ToDataTables(IDataReader)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToDataTables_System_Data_IDataReader_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ToDataTables(System.Data.IDataReader)
  fullName: Open.Database.Extensions.DataReaderExtensions.ToDataTables(System.Data.IDataReader)
  nameWithType: DataReaderExtensions.ToDataTables(IDataReader)
- uid: Open.Database.Extensions.DataReaderExtensions.ToDataTables*
  name: ToDataTables
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToDataTables_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.ToDataTables
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.ToDataTables
  nameWithType: DataReaderExtensions.ToDataTables
- uid: Open.Database.Extensions.DataReaderExtensions.ToImmutableArray*
  name: ToImmutableArray
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToImmutableArray_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.ToImmutableArray
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.ToImmutableArray
  nameWithType: DataReaderExtensions.ToImmutableArray
- uid: Open.Database.Extensions.DataReaderExtensions.ToImmutableArray``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name: ToImmutableArray<T>(IDataReader, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToImmutableArray__1_System_Data_IDataReader_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ToImmutableArray``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0})
  name.vb: ToImmutableArray(Of T)(IDataReader, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.DataReaderExtensions.ToImmutableArray<T>(System.Data.IDataReader, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.ToImmutableArray(Of T)(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: DataReaderExtensions.ToImmutableArray<T>(IDataReader, Func<IDataRecord, T>)
  nameWithType.vb: DataReaderExtensions.ToImmutableArray(Of T)(IDataReader, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.DataReaderExtensions.ToList*
  name: ToList
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToList_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.ToList
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.ToList
  nameWithType: DataReaderExtensions.ToList
- uid: Open.Database.Extensions.DataReaderExtensions.ToList``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0},System.Threading.CancellationToken)
  name: ToList<T>(IDataReader, Func<IDataRecord, T>, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToList__1_System_Data_IDataReader_System_Func_System_Data_IDataRecord___0__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ToList``1(System.Data.IDataReader,System.Func{System.Data.IDataRecord,``0},System.Threading.CancellationToken)
  name.vb: ToList(Of T)(IDataReader, Func(Of IDataRecord, T), CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.ToList<T>(System.Data.IDataReader, System.Func<System.Data.IDataRecord, T>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.ToList(Of T)(System.Data.IDataReader, System.Func(Of System.Data.IDataRecord, T), System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.ToList<T>(IDataReader, Func<IDataRecord, T>, CancellationToken)
  nameWithType.vb: DataReaderExtensions.ToList(Of T)(IDataReader, Func(Of IDataRecord, T), CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.ToListAsync*
  name: ToListAsync
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToListAsync_
  commentId: Overload:Open.Database.Extensions.DataReaderExtensions.ToListAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.DataReaderExtensions.ToListAsync
  nameWithType: DataReaderExtensions.ToListAsync
- uid: Open.Database.Extensions.DataReaderExtensions.ToListAsync``1(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,``0},System.Threading.CancellationToken)
  name: ToListAsync<T>(DbDataReader, Func<IDataRecord, T>, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToListAsync__1_System_Data_Common_DbDataReader_System_Func_System_Data_IDataRecord___0__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ToListAsync``1(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,``0},System.Threading.CancellationToken)
  name.vb: ToListAsync(Of T)(DbDataReader, Func(Of IDataRecord, T), CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.ToListAsync<T>(System.Data.Common.DbDataReader, System.Func<System.Data.IDataRecord, T>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.ToListAsync(Of T)(System.Data.Common.DbDataReader, System.Func(Of System.Data.IDataRecord, T), System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.ToListAsync<T>(DbDataReader, Func<IDataRecord, T>, CancellationToken)
  nameWithType.vb: DataReaderExtensions.ToListAsync(Of T)(DbDataReader, Func(Of IDataRecord, T), CancellationToken)
- uid: Open.Database.Extensions.DataReaderExtensions.ToListAsync``1(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{``0}},System.Threading.CancellationToken)
  name: ToListAsync<T>(DbDataReader, Func<IDataRecord, ValueTask<T>>, CancellationToken)
  href: api/Open.Database.Extensions.DataReaderExtensions.html#Open_Database_Extensions_DataReaderExtensions_ToListAsync__1_System_Data_Common_DbDataReader_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask___0___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.DataReaderExtensions.ToListAsync``1(System.Data.Common.DbDataReader,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{``0}},System.Threading.CancellationToken)
  name.vb: ToListAsync(Of T)(DbDataReader, Func(Of IDataRecord, ValueTask(Of T)), CancellationToken)
  fullName: Open.Database.Extensions.DataReaderExtensions.ToListAsync<T>(System.Data.Common.DbDataReader, System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask<T>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.DataReaderExtensions.ToListAsync(Of T)(System.Data.Common.DbDataReader, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask(Of T)), System.Threading.CancellationToken)
  nameWithType: DataReaderExtensions.ToListAsync<T>(DbDataReader, Func<IDataRecord, ValueTask<T>>, CancellationToken)
  nameWithType.vb: DataReaderExtensions.ToListAsync(Of T)(DbDataReader, Func(Of IDataRecord, ValueTask(Of T)), CancellationToken)
- uid: Open.Database.Extensions.DataRecordExtensions
  name: DataRecordExtensions
  href: api/Open.Database.Extensions.DataRecordExtensions.html
  commentId: T:Open.Database.Extensions.DataRecordExtensions
  fullName: Open.Database.Extensions.DataRecordExtensions
  nameWithType: DataRecordExtensions
- uid: Open.Database.Extensions.DataRecordExtensions.ColumnNames(System.Data.IDataRecord)
  name: ColumnNames(IDataRecord)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_ColumnNames_System_Data_IDataRecord_
  commentId: M:Open.Database.Extensions.DataRecordExtensions.ColumnNames(System.Data.IDataRecord)
  fullName: Open.Database.Extensions.DataRecordExtensions.ColumnNames(System.Data.IDataRecord)
  nameWithType: DataRecordExtensions.ColumnNames(IDataRecord)
- uid: Open.Database.Extensions.DataRecordExtensions.ColumnNames*
  name: ColumnNames
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_ColumnNames_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.ColumnNames
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.ColumnNames
  nameWithType: DataRecordExtensions.ColumnNames
- uid: Open.Database.Extensions.DataRecordExtensions.DataTypeNames(System.Data.IDataRecord)
  name: DataTypeNames(IDataRecord)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_DataTypeNames_System_Data_IDataRecord_
  commentId: M:Open.Database.Extensions.DataRecordExtensions.DataTypeNames(System.Data.IDataRecord)
  fullName: Open.Database.Extensions.DataRecordExtensions.DataTypeNames(System.Data.IDataRecord)
  nameWithType: DataRecordExtensions.DataTypeNames(IDataRecord)
- uid: Open.Database.Extensions.DataRecordExtensions.DataTypeNames*
  name: DataTypeNames
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_DataTypeNames_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.DataTypeNames
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.DataTypeNames
  nameWithType: DataRecordExtensions.DataTypeNames
- uid: Open.Database.Extensions.DataRecordExtensions.EnumerateValues(System.Data.IDataRecord)
  name: EnumerateValues(IDataRecord)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_EnumerateValues_System_Data_IDataRecord_
  commentId: M:Open.Database.Extensions.DataRecordExtensions.EnumerateValues(System.Data.IDataRecord)
  fullName: Open.Database.Extensions.DataRecordExtensions.EnumerateValues(System.Data.IDataRecord)
  nameWithType: DataRecordExtensions.EnumerateValues(IDataRecord)
- uid: Open.Database.Extensions.DataRecordExtensions.EnumerateValues*
  name: EnumerateValues
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_EnumerateValues_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.EnumerateValues
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.EnumerateValues
  nameWithType: DataRecordExtensions.EnumerateValues
- uid: Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.Int32})
  name: EnumerateValuesFromOrdinals(IDataRecord, IEnumerable<Int32>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_EnumerateValuesFromOrdinals_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: EnumerateValuesFromOrdinals(IDataRecord, IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: DataRecordExtensions.EnumerateValuesFromOrdinals(IDataRecord, IEnumerable<Int32>)
  nameWithType.vb: DataRecordExtensions.EnumerateValuesFromOrdinals(IDataRecord, IEnumerable(Of Int32))
- uid: Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord,System.Collections.Generic.IList{System.Int32})
  name: EnumerateValuesFromOrdinals(IDataRecord, IList<Int32>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_EnumerateValuesFromOrdinals_System_Data_IDataRecord_System_Collections_Generic_IList_System_Int32__
  commentId: M:Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord,System.Collections.Generic.IList{System.Int32})
  name.vb: EnumerateValuesFromOrdinals(IDataRecord, IList(Of Int32))
  fullName: Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord, System.Collections.Generic.IList<System.Int32>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord, System.Collections.Generic.IList(Of System.Int32))
  nameWithType: DataRecordExtensions.EnumerateValuesFromOrdinals(IDataRecord, IList<Int32>)
  nameWithType.vb: DataRecordExtensions.EnumerateValuesFromOrdinals(IDataRecord, IList(Of Int32))
- uid: Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord,System.Int32,System.Int32[])
  name: EnumerateValuesFromOrdinals(IDataRecord, Int32, Int32[])
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_EnumerateValuesFromOrdinals_System_Data_IDataRecord_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord,System.Int32,System.Int32[])
  name.vb: EnumerateValuesFromOrdinals(IDataRecord, Int32, Int32())
  fullName: Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals(System.Data.IDataRecord, System.Int32, System.Int32())
  nameWithType: DataRecordExtensions.EnumerateValuesFromOrdinals(IDataRecord, Int32, Int32[])
  nameWithType.vb: DataRecordExtensions.EnumerateValuesFromOrdinals(IDataRecord, Int32, Int32())
- uid: Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals*
  name: EnumerateValuesFromOrdinals
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_EnumerateValuesFromOrdinals_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.EnumerateValuesFromOrdinals
  nameWithType: DataRecordExtensions.EnumerateValuesFromOrdinals
- uid: Open.Database.Extensions.DataRecordExtensions.GetDataTypeNames(System.Data.IDataRecord)
  name: GetDataTypeNames(IDataRecord)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetDataTypeNames_System_Data_IDataRecord_
  commentId: M:Open.Database.Extensions.DataRecordExtensions.GetDataTypeNames(System.Data.IDataRecord)
  fullName: Open.Database.Extensions.DataRecordExtensions.GetDataTypeNames(System.Data.IDataRecord)
  nameWithType: DataRecordExtensions.GetDataTypeNames(IDataRecord)
- uid: Open.Database.Extensions.DataRecordExtensions.GetDataTypeNames*
  name: GetDataTypeNames
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetDataTypeNames_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.GetDataTypeNames
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.GetDataTypeNames
  nameWithType: DataRecordExtensions.GetDataTypeNames
- uid: Open.Database.Extensions.DataRecordExtensions.GetMatchingOrdinals(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name: GetMatchingOrdinals(IDataRecord, IEnumerable<String>, Boolean)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetMatchingOrdinals_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_String__System_Boolean_
  commentId: M:Open.Database.Extensions.DataRecordExtensions.GetMatchingOrdinals(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name.vb: GetMatchingOrdinals(IDataRecord, IEnumerable(Of String), Boolean)
  fullName: Open.Database.Extensions.DataRecordExtensions.GetMatchingOrdinals(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.String>, System.Boolean)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.GetMatchingOrdinals(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean)
  nameWithType: DataRecordExtensions.GetMatchingOrdinals(IDataRecord, IEnumerable<String>, Boolean)
  nameWithType.vb: DataRecordExtensions.GetMatchingOrdinals(IDataRecord, IEnumerable(Of String), Boolean)
- uid: Open.Database.Extensions.DataRecordExtensions.GetMatchingOrdinals*
  name: GetMatchingOrdinals
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetMatchingOrdinals_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.GetMatchingOrdinals
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.GetMatchingOrdinals
  nameWithType: DataRecordExtensions.GetMatchingOrdinals
- uid: Open.Database.Extensions.DataRecordExtensions.GetNames(System.Data.IDataRecord)
  name: GetNames(IDataRecord)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetNames_System_Data_IDataRecord_
  commentId: M:Open.Database.Extensions.DataRecordExtensions.GetNames(System.Data.IDataRecord)
  fullName: Open.Database.Extensions.DataRecordExtensions.GetNames(System.Data.IDataRecord)
  nameWithType: DataRecordExtensions.GetNames(IDataRecord)
- uid: Open.Database.Extensions.DataRecordExtensions.GetNames(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.Int32})
  name: GetNames(IDataRecord, IEnumerable<Int32>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetNames_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.DataRecordExtensions.GetNames(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: GetNames(IDataRecord, IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.DataRecordExtensions.GetNames(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.GetNames(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: DataRecordExtensions.GetNames(IDataRecord, IEnumerable<Int32>)
  nameWithType.vb: DataRecordExtensions.GetNames(IDataRecord, IEnumerable(Of Int32))
- uid: Open.Database.Extensions.DataRecordExtensions.GetNames*
  name: GetNames
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetNames_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.GetNames
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.GetNames
  nameWithType: DataRecordExtensions.GetNames
- uid: Open.Database.Extensions.DataRecordExtensions.GetOrdinalMapping(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name: GetOrdinalMapping(IDataRecord, IEnumerable<String>, Boolean)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetOrdinalMapping_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_String__System_Boolean_
  commentId: M:Open.Database.Extensions.DataRecordExtensions.GetOrdinalMapping(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name.vb: GetOrdinalMapping(IDataRecord, IEnumerable(Of String), Boolean)
  fullName: Open.Database.Extensions.DataRecordExtensions.GetOrdinalMapping(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.String>, System.Boolean)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.GetOrdinalMapping(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean)
  nameWithType: DataRecordExtensions.GetOrdinalMapping(IDataRecord, IEnumerable<String>, Boolean)
  nameWithType.vb: DataRecordExtensions.GetOrdinalMapping(IDataRecord, IEnumerable(Of String), Boolean)
- uid: Open.Database.Extensions.DataRecordExtensions.GetOrdinalMapping*
  name: GetOrdinalMapping
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetOrdinalMapping_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.GetOrdinalMapping
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.GetOrdinalMapping
  nameWithType: DataRecordExtensions.GetOrdinalMapping
- uid: Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals(System.Data.IDataRecord,System.Collections.Generic.IList{System.Int32})
  name: GetValuesFromOrdinals(IDataRecord, IList<Int32>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetValuesFromOrdinals_System_Data_IDataRecord_System_Collections_Generic_IList_System_Int32__
  commentId: M:Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals(System.Data.IDataRecord,System.Collections.Generic.IList{System.Int32})
  name.vb: GetValuesFromOrdinals(IDataRecord, IList(Of Int32))
  fullName: Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals(System.Data.IDataRecord, System.Collections.Generic.IList<System.Int32>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals(System.Data.IDataRecord, System.Collections.Generic.IList(Of System.Int32))
  nameWithType: DataRecordExtensions.GetValuesFromOrdinals(IDataRecord, IList<Int32>)
  nameWithType.vb: DataRecordExtensions.GetValuesFromOrdinals(IDataRecord, IList(Of Int32))
- uid: Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals(System.Data.IDataRecord,System.ReadOnlySpan{System.Int32}@,System.Span{System.Object})
  name: GetValuesFromOrdinals(IDataRecord, ReadOnlySpan<Int32>, Span<Object>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetValuesFromOrdinals_System_Data_IDataRecord_System_ReadOnlySpan_System_Int32___System_Span_System_Object__
  commentId: M:Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals(System.Data.IDataRecord,System.ReadOnlySpan{System.Int32}@,System.Span{System.Object})
  name.vb: GetValuesFromOrdinals(IDataRecord, ByRef ReadOnlySpan(Of Int32), Span(Of Object))
  fullName: Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals(System.Data.IDataRecord, System.ReadOnlySpan<System.Int32>, System.Span<System.Object>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals(System.Data.IDataRecord, ByRef System.ReadOnlySpan(Of System.Int32), System.Span(Of System.Object))
  nameWithType: DataRecordExtensions.GetValuesFromOrdinals(IDataRecord, ReadOnlySpan<Int32>, Span<Object>)
  nameWithType.vb: DataRecordExtensions.GetValuesFromOrdinals(IDataRecord, ByRef ReadOnlySpan(Of Int32), Span(Of Object))
- uid: Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals*
  name: GetValuesFromOrdinals
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetValuesFromOrdinals_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals
  nameWithType: DataRecordExtensions.GetValuesFromOrdinals
- uid: Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals``1(System.Data.IDataRecord,System.Collections.Generic.IList{System.Int32},``0)
  name: GetValuesFromOrdinals<TList>(IDataRecord, IList<Int32>, TList)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_GetValuesFromOrdinals__1_System_Data_IDataRecord_System_Collections_Generic_IList_System_Int32____0_
  commentId: M:Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals``1(System.Data.IDataRecord,System.Collections.Generic.IList{System.Int32},``0)
  name.vb: GetValuesFromOrdinals(Of TList)(IDataRecord, IList(Of Int32), TList)
  fullName: Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals<TList>(System.Data.IDataRecord, System.Collections.Generic.IList<System.Int32>, TList)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.GetValuesFromOrdinals(Of TList)(System.Data.IDataRecord, System.Collections.Generic.IList(Of System.Int32), TList)
  nameWithType: DataRecordExtensions.GetValuesFromOrdinals<TList>(IDataRecord, IList<Int32>, TList)
  nameWithType.vb: DataRecordExtensions.GetValuesFromOrdinals(Of TList)(IDataRecord, IList(Of Int32), TList)
- uid: Open.Database.Extensions.DataRecordExtensions.MatchingOrdinals(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name: MatchingOrdinals(IDataRecord, IEnumerable<String>, Boolean)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_MatchingOrdinals_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_String__System_Boolean_
  commentId: M:Open.Database.Extensions.DataRecordExtensions.MatchingOrdinals(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name.vb: MatchingOrdinals(IDataRecord, IEnumerable(Of String), Boolean)
  fullName: Open.Database.Extensions.DataRecordExtensions.MatchingOrdinals(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.String>, System.Boolean)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.MatchingOrdinals(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean)
  nameWithType: DataRecordExtensions.MatchingOrdinals(IDataRecord, IEnumerable<String>, Boolean)
  nameWithType.vb: DataRecordExtensions.MatchingOrdinals(IDataRecord, IEnumerable(Of String), Boolean)
- uid: Open.Database.Extensions.DataRecordExtensions.MatchingOrdinals*
  name: MatchingOrdinals
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_MatchingOrdinals_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.MatchingOrdinals
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.MatchingOrdinals
  nameWithType: DataRecordExtensions.MatchingOrdinals
- uid: Open.Database.Extensions.DataRecordExtensions.OrdinalMapping(System.Data.IDataRecord)
  name: OrdinalMapping(IDataRecord)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_OrdinalMapping_System_Data_IDataRecord_
  commentId: M:Open.Database.Extensions.DataRecordExtensions.OrdinalMapping(System.Data.IDataRecord)
  fullName: Open.Database.Extensions.DataRecordExtensions.OrdinalMapping(System.Data.IDataRecord)
  nameWithType: DataRecordExtensions.OrdinalMapping(IDataRecord)
- uid: Open.Database.Extensions.DataRecordExtensions.OrdinalMapping(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String})
  name: OrdinalMapping(IDataRecord, IEnumerable<String>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_OrdinalMapping_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Open.Database.Extensions.DataRecordExtensions.OrdinalMapping(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String})
  name.vb: OrdinalMapping(IDataRecord, IEnumerable(Of String))
  fullName: Open.Database.Extensions.DataRecordExtensions.OrdinalMapping(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.OrdinalMapping(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: DataRecordExtensions.OrdinalMapping(IDataRecord, IEnumerable<String>)
  nameWithType.vb: DataRecordExtensions.OrdinalMapping(IDataRecord, IEnumerable(Of String))
- uid: Open.Database.Extensions.DataRecordExtensions.OrdinalMapping(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name: OrdinalMapping(IDataRecord, IEnumerable<String>, Boolean)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_OrdinalMapping_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_String__System_Boolean_
  commentId: M:Open.Database.Extensions.DataRecordExtensions.OrdinalMapping(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name.vb: OrdinalMapping(IDataRecord, IEnumerable(Of String), Boolean)
  fullName: Open.Database.Extensions.DataRecordExtensions.OrdinalMapping(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.String>, System.Boolean)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.OrdinalMapping(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.String), System.Boolean)
  nameWithType: DataRecordExtensions.OrdinalMapping(IDataRecord, IEnumerable<String>, Boolean)
  nameWithType.vb: DataRecordExtensions.OrdinalMapping(IDataRecord, IEnumerable(Of String), Boolean)
- uid: Open.Database.Extensions.DataRecordExtensions.OrdinalMapping*
  name: OrdinalMapping
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_OrdinalMapping_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.OrdinalMapping
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.OrdinalMapping
  nameWithType: DataRecordExtensions.OrdinalMapping
- uid: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int32,System.String}})
  name: ToDictionary(IDataRecord, IEnumerable<KeyValuePair<Int32, String>>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_ToDictionary_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_Int32_System_String___
  commentId: M:Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int32,System.String}})
  name.vb: ToDictionary(IDataRecord, IEnumerable(Of KeyValuePair(Of Int32, String)))
  fullName: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Int32, System.String>>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Int32, System.String)))
  nameWithType: DataRecordExtensions.ToDictionary(IDataRecord, IEnumerable<KeyValuePair<Int32, String>>)
  nameWithType.vb: DataRecordExtensions.ToDictionary(IDataRecord, IEnumerable(Of KeyValuePair(Of Int32, String)))
- uid: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String})
  name: ToDictionary(IDataRecord, IEnumerable<String>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_ToDictionary_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.String})
  name.vb: ToDictionary(IDataRecord, IEnumerable(Of String))
  fullName: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: DataRecordExtensions.ToDictionary(IDataRecord, IEnumerable<String>)
  nameWithType.vb: DataRecordExtensions.ToDictionary(IDataRecord, IEnumerable(Of String))
- uid: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Int32}})
  name: ToDictionary(IDataRecord, IEnumerable<(String Name, Int32 Ordinal)>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_ToDictionary_System_Data_IDataRecord_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_Int32___
  commentId: M:Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.Int32}})
  name.vb: ToDictionary(IDataRecord, IEnumerable(Of (Name As String, Ordinal As Int32)))
  fullName: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.Int32>>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.Int32)))
  nameWithType: DataRecordExtensions.ToDictionary(IDataRecord, IEnumerable<(String Name, Int32 Ordinal)>)
  nameWithType.vb: DataRecordExtensions.ToDictionary(IDataRecord, IEnumerable(Of (Name As String, Ordinal As Int32)))
- uid: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IList{System.String})
  name: ToDictionary(IDataRecord, IList<String>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_ToDictionary_System_Data_IDataRecord_System_Collections_Generic_IList_System_String__
  commentId: M:Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IList{System.String})
  name.vb: ToDictionary(IDataRecord, IList(Of String))
  fullName: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IList<System.String>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IList(Of System.String))
  nameWithType: DataRecordExtensions.ToDictionary(IDataRecord, IList<String>)
  nameWithType.vb: DataRecordExtensions.ToDictionary(IDataRecord, IList(Of String))
- uid: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IList{System.ValueTuple{System.String,System.Int32}})
  name: ToDictionary(IDataRecord, IList<(String Name, Int32 Ordinal)>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_ToDictionary_System_Data_IDataRecord_System_Collections_Generic_IList_System_ValueTuple_System_String_System_Int32___
  commentId: M:Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.Collections.Generic.IList{System.ValueTuple{System.String,System.Int32}})
  name.vb: ToDictionary(IDataRecord, IList(Of (Name As String, Ordinal As Int32)))
  fullName: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IList<System.ValueTuple<System.String, System.Int32>>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.Collections.Generic.IList(Of System.ValueTuple(Of System.String, System.Int32)))
  nameWithType: DataRecordExtensions.ToDictionary(IDataRecord, IList<(String Name, Int32 Ordinal)>)
  nameWithType.vb: DataRecordExtensions.ToDictionary(IDataRecord, IList(Of (Name As String, Ordinal As Int32)))
- uid: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.ReadOnlySpan{System.String}@)
  name: ToDictionary(IDataRecord, ReadOnlySpan<String>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_ToDictionary_System_Data_IDataRecord_System_ReadOnlySpan_System_String___
  commentId: M:Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.ReadOnlySpan{System.String}@)
  name.vb: ToDictionary(IDataRecord, ByRef ReadOnlySpan(Of String))
  fullName: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.ReadOnlySpan<System.String>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, ByRef System.ReadOnlySpan(Of System.String))
  nameWithType: DataRecordExtensions.ToDictionary(IDataRecord, ReadOnlySpan<String>)
  nameWithType.vb: DataRecordExtensions.ToDictionary(IDataRecord, ByRef ReadOnlySpan(Of String))
- uid: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.ReadOnlySpan{System.ValueTuple{System.String,System.Int32}}@)
  name: ToDictionary(IDataRecord, ReadOnlySpan<(String Name, Int32 Ordinal)>)
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_ToDictionary_System_Data_IDataRecord_System_ReadOnlySpan_System_ValueTuple_System_String_System_Int32____
  commentId: M:Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord,System.ReadOnlySpan{System.ValueTuple{System.String,System.Int32}}@)
  name.vb: ToDictionary(IDataRecord, ByRef ReadOnlySpan(Of (Name As String, Ordinal As Int32)))
  fullName: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, System.ReadOnlySpan<System.ValueTuple<System.String, System.Int32>>)
  fullName.vb: Open.Database.Extensions.DataRecordExtensions.ToDictionary(System.Data.IDataRecord, ByRef System.ReadOnlySpan(Of System.ValueTuple(Of System.String, System.Int32)))
  nameWithType: DataRecordExtensions.ToDictionary(IDataRecord, ReadOnlySpan<(String Name, Int32 Ordinal)>)
  nameWithType.vb: DataRecordExtensions.ToDictionary(IDataRecord, ByRef ReadOnlySpan(Of (Name As String, Ordinal As Int32)))
- uid: Open.Database.Extensions.DataRecordExtensions.ToDictionary*
  name: ToDictionary
  href: api/Open.Database.Extensions.DataRecordExtensions.html#Open_Database_Extensions_DataRecordExtensions_ToDictionary_
  commentId: Overload:Open.Database.Extensions.DataRecordExtensions.ToDictionary
  isSpec: "True"
  fullName: Open.Database.Extensions.DataRecordExtensions.ToDictionary
  nameWithType: DataRecordExtensions.ToDictionary
- uid: Open.Database.Extensions.DbConnectionFactory
  name: DbConnectionFactory
  href: api/Open.Database.Extensions.DbConnectionFactory.html
  commentId: T:Open.Database.Extensions.DbConnectionFactory
  fullName: Open.Database.Extensions.DbConnectionFactory
  nameWithType: DbConnectionFactory
- uid: Open.Database.Extensions.DbConnectionFactory.#ctor(System.Func{System.Data.IDbConnection})
  name: DbConnectionFactory(Func<IDbConnection>)
  href: api/Open.Database.Extensions.DbConnectionFactory.html#Open_Database_Extensions_DbConnectionFactory__ctor_System_Func_System_Data_IDbConnection__
  commentId: M:Open.Database.Extensions.DbConnectionFactory.#ctor(System.Func{System.Data.IDbConnection})
  name.vb: DbConnectionFactory(Func(Of IDbConnection))
  fullName: Open.Database.Extensions.DbConnectionFactory.DbConnectionFactory(System.Func<System.Data.IDbConnection>)
  fullName.vb: Open.Database.Extensions.DbConnectionFactory.DbConnectionFactory(System.Func(Of System.Data.IDbConnection))
  nameWithType: DbConnectionFactory.DbConnectionFactory(Func<IDbConnection>)
  nameWithType.vb: DbConnectionFactory.DbConnectionFactory(Func(Of IDbConnection))
- uid: Open.Database.Extensions.DbConnectionFactory.#ctor*
  name: DbConnectionFactory
  href: api/Open.Database.Extensions.DbConnectionFactory.html#Open_Database_Extensions_DbConnectionFactory__ctor_
  commentId: Overload:Open.Database.Extensions.DbConnectionFactory.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.DbConnectionFactory.DbConnectionFactory
  nameWithType: DbConnectionFactory.DbConnectionFactory
- uid: Open.Database.Extensions.DbConnectionFactory.Create
  name: Create()
  href: api/Open.Database.Extensions.DbConnectionFactory.html#Open_Database_Extensions_DbConnectionFactory_Create
  commentId: M:Open.Database.Extensions.DbConnectionFactory.Create
  fullName: Open.Database.Extensions.DbConnectionFactory.Create()
  nameWithType: DbConnectionFactory.Create()
- uid: Open.Database.Extensions.DbConnectionFactory.Create(System.Func{System.Data.IDbConnection})
  name: Create(Func<IDbConnection>)
  href: api/Open.Database.Extensions.DbConnectionFactory.html#Open_Database_Extensions_DbConnectionFactory_Create_System_Func_System_Data_IDbConnection__
  commentId: M:Open.Database.Extensions.DbConnectionFactory.Create(System.Func{System.Data.IDbConnection})
  name.vb: Create(Func(Of IDbConnection))
  fullName: Open.Database.Extensions.DbConnectionFactory.Create(System.Func<System.Data.IDbConnection>)
  fullName.vb: Open.Database.Extensions.DbConnectionFactory.Create(System.Func(Of System.Data.IDbConnection))
  nameWithType: DbConnectionFactory.Create(Func<IDbConnection>)
  nameWithType.vb: DbConnectionFactory.Create(Func(Of IDbConnection))
- uid: Open.Database.Extensions.DbConnectionFactory.Create*
  name: Create
  href: api/Open.Database.Extensions.DbConnectionFactory.html#Open_Database_Extensions_DbConnectionFactory_Create_
  commentId: Overload:Open.Database.Extensions.DbConnectionFactory.Create
  isSpec: "True"
  fullName: Open.Database.Extensions.DbConnectionFactory.Create
  nameWithType: DbConnectionFactory.Create
- uid: Open.Database.Extensions.DbConnectionFactory.Create``1(System.Func{``0})
  name: Create<TConnection>(Func<TConnection>)
  href: api/Open.Database.Extensions.DbConnectionFactory.html#Open_Database_Extensions_DbConnectionFactory_Create__1_System_Func___0__
  commentId: M:Open.Database.Extensions.DbConnectionFactory.Create``1(System.Func{``0})
  name.vb: Create(Of TConnection)(Func(Of TConnection))
  fullName: Open.Database.Extensions.DbConnectionFactory.Create<TConnection>(System.Func<TConnection>)
  fullName.vb: Open.Database.Extensions.DbConnectionFactory.Create(Of TConnection)(System.Func(Of TConnection))
  nameWithType: DbConnectionFactory.Create<TConnection>(Func<TConnection>)
  nameWithType.vb: DbConnectionFactory.Create(Of TConnection)(Func(Of TConnection))
- uid: Open.Database.Extensions.DbConnectionFactory`1
  name: DbConnectionFactory<TConnection>
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html
  commentId: T:Open.Database.Extensions.DbConnectionFactory`1
  name.vb: DbConnectionFactory(Of TConnection)
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection)
  nameWithType: DbConnectionFactory<TConnection>
  nameWithType.vb: DbConnectionFactory(Of TConnection)
- uid: Open.Database.Extensions.DbConnectionFactory`1.#ctor(System.Func{`0})
  name: DbConnectionFactory(Func<TConnection>)
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1__ctor_System_Func__0__
  commentId: M:Open.Database.Extensions.DbConnectionFactory`1.#ctor(System.Func{`0})
  name.vb: DbConnectionFactory(Func(Of TConnection))
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.DbConnectionFactory(System.Func<TConnection>)
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).DbConnectionFactory(System.Func(Of TConnection))
  nameWithType: DbConnectionFactory<TConnection>.DbConnectionFactory(Func<TConnection>)
  nameWithType.vb: DbConnectionFactory(Of TConnection).DbConnectionFactory(Func(Of TConnection))
- uid: Open.Database.Extensions.DbConnectionFactory`1.#ctor*
  name: DbConnectionFactory
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1__ctor_
  commentId: Overload:Open.Database.Extensions.DbConnectionFactory`1.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.DbConnectionFactory
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).DbConnectionFactory
  nameWithType: DbConnectionFactory<TConnection>.DbConnectionFactory
  nameWithType.vb: DbConnectionFactory(Of TConnection).DbConnectionFactory
- uid: Open.Database.Extensions.DbConnectionFactory`1.Create
  name: Create()
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1_Create
  commentId: M:Open.Database.Extensions.DbConnectionFactory`1.Create
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.Create()
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).Create()
  nameWithType: DbConnectionFactory<TConnection>.Create()
  nameWithType.vb: DbConnectionFactory(Of TConnection).Create()
- uid: Open.Database.Extensions.DbConnectionFactory`1.Create*
  name: Create
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1_Create_
  commentId: Overload:Open.Database.Extensions.DbConnectionFactory`1.Create
  isSpec: "True"
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.Create
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).Create
  nameWithType: DbConnectionFactory<TConnection>.Create
  nameWithType.vb: DbConnectionFactory(Of TConnection).Create
- uid: Open.Database.Extensions.DbConnectionFactory`1.Open#Database#Extensions#IDbConnectionFactory#Create
  name: IDbConnectionFactory.Create()
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1_Open_Database_Extensions_IDbConnectionFactory_Create
  commentId: M:Open.Database.Extensions.DbConnectionFactory`1.Open#Database#Extensions#IDbConnectionFactory#Create
  name.vb: Open.Database.Extensions.IDbConnectionFactory.Create()
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.Open.Database.Extensions.IDbConnectionFactory.Create()
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).Open.Database.Extensions.IDbConnectionFactory.Create()
  nameWithType: DbConnectionFactory<TConnection>.IDbConnectionFactory.Create()
  nameWithType.vb: DbConnectionFactory(Of TConnection).Open.Database.Extensions.IDbConnectionFactory.Create()
- uid: Open.Database.Extensions.DbConnectionFactory`1.Open#Database#Extensions#IDbConnectionFactory#Create*
  name: IDbConnectionFactory.Create
  href: api/Open.Database.Extensions.DbConnectionFactory-1.html#Open_Database_Extensions_DbConnectionFactory_1_Open_Database_Extensions_IDbConnectionFactory_Create_
  commentId: Overload:Open.Database.Extensions.DbConnectionFactory`1.Open#Database#Extensions#IDbConnectionFactory#Create
  isSpec: "True"
  name.vb: Open.Database.Extensions.IDbConnectionFactory.Create
  fullName: Open.Database.Extensions.DbConnectionFactory<TConnection>.Open.Database.Extensions.IDbConnectionFactory.Create
  fullName.vb: Open.Database.Extensions.DbConnectionFactory(Of TConnection).Open.Database.Extensions.IDbConnectionFactory.Create
  nameWithType: DbConnectionFactory<TConnection>.IDbConnectionFactory.Create
  nameWithType.vb: DbConnectionFactory(Of TConnection).Open.Database.Extensions.IDbConnectionFactory.Create
- uid: Open.Database.Extensions.DbConnectionFactoryExtensions
  name: DbConnectionFactoryExtensions
  href: api/Open.Database.Extensions.DbConnectionFactoryExtensions.html
  commentId: T:Open.Database.Extensions.DbConnectionFactoryExtensions
  fullName: Open.Database.Extensions.DbConnectionFactoryExtensions
  nameWithType: DbConnectionFactoryExtensions
- uid: Open.Database.Extensions.DbConnectionFactoryExtensions.AsGeneric(Open.Database.Extensions.IDbConnectionFactory)
  name: AsGeneric(IDbConnectionFactory)
  href: api/Open.Database.Extensions.DbConnectionFactoryExtensions.html#Open_Database_Extensions_DbConnectionFactoryExtensions_AsGeneric_Open_Database_Extensions_IDbConnectionFactory_
  commentId: M:Open.Database.Extensions.DbConnectionFactoryExtensions.AsGeneric(Open.Database.Extensions.IDbConnectionFactory)
  fullName: Open.Database.Extensions.DbConnectionFactoryExtensions.AsGeneric(Open.Database.Extensions.IDbConnectionFactory)
  nameWithType: DbConnectionFactoryExtensions.AsGeneric(IDbConnectionFactory)
- uid: Open.Database.Extensions.DbConnectionFactoryExtensions.AsGeneric*
  name: AsGeneric
  href: api/Open.Database.Extensions.DbConnectionFactoryExtensions.html#Open_Database_Extensions_DbConnectionFactoryExtensions_AsGeneric_
  commentId: Overload:Open.Database.Extensions.DbConnectionFactoryExtensions.AsGeneric
  isSpec: "True"
  fullName: Open.Database.Extensions.DbConnectionFactoryExtensions.AsGeneric
  nameWithType: DbConnectionFactoryExtensions.AsGeneric
- uid: Open.Database.Extensions.DbConnectionFactoryExtensions.AsPool(Open.Database.Extensions.IDbConnectionFactory)
  name: AsPool(IDbConnectionFactory)
  href: api/Open.Database.Extensions.DbConnectionFactoryExtensions.html#Open_Database_Extensions_DbConnectionFactoryExtensions_AsPool_Open_Database_Extensions_IDbConnectionFactory_
  commentId: M:Open.Database.Extensions.DbConnectionFactoryExtensions.AsPool(Open.Database.Extensions.IDbConnectionFactory)
  fullName: Open.Database.Extensions.DbConnectionFactoryExtensions.AsPool(Open.Database.Extensions.IDbConnectionFactory)
  nameWithType: DbConnectionFactoryExtensions.AsPool(IDbConnectionFactory)
- uid: Open.Database.Extensions.DbConnectionFactoryExtensions.AsPool*
  name: AsPool
  href: api/Open.Database.Extensions.DbConnectionFactoryExtensions.html#Open_Database_Extensions_DbConnectionFactoryExtensions_AsPool_
  commentId: Overload:Open.Database.Extensions.DbConnectionFactoryExtensions.AsPool
  isSpec: "True"
  fullName: Open.Database.Extensions.DbConnectionFactoryExtensions.AsPool
  nameWithType: DbConnectionFactoryExtensions.AsPool
- uid: Open.Database.Extensions.DbConnectionFactoryExtensions.AsPool``1(Open.Database.Extensions.IDbConnectionFactory{``0})
  name: AsPool<TConnection>(IDbConnectionFactory<TConnection>)
  href: api/Open.Database.Extensions.DbConnectionFactoryExtensions.html#Open_Database_Extensions_DbConnectionFactoryExtensions_AsPool__1_Open_Database_Extensions_IDbConnectionFactory___0__
  commentId: M:Open.Database.Extensions.DbConnectionFactoryExtensions.AsPool``1(Open.Database.Extensions.IDbConnectionFactory{``0})
  name.vb: AsPool(Of TConnection)(IDbConnectionFactory(Of TConnection))
  fullName: Open.Database.Extensions.DbConnectionFactoryExtensions.AsPool<TConnection>(Open.Database.Extensions.IDbConnectionFactory<TConnection>)
  fullName.vb: Open.Database.Extensions.DbConnectionFactoryExtensions.AsPool(Of TConnection)(Open.Database.Extensions.IDbConnectionFactory(Of TConnection))
  nameWithType: DbConnectionFactoryExtensions.AsPool<TConnection>(IDbConnectionFactory<TConnection>)
  nameWithType.vb: DbConnectionFactoryExtensions.AsPool(Of TConnection)(IDbConnectionFactory(Of TConnection))
- uid: Open.Database.Extensions.ExpressiveCommand
  name: ExpressiveCommand
  href: api/Open.Database.Extensions.ExpressiveCommand.html
  commentId: T:Open.Database.Extensions.ExpressiveCommand
  fullName: Open.Database.Extensions.ExpressiveCommand
  nameWithType: ExpressiveCommand
- uid: Open.Database.Extensions.ExpressiveCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.IDbConnection,System.Data.IDbCommand,System.Data.IDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveCommand}.Param})
  name: ExpressiveCommand(IDbConnectionFactory, CommandType, String, IEnumerable<ExpressiveCommandBase<IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommand.html#Open_Database_Extensions_ExpressiveCommand__ctor_Open_Database_Extensions_IDbConnectionFactory_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase_System_Data_IDbConnection_System_Data_IDbCommand_System_Data_IDataReader_System_Data_DbType_Open_Database_Extensions_ExpressiveCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.IDbConnection,System.Data.IDbCommand,System.Data.IDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveCommand}.Param})
  name.vb: ExpressiveCommand(IDbConnectionFactory, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveCommand.ExpressiveCommand(Open.Database.Extensions.IDbConnectionFactory, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<System.Data.IDbConnection, System.Data.IDbCommand, System.Data.IDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommand.ExpressiveCommand(Open.Database.Extensions.IDbConnectionFactory, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.IDbConnection, System.Data.IDbCommand, System.Data.IDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveCommand).Param))
  nameWithType: ExpressiveCommand.ExpressiveCommand(IDbConnectionFactory, CommandType, String, IEnumerable<ExpressiveCommandBase<IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand>.Param>)
  nameWithType.vb: ExpressiveCommand.ExpressiveCommand(IDbConnectionFactory, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand).Param))
- uid: Open.Database.Extensions.ExpressiveCommand.#ctor(Open.Database.Extensions.IDbConnectionPool,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.IDbConnection,System.Data.IDbCommand,System.Data.IDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveCommand}.Param})
  name: ExpressiveCommand(IDbConnectionPool, CommandType, String, IEnumerable<ExpressiveCommandBase<IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommand.html#Open_Database_Extensions_ExpressiveCommand__ctor_Open_Database_Extensions_IDbConnectionPool_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase_System_Data_IDbConnection_System_Data_IDbCommand_System_Data_IDataReader_System_Data_DbType_Open_Database_Extensions_ExpressiveCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommand.#ctor(Open.Database.Extensions.IDbConnectionPool,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.IDbConnection,System.Data.IDbCommand,System.Data.IDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveCommand}.Param})
  name.vb: ExpressiveCommand(IDbConnectionPool, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveCommand.ExpressiveCommand(Open.Database.Extensions.IDbConnectionPool, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<System.Data.IDbConnection, System.Data.IDbCommand, System.Data.IDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommand.ExpressiveCommand(Open.Database.Extensions.IDbConnectionPool, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.IDbConnection, System.Data.IDbCommand, System.Data.IDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveCommand).Param))
  nameWithType: ExpressiveCommand.ExpressiveCommand(IDbConnectionPool, CommandType, String, IEnumerable<ExpressiveCommandBase<IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand>.Param>)
  nameWithType.vb: ExpressiveCommand.ExpressiveCommand(IDbConnectionPool, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand).Param))
- uid: Open.Database.Extensions.ExpressiveCommand.#ctor(System.Data.IDbConnection,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.IDbConnection,System.Data.IDbCommand,System.Data.IDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveCommand}.Param})
  name: ExpressiveCommand(IDbConnection, CommandType, String, IEnumerable<ExpressiveCommandBase<IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommand.html#Open_Database_Extensions_ExpressiveCommand__ctor_System_Data_IDbConnection_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase_System_Data_IDbConnection_System_Data_IDbCommand_System_Data_IDataReader_System_Data_DbType_Open_Database_Extensions_ExpressiveCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommand.#ctor(System.Data.IDbConnection,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.IDbConnection,System.Data.IDbCommand,System.Data.IDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveCommand}.Param})
  name.vb: ExpressiveCommand(IDbConnection, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveCommand.ExpressiveCommand(System.Data.IDbConnection, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<System.Data.IDbConnection, System.Data.IDbCommand, System.Data.IDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommand.ExpressiveCommand(System.Data.IDbConnection, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.IDbConnection, System.Data.IDbCommand, System.Data.IDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveCommand).Param))
  nameWithType: ExpressiveCommand.ExpressiveCommand(IDbConnection, CommandType, String, IEnumerable<ExpressiveCommandBase<IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand>.Param>)
  nameWithType.vb: ExpressiveCommand.ExpressiveCommand(IDbConnection, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand).Param))
- uid: Open.Database.Extensions.ExpressiveCommand.#ctor(System.Data.IDbConnection,System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.IDbConnection,System.Data.IDbCommand,System.Data.IDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveCommand}.Param})
  name: ExpressiveCommand(IDbConnection, IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommand.html#Open_Database_Extensions_ExpressiveCommand__ctor_System_Data_IDbConnection_System_Data_IDbTransaction_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase_System_Data_IDbConnection_System_Data_IDbCommand_System_Data_IDataReader_System_Data_DbType_Open_Database_Extensions_ExpressiveCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommand.#ctor(System.Data.IDbConnection,System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.IDbConnection,System.Data.IDbCommand,System.Data.IDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveCommand}.Param})
  name.vb: ExpressiveCommand(IDbConnection, IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveCommand.ExpressiveCommand(System.Data.IDbConnection, System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<System.Data.IDbConnection, System.Data.IDbCommand, System.Data.IDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommand.ExpressiveCommand(System.Data.IDbConnection, System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.IDbConnection, System.Data.IDbCommand, System.Data.IDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveCommand).Param))
  nameWithType: ExpressiveCommand.ExpressiveCommand(IDbConnection, IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand>.Param>)
  nameWithType.vb: ExpressiveCommand.ExpressiveCommand(IDbConnection, IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand).Param))
- uid: Open.Database.Extensions.ExpressiveCommand.#ctor(System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.IDbConnection,System.Data.IDbCommand,System.Data.IDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveCommand}.Param})
  name: ExpressiveCommand(IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommand.html#Open_Database_Extensions_ExpressiveCommand__ctor_System_Data_IDbTransaction_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase_System_Data_IDbConnection_System_Data_IDbCommand_System_Data_IDataReader_System_Data_DbType_Open_Database_Extensions_ExpressiveCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommand.#ctor(System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.IDbConnection,System.Data.IDbCommand,System.Data.IDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveCommand}.Param})
  name.vb: ExpressiveCommand(IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveCommand.ExpressiveCommand(System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<System.Data.IDbConnection, System.Data.IDbCommand, System.Data.IDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommand.ExpressiveCommand(System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.IDbConnection, System.Data.IDbCommand, System.Data.IDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveCommand).Param))
  nameWithType: ExpressiveCommand.ExpressiveCommand(IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand>.Param>)
  nameWithType.vb: ExpressiveCommand.ExpressiveCommand(IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of IDbConnection, IDbCommand, IDataReader, DbType, ExpressiveCommand).Param))
- uid: Open.Database.Extensions.ExpressiveCommand.#ctor*
  name: ExpressiveCommand
  href: api/Open.Database.Extensions.ExpressiveCommand.html#Open_Database_Extensions_ExpressiveCommand__ctor_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommand.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommand.ExpressiveCommand
  nameWithType: ExpressiveCommand.ExpressiveCommand
- uid: Open.Database.Extensions.ExpressiveCommand.AddParams(System.Data.IDbCommand)
  name: AddParams(IDbCommand)
  href: api/Open.Database.Extensions.ExpressiveCommand.html#Open_Database_Extensions_ExpressiveCommand_AddParams_System_Data_IDbCommand_
  commentId: M:Open.Database.Extensions.ExpressiveCommand.AddParams(System.Data.IDbCommand)
  fullName: Open.Database.Extensions.ExpressiveCommand.AddParams(System.Data.IDbCommand)
  nameWithType: ExpressiveCommand.AddParams(IDbCommand)
- uid: Open.Database.Extensions.ExpressiveCommand.AddParams*
  name: AddParams
  href: api/Open.Database.Extensions.ExpressiveCommand.html#Open_Database_Extensions_ExpressiveCommand_AddParams_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommand.AddParams
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommand.AddParams
  nameWithType: ExpressiveCommand.AddParams
- uid: Open.Database.Extensions.ExpressiveCommandBase`5
  name: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html
  commentId: T:Open.Database.Extensions.ExpressiveCommandBase`5
  name.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.#ctor(`0,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name: ExpressiveCommandBase(TConnection, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5__ctor__0_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.#ctor(`0,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name.vb: ExpressiveCommandBase(TConnection, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase(TConnection, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase(TConnection, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase(TConnection, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase(TConnection, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.#ctor(`0,System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name: ExpressiveCommandBase(TConnection, IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5__ctor__0_System_Data_IDbTransaction_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.#ctor(`0,System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name.vb: ExpressiveCommandBase(TConnection, IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase(TConnection, System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase(TConnection, System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase(TConnection, IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase(TConnection, IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.#ctor(Open.Database.Extensions.IDbConnectionFactory{`0},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name: ExpressiveCommandBase(IDbConnectionFactory<TConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5__ctor_Open_Database_Extensions_IDbConnectionFactory__0__System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.#ctor(Open.Database.Extensions.IDbConnectionFactory{`0},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name.vb: ExpressiveCommandBase(IDbConnectionFactory(Of TConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase(Open.Database.Extensions.IDbConnectionFactory<TConnection>, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase(Open.Database.Extensions.IDbConnectionFactory(Of TConnection), System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase(IDbConnectionFactory<TConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase(IDbConnectionFactory(Of TConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.#ctor(Open.Database.Extensions.IDbConnectionPool{`0},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name: ExpressiveCommandBase(IDbConnectionPool<TConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5__ctor_Open_Database_Extensions_IDbConnectionPool__0__System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.#ctor(Open.Database.Extensions.IDbConnectionPool{`0},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name.vb: ExpressiveCommandBase(IDbConnectionPool(Of TConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase(Open.Database.Extensions.IDbConnectionPool<TConnection>, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase(Open.Database.Extensions.IDbConnectionPool(Of TConnection), System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase(IDbConnectionPool<TConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase(IDbConnectionPool(Of TConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.#ctor(System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name: ExpressiveCommandBase(IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5__ctor_System_Data_IDbTransaction_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.#ctor(System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name.vb: ExpressiveCommandBase(IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase(System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase(System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase(IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase(IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.#ctor*
  name: ExpressiveCommandBase
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5__ctor_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveCommandBase
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveCommandBase
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParam(System.String)
  name: AddParam(String)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParam_System_String_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.AddParam(System.String)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam(System.String)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam(System.String)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam(String)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam(String)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParam(System.String,System.Object)
  name: AddParam(String, Object)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParam_System_String_System_Object_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.AddParam(System.String,System.Object)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam(System.String, System.Object)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam(System.String, System.Object)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam(String, Object)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam(String, Object)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParam(System.String,System.Object,`3)
  name: AddParam(String, Object, TDbType)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParam_System_String_System_Object__3_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.AddParam(System.String,System.Object,`3)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam(System.String, System.Object, TDbType)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam(System.String, System.Object, TDbType)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam(String, Object, TDbType)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam(String, Object, TDbType)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParam*
  name: AddParam
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParam_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.AddParam
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParam``1(System.String,System.Nullable{``0})
  name: AddParam<T>(String, Nullable<T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParam__1_System_String_System_Nullable___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.AddParam``1(System.String,System.Nullable{``0})
  name.vb: AddParam(Of T)(String, Nullable(Of T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam<T>(System.String, System.Nullable<T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam(Of T)(System.String, System.Nullable(Of T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam<T>(String, Nullable<T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam(Of T)(String, Nullable(Of T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParam``1(System.String,System.Nullable{``0},`3)
  name: AddParam<T>(String, Nullable<T>, TDbType)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParam__1_System_String_System_Nullable___0___3_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.AddParam``1(System.String,System.Nullable{``0},`3)
  name.vb: AddParam(Of T)(String, Nullable(Of T), TDbType)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam<T>(System.String, System.Nullable<T>, TDbType)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam(Of T)(System.String, System.Nullable(Of T), TDbType)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParam<T>(String, Nullable<T>, TDbType)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParam(Of T)(String, Nullable(Of T), TDbType)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf(System.Boolean,System.String)
  name: AddParamIf(Boolean, String)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParamIf_System_Boolean_System_String_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf(System.Boolean,System.String)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf(System.Boolean, System.String)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf(System.Boolean, System.String)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf(Boolean, String)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf(Boolean, String)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf(System.Boolean,System.String,System.Object)
  name: AddParamIf(Boolean, String, Object)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParamIf_System_Boolean_System_String_System_Object_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf(System.Boolean,System.String,System.Object)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf(System.Boolean, System.String, System.Object)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf(System.Boolean, System.String, System.Object)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf(Boolean, String, Object)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf(Boolean, String, Object)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf(System.Boolean,System.String,System.Object,`3)
  name: AddParamIf(Boolean, String, Object, TDbType)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParamIf_System_Boolean_System_String_System_Object__3_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf(System.Boolean,System.String,System.Object,`3)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf(System.Boolean, System.String, System.Object, TDbType)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf(System.Boolean, System.String, System.Object, TDbType)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf(Boolean, String, Object, TDbType)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf(Boolean, String, Object, TDbType)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf*
  name: AddParamIf
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParamIf_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf``1(System.Boolean,System.String,System.Nullable{``0})
  name: AddParamIf<T>(Boolean, String, Nullable<T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParamIf__1_System_Boolean_System_String_System_Nullable___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf``1(System.Boolean,System.String,System.Nullable{``0})
  name.vb: AddParamIf(Of T)(Boolean, String, Nullable(Of T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf<T>(System.Boolean, System.String, System.Nullable<T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf(Of T)(System.Boolean, System.String, System.Nullable(Of T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf<T>(Boolean, String, Nullable<T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf(Of T)(Boolean, String, Nullable(Of T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf``1(System.Boolean,System.String,System.Nullable{``0},`3)
  name: AddParamIf<T>(Boolean, String, Nullable<T>, TDbType)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParamIf__1_System_Boolean_System_String_System_Nullable___0___3_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.AddParamIf``1(System.Boolean,System.String,System.Nullable{``0},`3)
  name.vb: AddParamIf(Of T)(Boolean, String, Nullable(Of T), TDbType)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf<T>(System.Boolean, System.String, System.Nullable<T>, TDbType)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf(Of T)(System.Boolean, System.String, System.Nullable(Of T), TDbType)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParamIf<T>(Boolean, String, Nullable<T>, TDbType)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParamIf(Of T)(Boolean, String, Nullable(Of T), TDbType)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParams(`1)
  name: AddParams(TCommand)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParams__1_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.AddParams(`1)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParams(TCommand)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParams(TCommand)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParams(TCommand)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParams(TCommand)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.AddParams*
  name: AddParams
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_AddParams_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.AddParams
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParams
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParams
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.AddParams
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).AddParams
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.CancellationToken
  name: CancellationToken
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_CancellationToken
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`5.CancellationToken
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.CancellationToken
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).CancellationToken
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.CancellationToken
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).CancellationToken
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.CancellationToken*
  name: CancellationToken
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_CancellationToken_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.CancellationToken
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.CancellationToken
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).CancellationToken
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.CancellationToken
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).CancellationToken
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Command
  name: Command
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Command
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`5.Command
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Command
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Command
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Command
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Command
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Command*
  name: Command
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Command_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Command
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Command
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Command
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Command
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Command
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Concat*
  name: Concat
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Concat_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Concat
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Concat
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Concat
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Concat
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Concat
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Concat``1(``0,System.Collections.Generic.ICollection{``0})
  name: Concat<T>(T, ICollection<T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Concat__1___0_System_Collections_Generic_ICollection___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Concat``1(``0,System.Collections.Generic.ICollection{``0})
  name.vb: Concat(Of T)(T, ICollection(Of T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Concat<T>(T, System.Collections.Generic.ICollection<T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Concat(Of T)(T, System.Collections.Generic.ICollection(Of T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Concat<T>(T, ICollection<T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Concat(Of T)(T, ICollection(Of T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ConnectionProvider
  name: ConnectionProvider
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ConnectionProvider
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`5.ConnectionProvider
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ConnectionProvider
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ConnectionProvider
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ConnectionProvider
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ConnectionProvider
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ConnectionProvider*
  name: ConnectionProvider
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ConnectionProvider_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.ConnectionProvider
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ConnectionProvider
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ConnectionProvider
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ConnectionProvider
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ConnectionProvider
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.EnsureReaderType*
  name: EnsureReaderType
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_EnsureReaderType_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.EnsureReaderType
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.EnsureReaderType
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).EnsureReaderType
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.EnsureReaderType
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).EnsureReaderType
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.EnsureReaderType``1(``0)
  name: EnsureReaderType<TActual>(TActual)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_EnsureReaderType__1___0_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.EnsureReaderType``1(``0)
  name.vb: EnsureReaderType(Of TActual)(TActual)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.EnsureReaderType<TActual>(TActual)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).EnsureReaderType(Of TActual)(TActual)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.EnsureReaderType<TActual>(TActual)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).EnsureReaderType(Of TActual)(TActual)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Execute(System.Action{`1})
  name: Execute(Action<TCommand>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Execute_System_Action__1__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Execute(System.Action{`1})
  name.vb: Execute(Action(Of TCommand))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Execute(System.Action<TCommand>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Execute(System.Action(Of TCommand))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Execute(Action<TCommand>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Execute(Action(Of TCommand))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Execute*
  name: Execute
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Execute_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Execute
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Execute
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Execute
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Execute
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Execute
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Execute``1(System.Func{`1,``0})
  name: Execute<T>(Func<TCommand, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Execute__1_System_Func__1___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Execute``1(System.Func{`1,``0})
  name.vb: Execute(Of T)(Func(Of TCommand, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Execute<T>(System.Func<TCommand, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Execute(Of T)(System.Func(Of TCommand, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Execute<T>(Func<TCommand, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Execute(Of T)(Func(Of TCommand, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteAsync(System.Func{`1,System.Threading.Tasks.ValueTask})
  name: ExecuteAsync(Func<TCommand, ValueTask>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteAsync_System_Func__1_System_Threading_Tasks_ValueTask__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteAsync(System.Func{`1,System.Threading.Tasks.ValueTask})
  name.vb: ExecuteAsync(Func(Of TCommand, ValueTask))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteAsync(System.Func<TCommand, System.Threading.Tasks.ValueTask>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteAsync(System.Func(Of TCommand, System.Threading.Tasks.ValueTask))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteAsync(Func<TCommand, ValueTask>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteAsync(Func(Of TCommand, ValueTask))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteAsync*
  name: ExecuteAsync
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteAsync
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteAsync
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteAsync
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteAsync
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteAsync``1(System.Func{`1,System.Threading.Tasks.ValueTask{``0}})
  name: ExecuteAsync<T>(Func<TCommand, ValueTask<T>>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteAsync__1_System_Func__1_System_Threading_Tasks_ValueTask___0___
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteAsync``1(System.Func{`1,System.Threading.Tasks.ValueTask{``0}})
  name.vb: ExecuteAsync(Of T)(Func(Of TCommand, ValueTask(Of T)))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteAsync<T>(System.Func<TCommand, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteAsync(Of T)(System.Func(Of TCommand, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteAsync<T>(Func<TCommand, ValueTask<T>>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteAsync(Of T)(Func(Of TCommand, ValueTask(Of T)))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteNonQuery
  name: ExecuteNonQuery()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteNonQuery
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteNonQuery
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteNonQuery()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteNonQuery()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteNonQuery()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteNonQuery()
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteNonQuery_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteNonQuery
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteNonQuery
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteNonQuery
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteNonQuery
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteNonQuery
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReader(System.Action{`2},System.Data.CommandBehavior)
  name: ExecuteReader(Action<TReader>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReader_System_Action__2__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReader(System.Action{`2},System.Data.CommandBehavior)
  name.vb: ExecuteReader(Action(Of TReader), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReader(System.Action<TReader>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReader(System.Action(Of TReader), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReader(Action<TReader>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReader(Action(Of TReader), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReader*
  name: ExecuteReader
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReader_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReader
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReader
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReader
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReader
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReader
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReader``1(System.Func{`2,``0},System.Data.CommandBehavior)
  name: ExecuteReader<T>(Func<TReader, T>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReader__1_System_Func__2___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReader``1(System.Func{`2,``0},System.Data.CommandBehavior)
  name.vb: ExecuteReader(Of T)(Func(Of TReader, T), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReader<T>(System.Func<TReader, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReader(Of T)(System.Func(Of TReader, T), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReader<T>(Func<TReader, T>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReader(Of T)(Func(Of TReader, T), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReaderAsync(System.Action{`2},System.Data.CommandBehavior)
  name: ExecuteReaderAsync(Action<TReader>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReaderAsync_System_Action__2__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReaderAsync(System.Action{`2},System.Data.CommandBehavior)
  name.vb: ExecuteReaderAsync(Action(Of TReader), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReaderAsync(System.Action<TReader>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReaderAsync(System.Action(Of TReader), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReaderAsync(Action<TReader>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReaderAsync(Action(Of TReader), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReaderAsync(System.Func{`2,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior)
  name: ExecuteReaderAsync(Func<TReader, ValueTask>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReaderAsync_System_Func__2_System_Threading_Tasks_ValueTask__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReaderAsync(System.Func{`2,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior)
  name.vb: ExecuteReaderAsync(Func(Of TReader, ValueTask), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReaderAsync(System.Func<TReader, System.Threading.Tasks.ValueTask>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReaderAsync(System.Func(Of TReader, System.Threading.Tasks.ValueTask), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReaderAsync(Func<TReader, ValueTask>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReaderAsync(Func(Of TReader, ValueTask), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReaderAsync*
  name: ExecuteReaderAsync
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReaderAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReaderAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReaderAsync
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReaderAsync
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReaderAsync
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReaderAsync
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReaderAsync``1(System.Func{`2,``0},System.Data.CommandBehavior)
  name: ExecuteReaderAsync<T>(Func<TReader, T>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReaderAsync__1_System_Func__2___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReaderAsync``1(System.Func{`2,``0},System.Data.CommandBehavior)
  name.vb: ExecuteReaderAsync(Of T)(Func(Of TReader, T), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReaderAsync<T>(System.Func<TReader, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReaderAsync(Of T)(System.Func(Of TReader, T), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReaderAsync<T>(Func<TReader, T>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReaderAsync(Of T)(Func(Of TReader, T), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReaderAsync``1(System.Func{`2,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior)
  name: ExecuteReaderAsync<T>(Func<TReader, ValueTask<T>>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReaderAsync__1_System_Func__2_System_Threading_Tasks_ValueTask___0___System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReaderAsync``1(System.Func{`2,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior)
  name.vb: ExecuteReaderAsync(Of T)(Func(Of TReader, ValueTask(Of T)), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReaderAsync<T>(System.Func<TReader, System.Threading.Tasks.ValueTask<T>>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReaderAsync(Of T)(System.Func(Of TReader, System.Threading.Tasks.ValueTask(Of T)), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReaderAsync<T>(Func<TReader, ValueTask<T>>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReaderAsync(Of T)(Func(Of TReader, ValueTask(Of T)), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturn
  name: ExecuteReturn()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReturn
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturn
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturn()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturn()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturn()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturn()
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturn*
  name: ExecuteReturn
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReturn_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturn
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturn
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturn
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturn
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturn
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturn``1
  name: ExecuteReturn<T>()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReturn__1
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturn``1
  name.vb: ExecuteReturn(Of T)()
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturn<T>()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturn(Of T)()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturn<T>()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturn(Of T)()
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturnAsync
  name: ExecuteReturnAsync()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReturnAsync
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturnAsync
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturnAsync()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturnAsync()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturnAsync()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturnAsync()
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturnAsync*
  name: ExecuteReturnAsync
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReturnAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturnAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturnAsync
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturnAsync
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturnAsync
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturnAsync
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturnAsync``1
  name: ExecuteReturnAsync<T>()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteReturnAsync__1
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteReturnAsync``1
  name.vb: ExecuteReturnAsync(Of T)()
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturnAsync<T>()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturnAsync(Of T)()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteReturnAsync<T>()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteReturnAsync(Of T)()
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteScalar
  name: ExecuteScalar()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteScalar
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteScalar
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalar()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalar()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalar()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalar()
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteScalar*
  name: ExecuteScalar
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteScalar_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteScalar
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalar
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalar
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalar
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalar
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteScalar``1
  name: ExecuteScalar<T>()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteScalar__1
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteScalar``1
  name.vb: ExecuteScalar(Of T)()
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalar<T>()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalar(Of T)()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalar<T>()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalar(Of T)()
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteScalar``1(System.Func{System.Object,``0})
  name: ExecuteScalar<T>(Func<Object, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_ExecuteScalar__1_System_Func_System_Object___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.ExecuteScalar``1(System.Func{System.Object,``0})
  name.vb: ExecuteScalar(Of T)(Func(Of Object, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalar<T>(System.Func<System.Object, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalar(Of T)(System.Func(Of System.Object, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalar<T>(Func<Object, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalar(Of T)(Func(Of Object, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#Execute(System.Action{System.Data.IDbCommand})
  name: IExecuteCommand.Execute(Action<IDbCommand>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteCommand_Execute_System_Action_System_Data_IDbCommand__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#Execute(System.Action{System.Data.IDbCommand})
  name.vb: Open.Database.Extensions.IExecuteCommand.Execute(Action(Of IDbCommand))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteCommand.Execute(System.Action<System.Data.IDbCommand>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.Execute(System.Action(Of System.Data.IDbCommand))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteCommand.Execute(Action<IDbCommand>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.Execute(Action(Of IDbCommand))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#Execute*
  name: IExecuteCommand.Execute
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteCommand_Execute_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#Execute
  isSpec: "True"
  name.vb: Open.Database.Extensions.IExecuteCommand.Execute
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteCommand.Execute
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.Execute
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteCommand.Execute
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.Execute
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#Execute``1(System.Func{System.Data.IDbCommand,``0})
  name: IExecuteCommand.Execute<T>(Func<IDbCommand, T>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteCommand_Execute__1_System_Func_System_Data_IDbCommand___0__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#Execute``1(System.Func{System.Data.IDbCommand,``0})
  name.vb: Open.Database.Extensions.IExecuteCommand.Execute(Of T)(Func(Of IDbCommand, T))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteCommand.Execute<T>(System.Func<System.Data.IDbCommand, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.Execute(Of T)(System.Func(Of System.Data.IDbCommand, T))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteCommand.Execute<T>(Func<IDbCommand, T>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.Execute(Of T)(Func(Of IDbCommand, T))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#ExecuteAsync(System.Func{System.Data.IDbCommand,System.Threading.Tasks.ValueTask})
  name: IExecuteCommand.ExecuteAsync(Func<IDbCommand, ValueTask>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteCommand_ExecuteAsync_System_Func_System_Data_IDbCommand_System_Threading_Tasks_ValueTask__
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#ExecuteAsync(System.Func{System.Data.IDbCommand,System.Threading.Tasks.ValueTask})
  name.vb: Open.Database.Extensions.IExecuteCommand.ExecuteAsync(Func(Of IDbCommand, ValueTask))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteCommand.ExecuteAsync(System.Func<System.Data.IDbCommand, System.Threading.Tasks.ValueTask>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.ExecuteAsync(System.Func(Of System.Data.IDbCommand, System.Threading.Tasks.ValueTask))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteCommand.ExecuteAsync(Func<IDbCommand, ValueTask>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.ExecuteAsync(Func(Of IDbCommand, ValueTask))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#ExecuteAsync*
  name: IExecuteCommand.ExecuteAsync
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteCommand_ExecuteAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#ExecuteAsync
  isSpec: "True"
  name.vb: Open.Database.Extensions.IExecuteCommand.ExecuteAsync
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteCommand.ExecuteAsync
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.ExecuteAsync
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteCommand.ExecuteAsync
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.ExecuteAsync
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#ExecuteAsync``1(System.Func{System.Data.IDbCommand,System.Threading.Tasks.ValueTask{``0}})
  name: IExecuteCommand.ExecuteAsync<T>(Func<IDbCommand, ValueTask<T>>)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteCommand_ExecuteAsync__1_System_Func_System_Data_IDbCommand_System_Threading_Tasks_ValueTask___0___
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteCommand#ExecuteAsync``1(System.Func{System.Data.IDbCommand,System.Threading.Tasks.ValueTask{``0}})
  name.vb: Open.Database.Extensions.IExecuteCommand.ExecuteAsync(Of T)(Func(Of IDbCommand, ValueTask(Of T)))
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteCommand.ExecuteAsync<T>(System.Func<System.Data.IDbCommand, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.ExecuteAsync(Of T)(System.Func(Of System.Data.IDbCommand, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteCommand.ExecuteAsync<T>(Func<IDbCommand, ValueTask<T>>)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteCommand.ExecuteAsync(Of T)(Func(Of IDbCommand, ValueTask(Of T)))
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#CancellationToken
  name: IExecuteReader.CancellationToken
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteReader_CancellationToken
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#CancellationToken
  name.vb: Open.Database.Extensions.IExecuteReader.CancellationToken
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteReader.CancellationToken
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.CancellationToken
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteReader.CancellationToken
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.CancellationToken
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#CancellationToken*
  name: IExecuteReader.CancellationToken
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteReader_CancellationToken_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#CancellationToken
  isSpec: "True"
  name.vb: Open.Database.Extensions.IExecuteReader.CancellationToken
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteReader.CancellationToken
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.CancellationToken
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteReader.CancellationToken
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.CancellationToken
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReader(System.Action{System.Data.IDataReader},System.Data.CommandBehavior)
  name: IExecuteReader.ExecuteReader(Action<IDataReader>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteReader_ExecuteReader_System_Action_System_Data_IDataReader__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReader(System.Action{System.Data.IDataReader},System.Data.CommandBehavior)
  name.vb: Open.Database.Extensions.IExecuteReader.ExecuteReader(Action(Of IDataReader), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteReader.ExecuteReader(System.Action<System.Data.IDataReader>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReader(System.Action(Of System.Data.IDataReader), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteReader.ExecuteReader(Action<IDataReader>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReader(Action(Of IDataReader), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReader*
  name: IExecuteReader.ExecuteReader
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteReader_ExecuteReader_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReader
  isSpec: "True"
  name.vb: Open.Database.Extensions.IExecuteReader.ExecuteReader
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteReader.ExecuteReader
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReader
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteReader.ExecuteReader
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReader
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReader``1(System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior)
  name: IExecuteReader.ExecuteReader<T>(Func<IDataReader, T>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteReader_ExecuteReader__1_System_Func_System_Data_IDataReader___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReader``1(System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior)
  name.vb: Open.Database.Extensions.IExecuteReader.ExecuteReader(Of T)(Func(Of IDataReader, T), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteReader.ExecuteReader<T>(System.Func<System.Data.IDataReader, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReader(Of T)(System.Func(Of System.Data.IDataReader, T), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteReader.ExecuteReader<T>(Func<IDataReader, T>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReader(Of T)(Func(Of IDataReader, T), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReaderAsync(System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior)
  name: IExecuteReader.ExecuteReaderAsync(Func<IDataReader, ValueTask>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteReader_ExecuteReaderAsync_System_Func_System_Data_IDataReader_System_Threading_Tasks_ValueTask__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReaderAsync(System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior)
  name.vb: Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(Func(Of IDataReader, ValueTask), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(System.Func<System.Data.IDataReader, System.Threading.Tasks.ValueTask>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(System.Func(Of System.Data.IDataReader, System.Threading.Tasks.ValueTask), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteReader.ExecuteReaderAsync(Func<IDataReader, ValueTask>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(Func(Of IDataReader, ValueTask), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReaderAsync*
  name: IExecuteReader.ExecuteReaderAsync
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteReader_ExecuteReaderAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReaderAsync
  isSpec: "True"
  name.vb: Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteReader.ExecuteReaderAsync
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReaderAsync``1(System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior)
  name: IExecuteReader.ExecuteReaderAsync<T>(Func<IDataReader, ValueTask<T>>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Open_Database_Extensions_IExecuteReader_ExecuteReaderAsync__1_System_Func_System_Data_IDataReader_System_Threading_Tasks_ValueTask___0___System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Open#Database#Extensions#IExecuteReader#ExecuteReaderAsync``1(System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior)
  name.vb: Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(Of T)(Func(Of IDataReader, ValueTask(Of T)), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync<T>(System.Func<System.Data.IDataReader, System.Threading.Tasks.ValueTask<T>>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(Of T)(System.Func(Of System.Data.IDataReader, System.Threading.Tasks.ValueTask(Of T)), System.Data.CommandBehavior)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IExecuteReader.ExecuteReaderAsync<T>(Func<IDataReader, ValueTask<T>>, CommandBehavior)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(Of T)(Func(Of IDataReader, ValueTask(Of T)), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param
  name: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html
  commentId: T:Open.Database.Extensions.ExpressiveCommandBase`5.Param
  name.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.Equals(Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param)
  name: Equals(ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_Equals_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Param.Equals(Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param)
  name.vb: Equals(ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Equals(Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Equals(Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Equals(ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Equals(ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.Equals(System.Object)
  name: Equals(Object)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_Equals_System_Object_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Param.Equals(System.Object)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Equals(System.Object)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Equals(System.Object)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Equals(Object)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Equals(Object)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.Equals*
  name: Equals
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_Equals_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Param.Equals
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Equals
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Equals
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Equals
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Equals
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.GetHashCode
  name: GetHashCode()
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_GetHashCode
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Param.GetHashCode
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.GetHashCode()
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.GetHashCode()
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.GetHashCode()
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.GetHashCode()
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.GetHashCode*
  name: GetHashCode
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_GetHashCode_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Param.GetHashCode
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.GetHashCode
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.GetHashCode
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.GetHashCode
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.GetHashCode
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.Name
  name: Name
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_Name
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`5.Param.Name
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Name
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Name
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Name
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Name
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.Name*
  name: Name
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_Name_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Param.Name
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Name
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Name
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Name
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Name
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.op_Equality(Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param,Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param)
  name: Equality(ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param, ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_op_Equality_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Param.op_Equality(Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param,Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param)
  name.vb: Equality(ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param, ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Equality(Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param, Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Equality(Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param, Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Equality(ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param, ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Equality(ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param, ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.op_Equality*
  name: Equality
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_op_Equality_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Param.op_Equality
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Equality
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Equality
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Equality
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Equality
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.op_Inequality(Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param,Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param)
  name: Inequality(ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param, ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_op_Inequality_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.Param.op_Inequality(Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param,Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param)
  name.vb: Inequality(ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param, ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Inequality(Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param, Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Inequality(Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param, Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Inequality(ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param, ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Inequality(ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param, ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.op_Inequality*
  name: Inequality
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_op_Inequality_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Param.op_Inequality
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Inequality
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Inequality
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Inequality
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Inequality
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.Type
  name: Type
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_Type
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`5.Param.Type
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Type
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Type
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Type
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Type
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.Type*
  name: Type
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_Type_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Param.Type
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Type
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Type
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Type
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Type
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.Value
  name: Value
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_Value
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`5.Param.Value
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Value
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Value
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Value
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Value
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Param.Value*
  name: Value
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.Param.html#Open_Database_Extensions_ExpressiveCommandBase_5_Param_Value_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Param.Value
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Value
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Value
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param.Value
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param.Value
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Params
  name: Params
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Params
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`5.Params
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Params
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Params
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Params
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Params
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Params*
  name: Params
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Params_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Params
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Params
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Params
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Params
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Params
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.PrepareCommand(`0)
  name: PrepareCommand(TConnection)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_PrepareCommand__0_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.PrepareCommand(`0)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.PrepareCommand(TConnection)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).PrepareCommand(TConnection)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.PrepareCommand(TConnection)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).PrepareCommand(TConnection)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.PrepareCommand*
  name: PrepareCommand
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_PrepareCommand_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.PrepareCommand
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.PrepareCommand
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).PrepareCommand
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.PrepareCommand
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).PrepareCommand
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.SetTimeout(System.UInt16)
  name: SetTimeout(UInt16)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_SetTimeout_System_UInt16_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.SetTimeout(System.UInt16)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.SetTimeout(System.UInt16)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).SetTimeout(System.UInt16)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.SetTimeout(UInt16)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).SetTimeout(UInt16)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.SetTimeout*
  name: SetTimeout
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_SetTimeout_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.SetTimeout
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.SetTimeout
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).SetTimeout
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.SetTimeout
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).SetTimeout
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Timeout
  name: Timeout
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Timeout
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`5.Timeout
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Timeout
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Timeout
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Timeout
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Timeout
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Timeout*
  name: Timeout
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Timeout_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Timeout
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Timeout
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Timeout
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Timeout
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Timeout
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Transaction
  name: Transaction
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Transaction
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`5.Transaction
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Transaction
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Transaction
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Transaction
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Transaction
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Transaction*
  name: Transaction
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Transaction_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Transaction
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Transaction
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Transaction
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Transaction
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Transaction
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Type
  name: Type
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Type
  commentId: P:Open.Database.Extensions.ExpressiveCommandBase`5.Type
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Type
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Type
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Type
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Type
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.Type*
  name: Type
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_Type_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.Type
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Type
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Type
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Type
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Type
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.UseCancellationToken(System.Threading.CancellationToken)
  name: UseCancellationToken(CancellationToken)
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_UseCancellationToken_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.ExpressiveCommandBase`5.UseCancellationToken(System.Threading.CancellationToken)
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.UseCancellationToken(System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).UseCancellationToken(System.Threading.CancellationToken)
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.UseCancellationToken(CancellationToken)
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).UseCancellationToken(CancellationToken)
- uid: Open.Database.Extensions.ExpressiveCommandBase`5.UseCancellationToken*
  name: UseCancellationToken
  href: api/Open.Database.Extensions.ExpressiveCommandBase-5.html#Open_Database_Extensions_ExpressiveCommandBase_5_UseCancellationToken_
  commentId: Overload:Open.Database.Extensions.ExpressiveCommandBase`5.UseCancellationToken
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.UseCancellationToken
  fullName.vb: Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).UseCancellationToken
  nameWithType: ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.UseCancellationToken
  nameWithType.vb: ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).UseCancellationToken
- uid: Open.Database.Extensions.ExpressiveDbCommand
  name: ExpressiveDbCommand
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html
  commentId: T:Open.Database.Extensions.ExpressiveDbCommand
  fullName: Open.Database.Extensions.ExpressiveDbCommand
  nameWithType: ExpressiveDbCommand
- uid: Open.Database.Extensions.ExpressiveDbCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory{System.Data.Common.DbConnection},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name: ExpressiveDbCommand(IDbConnectionFactory<DbConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand__ctor_Open_Database_Extensions_IDbConnectionFactory_System_Data_Common_DbConnection__System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase_System_Data_Common_DbConnection_System_Data_Common_DbCommand_System_Data_Common_DbDataReader_System_Data_DbType_Open_Database_Extensions_ExpressiveDbCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommand.#ctor(Open.Database.Extensions.IDbConnectionFactory{System.Data.Common.DbConnection},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name.vb: ExpressiveDbCommand(IDbConnectionFactory(Of DbConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(Open.Database.Extensions.IDbConnectionFactory<System.Data.Common.DbConnection>, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.Common.DbDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(Open.Database.Extensions.IDbConnectionFactory(Of System.Data.Common.DbConnection), System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.Common.DbDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand).Param))
  nameWithType: ExpressiveDbCommand.ExpressiveDbCommand(IDbConnectionFactory<DbConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand>.Param>)
  nameWithType.vb: ExpressiveDbCommand.ExpressiveDbCommand(IDbConnectionFactory(Of DbConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommand.#ctor(Open.Database.Extensions.IDbConnectionPool{System.Data.Common.DbConnection},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name: ExpressiveDbCommand(IDbConnectionPool<DbConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand__ctor_Open_Database_Extensions_IDbConnectionPool_System_Data_Common_DbConnection__System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase_System_Data_Common_DbConnection_System_Data_Common_DbCommand_System_Data_Common_DbDataReader_System_Data_DbType_Open_Database_Extensions_ExpressiveDbCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommand.#ctor(Open.Database.Extensions.IDbConnectionPool{System.Data.Common.DbConnection},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name.vb: ExpressiveDbCommand(IDbConnectionPool(Of DbConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(Open.Database.Extensions.IDbConnectionPool<System.Data.Common.DbConnection>, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.Common.DbDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(Open.Database.Extensions.IDbConnectionPool(Of System.Data.Common.DbConnection), System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.Common.DbDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand).Param))
  nameWithType: ExpressiveDbCommand.ExpressiveDbCommand(IDbConnectionPool<DbConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand>.Param>)
  nameWithType.vb: ExpressiveDbCommand.ExpressiveDbCommand(IDbConnectionPool(Of DbConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommand.#ctor(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name: ExpressiveDbCommand(DbConnection, CommandType, String, IEnumerable<ExpressiveCommandBase<DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand__ctor_System_Data_Common_DbConnection_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase_System_Data_Common_DbConnection_System_Data_Common_DbCommand_System_Data_Common_DbDataReader_System_Data_DbType_Open_Database_Extensions_ExpressiveDbCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommand.#ctor(System.Data.Common.DbConnection,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name.vb: ExpressiveDbCommand(DbConnection, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(System.Data.Common.DbConnection, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.Common.DbDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(System.Data.Common.DbConnection, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.Common.DbDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand).Param))
  nameWithType: ExpressiveDbCommand.ExpressiveDbCommand(DbConnection, CommandType, String, IEnumerable<ExpressiveCommandBase<DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand>.Param>)
  nameWithType.vb: ExpressiveDbCommand.ExpressiveDbCommand(DbConnection, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommand.#ctor(System.Data.Common.DbConnection,System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name: ExpressiveDbCommand(DbConnection, IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand__ctor_System_Data_Common_DbConnection_System_Data_IDbTransaction_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase_System_Data_Common_DbConnection_System_Data_Common_DbCommand_System_Data_Common_DbDataReader_System_Data_DbType_Open_Database_Extensions_ExpressiveDbCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommand.#ctor(System.Data.Common.DbConnection,System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name.vb: ExpressiveDbCommand(DbConnection, IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(System.Data.Common.DbConnection, System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.Common.DbDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(System.Data.Common.DbConnection, System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.Common.DbDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand).Param))
  nameWithType: ExpressiveDbCommand.ExpressiveDbCommand(DbConnection, IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand>.Param>)
  nameWithType.vb: ExpressiveDbCommand.ExpressiveDbCommand(DbConnection, IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommand.#ctor(System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name: ExpressiveDbCommand(IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand__ctor_System_Data_IDbTransaction_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase_System_Data_Common_DbConnection_System_Data_Common_DbCommand_System_Data_Common_DbDataReader_System_Data_DbType_Open_Database_Extensions_ExpressiveDbCommand__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommand.#ctor(System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{System.Data.Common.DbConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader,System.Data.DbType,Open.Database.Extensions.ExpressiveDbCommand}.Param})
  name.vb: ExpressiveDbCommand(IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.Common.DbDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand(System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of System.Data.Common.DbConnection, System.Data.Common.DbCommand, System.Data.Common.DbDataReader, System.Data.DbType, Open.Database.Extensions.ExpressiveDbCommand).Param))
  nameWithType: ExpressiveDbCommand.ExpressiveDbCommand(IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand>.Param>)
  nameWithType.vb: ExpressiveDbCommand.ExpressiveDbCommand(IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of DbConnection, DbCommand, DbDataReader, DbType, ExpressiveDbCommand).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommand.#ctor*
  name: ExpressiveDbCommand
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand__ctor_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommand.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommand.ExpressiveDbCommand
  nameWithType: ExpressiveDbCommand.ExpressiveDbCommand
- uid: Open.Database.Extensions.ExpressiveDbCommand.AddParams(System.Data.Common.DbCommand)
  name: AddParams(DbCommand)
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand_AddParams_System_Data_Common_DbCommand_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommand.AddParams(System.Data.Common.DbCommand)
  fullName: Open.Database.Extensions.ExpressiveDbCommand.AddParams(System.Data.Common.DbCommand)
  nameWithType: ExpressiveDbCommand.AddParams(DbCommand)
- uid: Open.Database.Extensions.ExpressiveDbCommand.AddParams*
  name: AddParams
  href: api/Open.Database.Extensions.ExpressiveDbCommand.html#Open_Database_Extensions_ExpressiveDbCommand_AddParams_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommand.AddParams
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommand.AddParams
  nameWithType: ExpressiveDbCommand.AddParams
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5
  name: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html
  commentId: T:Open.Database.Extensions.ExpressiveDbCommandBase`5
  name.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor(`0,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name: ExpressiveDbCommandBase(TConnection, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5__ctor__0_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor(`0,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name.vb: ExpressiveDbCommandBase(TConnection, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase(TConnection, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase(TConnection, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase(TConnection, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase(TConnection, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor(`0,System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name: ExpressiveDbCommandBase(TConnection, IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5__ctor__0_System_Data_IDbTransaction_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor(`0,System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name.vb: ExpressiveDbCommandBase(TConnection, IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase(TConnection, System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase(TConnection, System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase(TConnection, IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase(TConnection, IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor(Open.Database.Extensions.IDbConnectionFactory{`0},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name: ExpressiveDbCommandBase(IDbConnectionFactory<TConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5__ctor_Open_Database_Extensions_IDbConnectionFactory__0__System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor(Open.Database.Extensions.IDbConnectionFactory{`0},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name.vb: ExpressiveDbCommandBase(IDbConnectionFactory(Of TConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase(Open.Database.Extensions.IDbConnectionFactory<TConnection>, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase(Open.Database.Extensions.IDbConnectionFactory(Of TConnection), System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase(IDbConnectionFactory<TConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase(IDbConnectionFactory(Of TConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor(Open.Database.Extensions.IDbConnectionPool{`0},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name: ExpressiveDbCommandBase(IDbConnectionPool<TConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5__ctor_Open_Database_Extensions_IDbConnectionPool__0__System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor(Open.Database.Extensions.IDbConnectionPool{`0},System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name.vb: ExpressiveDbCommandBase(IDbConnectionPool(Of TConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase(Open.Database.Extensions.IDbConnectionPool<TConnection>, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase(Open.Database.Extensions.IDbConnectionPool(Of TConnection), System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase(IDbConnectionPool<TConnection>, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase(IDbConnectionPool(Of TConnection), CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor(System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name: ExpressiveDbCommandBase(IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5__ctor_System_Data_IDbTransaction_System_Data_CommandType_System_String_System_Collections_Generic_IEnumerable_Open_Database_Extensions_ExpressiveCommandBase__0__1__2__3__4__Param__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor(System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{Open.Database.Extensions.ExpressiveCommandBase{`0,`1,`2,`3,`4}.Param})
  name.vb: ExpressiveDbCommandBase(IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase(System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable<Open.Database.Extensions.ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase(System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Collections.Generic.IEnumerable(Of Open.Database.Extensions.ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase(IDbTransaction, CommandType, String, IEnumerable<ExpressiveCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.Param>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase(IDbTransaction, CommandType, String, IEnumerable(Of ExpressiveCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).Param))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor*
  name: ExpressiveDbCommandBase
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5__ctor_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.#ctor
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExpressiveDbCommandBase
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExpressiveDbCommandBase
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.EnableAsyncRead(System.Boolean)
  name: EnableAsyncRead(Boolean)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_EnableAsyncRead_System_Boolean_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.EnableAsyncRead(System.Boolean)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.EnableAsyncRead(System.Boolean)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).EnableAsyncRead(System.Boolean)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.EnableAsyncRead(Boolean)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).EnableAsyncRead(Boolean)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.EnableAsyncRead*
  name: EnableAsyncRead
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_EnableAsyncRead_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.EnableAsyncRead
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.EnableAsyncRead
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).EnableAsyncRead
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.EnableAsyncRead
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).EnableAsyncRead
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteNonQueryAsync
  name: ExecuteNonQueryAsync()
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ExecuteNonQueryAsync
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteNonQueryAsync
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteNonQueryAsync()
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteNonQueryAsync()
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteNonQueryAsync()
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteNonQueryAsync()
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteNonQueryAsync*
  name: ExecuteNonQueryAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ExecuteNonQueryAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteNonQueryAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteNonQueryAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteNonQueryAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteNonQueryAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteNonQueryAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteScalarAsync
  name: ExecuteScalarAsync()
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ExecuteScalarAsync
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteScalarAsync
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalarAsync()
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalarAsync()
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalarAsync()
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalarAsync()
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteScalarAsync*
  name: ExecuteScalarAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ExecuteScalarAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteScalarAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalarAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalarAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalarAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalarAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteScalarAsync``1
  name: ExecuteScalarAsync<T>()
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ExecuteScalarAsync__1
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteScalarAsync``1
  name.vb: ExecuteScalarAsync(Of T)()
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalarAsync<T>()
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalarAsync(Of T)()
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalarAsync<T>()
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalarAsync(Of T)()
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteScalarAsync``1(System.Func{System.Object,``0})
  name: ExecuteScalarAsync<T>(Func<Object, T>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ExecuteScalarAsync__1_System_Func_System_Object___0__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteScalarAsync``1(System.Func{System.Object,``0})
  name.vb: ExecuteScalarAsync(Of T)(Func(Of Object, T))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalarAsync<T>(System.Func<System.Object, T>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalarAsync(Of T)(System.Func(Of System.Object, T))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalarAsync<T>(Func<Object, T>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalarAsync(Of T)(Func(Of Object, T))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteScalarAsync``1(System.Func{System.Object,System.Threading.Tasks.ValueTask{``0}})
  name: ExecuteScalarAsync<T>(Func<Object, ValueTask<T>>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ExecuteScalarAsync__1_System_Func_System_Object_System_Threading_Tasks_ValueTask___0___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.ExecuteScalarAsync``1(System.Func{System.Object,System.Threading.Tasks.ValueTask{``0}})
  name.vb: ExecuteScalarAsync(Of T)(Func(Of Object, ValueTask(Of T)))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalarAsync<T>(System.Func<System.Object, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalarAsync(Of T)(System.Func(Of System.Object, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ExecuteScalarAsync<T>(Func<Object, ValueTask<T>>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ExecuteScalarAsync(Of T)(Func(Of Object, ValueTask(Of T)))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.FirstOrdinalResultsAsync
  name: FirstOrdinalResultsAsync()
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_FirstOrdinalResultsAsync
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.FirstOrdinalResultsAsync
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.FirstOrdinalResultsAsync()
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).FirstOrdinalResultsAsync()
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.FirstOrdinalResultsAsync()
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).FirstOrdinalResultsAsync()
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.FirstOrdinalResultsAsync*
  name: FirstOrdinalResultsAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_FirstOrdinalResultsAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.FirstOrdinalResultsAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.FirstOrdinalResultsAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).FirstOrdinalResultsAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.FirstOrdinalResultsAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).FirstOrdinalResultsAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.FirstOrdinalResultsAsync``1
  name: FirstOrdinalResultsAsync<T0>()
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_FirstOrdinalResultsAsync__1
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.FirstOrdinalResultsAsync``1
  name.vb: FirstOrdinalResultsAsync(Of T0)()
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.FirstOrdinalResultsAsync<T0>()
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).FirstOrdinalResultsAsync(Of T0)()
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.FirstOrdinalResultsAsync<T0>()
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).FirstOrdinalResultsAsync(Of T0)()
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderAsync(System.Action{System.Data.IDataRecord},System.Data.CommandBehavior)
  name: IterateReaderAsync(Action<IDataRecord>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_IterateReaderAsync_System_Action_System_Data_IDataRecord__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderAsync(System.Action{System.Data.IDataRecord},System.Data.CommandBehavior)
  name.vb: IterateReaderAsync(Action(Of IDataRecord), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderAsync(System.Action<System.Data.IDataRecord>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderAsync(System.Action(Of System.Data.IDataRecord), System.Data.CommandBehavior)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderAsync(Action<IDataRecord>, CommandBehavior)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderAsync(Action(Of IDataRecord), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderAsync(System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior)
  name: IterateReaderAsync(Func<IDataRecord, ValueTask>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_IterateReaderAsync_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderAsync(System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior)
  name.vb: IterateReaderAsync(Func(Of IDataRecord, ValueTask), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderAsync(System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderAsync(System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask), System.Data.CommandBehavior)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderAsync(Func<IDataRecord, ValueTask>, CommandBehavior)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderAsync(Func(Of IDataRecord, ValueTask), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderAsync*
  name: IterateReaderAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_IterateReaderAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderWhileAsync(System.Func{System.Data.IDataRecord,System.Boolean},System.Data.CommandBehavior)
  name: IterateReaderWhileAsync(Func<IDataRecord, Boolean>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_IterateReaderWhileAsync_System_Func_System_Data_IDataRecord_System_Boolean__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderWhileAsync(System.Func{System.Data.IDataRecord,System.Boolean},System.Data.CommandBehavior)
  name.vb: IterateReaderWhileAsync(Func(Of IDataRecord, Boolean), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderWhileAsync(System.Func<System.Data.IDataRecord, System.Boolean>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderWhileAsync(System.Func(Of System.Data.IDataRecord, System.Boolean), System.Data.CommandBehavior)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderWhileAsync(Func<IDataRecord, Boolean>, CommandBehavior)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderWhileAsync(Func(Of IDataRecord, Boolean), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderWhileAsync(System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{System.Boolean}},System.Data.CommandBehavior)
  name: IterateReaderWhileAsync(Func<IDataRecord, ValueTask<Boolean>>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_IterateReaderWhileAsync_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask_System_Boolean___System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderWhileAsync(System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{System.Boolean}},System.Data.CommandBehavior)
  name.vb: IterateReaderWhileAsync(Func(Of IDataRecord, ValueTask(Of Boolean)), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderWhileAsync(System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask<System.Boolean>>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderWhileAsync(System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask(Of System.Boolean)), System.Data.CommandBehavior)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderWhileAsync(Func<IDataRecord, ValueTask<Boolean>>, CommandBehavior)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderWhileAsync(Func(Of IDataRecord, ValueTask(Of Boolean)), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderWhileAsync*
  name: IterateReaderWhileAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_IterateReaderWhileAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.IterateReaderWhileAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderWhileAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderWhileAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.IterateReaderWhileAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).IterateReaderWhileAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ResultsAsync*
  name: ResultsAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ResultsAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.ResultsAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ResultsAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ResultsAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ResultsAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ResultsAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ResultsAsync``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: ResultsAsync<T>(IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ResultsAsync__1_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.ResultsAsync``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: ResultsAsync(Of T)(IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ResultsAsync<T>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ResultsAsync(Of T)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ResultsAsync<T>(IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ResultsAsync(Of T)(IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ResultsAsync``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: ResultsAsync<T>(IEnumerable<(String Field, String Column)>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ResultsAsync__1_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.ResultsAsync``1(System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: ResultsAsync(Of T)(IEnumerable(Of (Field As String, Column As String)))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ResultsAsync<T>(System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ResultsAsync(Of T)(System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ResultsAsync<T>(IEnumerable<(String Field, String Column)>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ResultsAsync(Of T)(IEnumerable(Of (Field As String, Column As String)))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ResultsAsync``1(System.ValueTuple{System.String,System.String}[])
  name: ResultsAsync<T>((String Field, String Column)[])
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ResultsAsync__1_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.ResultsAsync``1(System.ValueTuple{System.String,System.String}[])
  name.vb: ResultsAsync(Of T)((Field As String, Column As String)())
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ResultsAsync<T>(System.ValueTuple<System.String, System.String>[])
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ResultsAsync(Of T)(System.ValueTuple(Of System.String, System.String)())
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ResultsAsync<T>((String Field, String Column)[])
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ResultsAsync(Of T)((Field As String, Column As String)())
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync
  name: RetrieveAsync()
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_RetrieveAsync
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync()
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync()
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync()
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync()
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync(System.Collections.Generic.IEnumerable{System.Int32})
  name: RetrieveAsync(IEnumerable<Int32>)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_RetrieveAsync_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync(System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: RetrieveAsync(IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync(System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync(System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync(IEnumerable<Int32>)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync(IEnumerable(Of Int32))
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name: RetrieveAsync(IEnumerable<String>, Boolean)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_RetrieveAsync_System_Collections_Generic_IEnumerable_System_String__System_Boolean_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  name.vb: RetrieveAsync(IEnumerable(Of String), Boolean)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync(System.Collections.Generic.IEnumerable<System.String>, System.Boolean)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync(System.Collections.Generic.IEnumerable(Of System.String), System.Boolean)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync(IEnumerable<String>, Boolean)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync(IEnumerable(Of String), Boolean)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync(System.Int32,System.Int32[])
  name: RetrieveAsync(Int32, Int32[])
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_RetrieveAsync_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync(System.Int32,System.Int32[])
  name.vb: RetrieveAsync(Int32, Int32())
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync(System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync(System.Int32, System.Int32())
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync(Int32, Int32[])
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync(Int32, Int32())
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync(System.String,System.String[])
  name: RetrieveAsync(String, String[])
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_RetrieveAsync_System_String_System_String___
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync(System.String,System.String[])
  name.vb: RetrieveAsync(String, String())
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync(System.String, System.String[])
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync(System.String, System.String())
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync(String, String[])
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync(String, String())
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync*
  name: RetrieveAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_RetrieveAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.RetrieveAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.RetrieveAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).RetrieveAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.TakeAsync*
  name: TakeAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_TakeAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.TakeAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.TakeAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).TakeAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.TakeAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).TakeAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.TakeAsync``1(System.Func{System.Data.IDataRecord,``0},System.Int32,System.Data.CommandBehavior)
  name: TakeAsync<T>(Func<IDataRecord, T>, Int32, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_TakeAsync__1_System_Func_System_Data_IDataRecord___0__System_Int32_System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.TakeAsync``1(System.Func{System.Data.IDataRecord,``0},System.Int32,System.Data.CommandBehavior)
  name.vb: TakeAsync(Of T)(Func(Of IDataRecord, T), Int32, CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.TakeAsync<T>(System.Func<System.Data.IDataRecord, T>, System.Int32, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).TakeAsync(Of T)(System.Func(Of System.Data.IDataRecord, T), System.Int32, System.Data.CommandBehavior)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.TakeAsync<T>(Func<IDataRecord, T>, Int32, CommandBehavior)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).TakeAsync(Of T)(Func(Of IDataRecord, T), Int32, CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ToListAsync*
  name: ToListAsync
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ToListAsync_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.ToListAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ToListAsync
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ToListAsync
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ToListAsync
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ToListAsync
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.ToListAsync``1(System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: ToListAsync<T>(Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_ToListAsync__1_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.ExpressiveDbCommandBase`5.ToListAsync``1(System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: ToListAsync(Of T)(Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ToListAsync<T>(System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ToListAsync(Of T)(System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.ToListAsync<T>(Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).ToListAsync(Of T)(Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.UseAsyncRead
  name: UseAsyncRead
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_UseAsyncRead
  commentId: P:Open.Database.Extensions.ExpressiveDbCommandBase`5.UseAsyncRead
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.UseAsyncRead
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).UseAsyncRead
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.UseAsyncRead
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).UseAsyncRead
- uid: Open.Database.Extensions.ExpressiveDbCommandBase`5.UseAsyncRead*
  name: UseAsyncRead
  href: api/Open.Database.Extensions.ExpressiveDbCommandBase-5.html#Open_Database_Extensions_ExpressiveDbCommandBase_5_UseAsyncRead_
  commentId: Overload:Open.Database.Extensions.ExpressiveDbCommandBase`5.UseAsyncRead
  isSpec: "True"
  fullName: Open.Database.Extensions.ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.UseAsyncRead
  fullName.vb: Open.Database.Extensions.ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).UseAsyncRead
  nameWithType: ExpressiveDbCommandBase<TConnection, TCommand, TReader, TDbType, TThis>.UseAsyncRead
  nameWithType.vb: ExpressiveDbCommandBase(Of TConnection, TCommand, TReader, TDbType, TThis).UseAsyncRead
- uid: Open.Database.Extensions.IDbConnectionFactory
  name: IDbConnectionFactory
  href: api/Open.Database.Extensions.IDbConnectionFactory.html
  commentId: T:Open.Database.Extensions.IDbConnectionFactory
  fullName: Open.Database.Extensions.IDbConnectionFactory
  nameWithType: IDbConnectionFactory
- uid: Open.Database.Extensions.IDbConnectionFactory.Create
  name: Create()
  href: api/Open.Database.Extensions.IDbConnectionFactory.html#Open_Database_Extensions_IDbConnectionFactory_Create
  commentId: M:Open.Database.Extensions.IDbConnectionFactory.Create
  fullName: Open.Database.Extensions.IDbConnectionFactory.Create()
  nameWithType: IDbConnectionFactory.Create()
- uid: Open.Database.Extensions.IDbConnectionFactory.Create*
  name: Create
  href: api/Open.Database.Extensions.IDbConnectionFactory.html#Open_Database_Extensions_IDbConnectionFactory_Create_
  commentId: Overload:Open.Database.Extensions.IDbConnectionFactory.Create
  isSpec: "True"
  fullName: Open.Database.Extensions.IDbConnectionFactory.Create
  nameWithType: IDbConnectionFactory.Create
- uid: Open.Database.Extensions.IDbConnectionFactory`1
  name: IDbConnectionFactory<TConnection>
  href: api/Open.Database.Extensions.IDbConnectionFactory-1.html
  commentId: T:Open.Database.Extensions.IDbConnectionFactory`1
  name.vb: IDbConnectionFactory(Of TConnection)
  fullName: Open.Database.Extensions.IDbConnectionFactory<TConnection>
  fullName.vb: Open.Database.Extensions.IDbConnectionFactory(Of TConnection)
  nameWithType: IDbConnectionFactory<TConnection>
  nameWithType.vb: IDbConnectionFactory(Of TConnection)
- uid: Open.Database.Extensions.IDbConnectionFactory`1.Create
  name: Create()
  href: api/Open.Database.Extensions.IDbConnectionFactory-1.html#Open_Database_Extensions_IDbConnectionFactory_1_Create
  commentId: M:Open.Database.Extensions.IDbConnectionFactory`1.Create
  fullName: Open.Database.Extensions.IDbConnectionFactory<TConnection>.Create()
  fullName.vb: Open.Database.Extensions.IDbConnectionFactory(Of TConnection).Create()
  nameWithType: IDbConnectionFactory<TConnection>.Create()
  nameWithType.vb: IDbConnectionFactory(Of TConnection).Create()
- uid: Open.Database.Extensions.IDbConnectionFactory`1.Create*
  name: Create
  href: api/Open.Database.Extensions.IDbConnectionFactory-1.html#Open_Database_Extensions_IDbConnectionFactory_1_Create_
  commentId: Overload:Open.Database.Extensions.IDbConnectionFactory`1.Create
  isSpec: "True"
  fullName: Open.Database.Extensions.IDbConnectionFactory<TConnection>.Create
  fullName.vb: Open.Database.Extensions.IDbConnectionFactory(Of TConnection).Create
  nameWithType: IDbConnectionFactory<TConnection>.Create
  nameWithType.vb: IDbConnectionFactory(Of TConnection).Create
- uid: Open.Database.Extensions.IDbConnectionPool
  name: IDbConnectionPool
  href: api/Open.Database.Extensions.IDbConnectionPool.html
  commentId: T:Open.Database.Extensions.IDbConnectionPool
  fullName: Open.Database.Extensions.IDbConnectionPool
  nameWithType: IDbConnectionPool
- uid: Open.Database.Extensions.IDbConnectionPool.Give(System.Data.IDbConnection)
  name: Give(IDbConnection)
  href: api/Open.Database.Extensions.IDbConnectionPool.html#Open_Database_Extensions_IDbConnectionPool_Give_System_Data_IDbConnection_
  commentId: M:Open.Database.Extensions.IDbConnectionPool.Give(System.Data.IDbConnection)
  fullName: Open.Database.Extensions.IDbConnectionPool.Give(System.Data.IDbConnection)
  nameWithType: IDbConnectionPool.Give(IDbConnection)
- uid: Open.Database.Extensions.IDbConnectionPool.Give*
  name: Give
  href: api/Open.Database.Extensions.IDbConnectionPool.html#Open_Database_Extensions_IDbConnectionPool_Give_
  commentId: Overload:Open.Database.Extensions.IDbConnectionPool.Give
  isSpec: "True"
  fullName: Open.Database.Extensions.IDbConnectionPool.Give
  nameWithType: IDbConnectionPool.Give
- uid: Open.Database.Extensions.IDbConnectionPool.Take
  name: Take()
  href: api/Open.Database.Extensions.IDbConnectionPool.html#Open_Database_Extensions_IDbConnectionPool_Take
  commentId: M:Open.Database.Extensions.IDbConnectionPool.Take
  fullName: Open.Database.Extensions.IDbConnectionPool.Take()
  nameWithType: IDbConnectionPool.Take()
- uid: Open.Database.Extensions.IDbConnectionPool.Take*
  name: Take
  href: api/Open.Database.Extensions.IDbConnectionPool.html#Open_Database_Extensions_IDbConnectionPool_Take_
  commentId: Overload:Open.Database.Extensions.IDbConnectionPool.Take
  isSpec: "True"
  fullName: Open.Database.Extensions.IDbConnectionPool.Take
  nameWithType: IDbConnectionPool.Take
- uid: Open.Database.Extensions.IDbConnectionPool`1
  name: IDbConnectionPool<TConnection>
  href: api/Open.Database.Extensions.IDbConnectionPool-1.html
  commentId: T:Open.Database.Extensions.IDbConnectionPool`1
  name.vb: IDbConnectionPool(Of TConnection)
  fullName: Open.Database.Extensions.IDbConnectionPool<TConnection>
  fullName.vb: Open.Database.Extensions.IDbConnectionPool(Of TConnection)
  nameWithType: IDbConnectionPool<TConnection>
  nameWithType.vb: IDbConnectionPool(Of TConnection)
- uid: Open.Database.Extensions.IDbConnectionPool`1.Take
  name: Take()
  href: api/Open.Database.Extensions.IDbConnectionPool-1.html#Open_Database_Extensions_IDbConnectionPool_1_Take
  commentId: M:Open.Database.Extensions.IDbConnectionPool`1.Take
  fullName: Open.Database.Extensions.IDbConnectionPool<TConnection>.Take()
  fullName.vb: Open.Database.Extensions.IDbConnectionPool(Of TConnection).Take()
  nameWithType: IDbConnectionPool<TConnection>.Take()
  nameWithType.vb: IDbConnectionPool(Of TConnection).Take()
- uid: Open.Database.Extensions.IDbConnectionPool`1.Take*
  name: Take
  href: api/Open.Database.Extensions.IDbConnectionPool-1.html#Open_Database_Extensions_IDbConnectionPool_1_Take_
  commentId: Overload:Open.Database.Extensions.IDbConnectionPool`1.Take
  isSpec: "True"
  fullName: Open.Database.Extensions.IDbConnectionPool<TConnection>.Take
  fullName.vb: Open.Database.Extensions.IDbConnectionPool(Of TConnection).Take
  nameWithType: IDbConnectionPool<TConnection>.Take
  nameWithType.vb: IDbConnectionPool(Of TConnection).Take
- uid: Open.Database.Extensions.IExecuteCommand
  name: IExecuteCommand
  href: api/Open.Database.Extensions.IExecuteCommand.html
  commentId: T:Open.Database.Extensions.IExecuteCommand
  fullName: Open.Database.Extensions.IExecuteCommand
  nameWithType: IExecuteCommand
- uid: Open.Database.Extensions.IExecuteCommand.Execute(System.Action{System.Data.IDbCommand})
  name: Execute(Action<IDbCommand>)
  href: api/Open.Database.Extensions.IExecuteCommand.html#Open_Database_Extensions_IExecuteCommand_Execute_System_Action_System_Data_IDbCommand__
  commentId: M:Open.Database.Extensions.IExecuteCommand.Execute(System.Action{System.Data.IDbCommand})
  name.vb: Execute(Action(Of IDbCommand))
  fullName: Open.Database.Extensions.IExecuteCommand.Execute(System.Action<System.Data.IDbCommand>)
  fullName.vb: Open.Database.Extensions.IExecuteCommand.Execute(System.Action(Of System.Data.IDbCommand))
  nameWithType: IExecuteCommand.Execute(Action<IDbCommand>)
  nameWithType.vb: IExecuteCommand.Execute(Action(Of IDbCommand))
- uid: Open.Database.Extensions.IExecuteCommand.Execute*
  name: Execute
  href: api/Open.Database.Extensions.IExecuteCommand.html#Open_Database_Extensions_IExecuteCommand_Execute_
  commentId: Overload:Open.Database.Extensions.IExecuteCommand.Execute
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteCommand.Execute
  nameWithType: IExecuteCommand.Execute
- uid: Open.Database.Extensions.IExecuteCommand.Execute``1(System.Func{System.Data.IDbCommand,``0})
  name: Execute<T>(Func<IDbCommand, T>)
  href: api/Open.Database.Extensions.IExecuteCommand.html#Open_Database_Extensions_IExecuteCommand_Execute__1_System_Func_System_Data_IDbCommand___0__
  commentId: M:Open.Database.Extensions.IExecuteCommand.Execute``1(System.Func{System.Data.IDbCommand,``0})
  name.vb: Execute(Of T)(Func(Of IDbCommand, T))
  fullName: Open.Database.Extensions.IExecuteCommand.Execute<T>(System.Func<System.Data.IDbCommand, T>)
  fullName.vb: Open.Database.Extensions.IExecuteCommand.Execute(Of T)(System.Func(Of System.Data.IDbCommand, T))
  nameWithType: IExecuteCommand.Execute<T>(Func<IDbCommand, T>)
  nameWithType.vb: IExecuteCommand.Execute(Of T)(Func(Of IDbCommand, T))
- uid: Open.Database.Extensions.IExecuteCommand.ExecuteAsync(System.Func{System.Data.IDbCommand,System.Threading.Tasks.ValueTask})
  name: ExecuteAsync(Func<IDbCommand, ValueTask>)
  href: api/Open.Database.Extensions.IExecuteCommand.html#Open_Database_Extensions_IExecuteCommand_ExecuteAsync_System_Func_System_Data_IDbCommand_System_Threading_Tasks_ValueTask__
  commentId: M:Open.Database.Extensions.IExecuteCommand.ExecuteAsync(System.Func{System.Data.IDbCommand,System.Threading.Tasks.ValueTask})
  name.vb: ExecuteAsync(Func(Of IDbCommand, ValueTask))
  fullName: Open.Database.Extensions.IExecuteCommand.ExecuteAsync(System.Func<System.Data.IDbCommand, System.Threading.Tasks.ValueTask>)
  fullName.vb: Open.Database.Extensions.IExecuteCommand.ExecuteAsync(System.Func(Of System.Data.IDbCommand, System.Threading.Tasks.ValueTask))
  nameWithType: IExecuteCommand.ExecuteAsync(Func<IDbCommand, ValueTask>)
  nameWithType.vb: IExecuteCommand.ExecuteAsync(Func(Of IDbCommand, ValueTask))
- uid: Open.Database.Extensions.IExecuteCommand.ExecuteAsync*
  name: ExecuteAsync
  href: api/Open.Database.Extensions.IExecuteCommand.html#Open_Database_Extensions_IExecuteCommand_ExecuteAsync_
  commentId: Overload:Open.Database.Extensions.IExecuteCommand.ExecuteAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteCommand.ExecuteAsync
  nameWithType: IExecuteCommand.ExecuteAsync
- uid: Open.Database.Extensions.IExecuteCommand.ExecuteAsync``1(System.Func{System.Data.IDbCommand,System.Threading.Tasks.ValueTask{``0}})
  name: ExecuteAsync<T>(Func<IDbCommand, ValueTask<T>>)
  href: api/Open.Database.Extensions.IExecuteCommand.html#Open_Database_Extensions_IExecuteCommand_ExecuteAsync__1_System_Func_System_Data_IDbCommand_System_Threading_Tasks_ValueTask___0___
  commentId: M:Open.Database.Extensions.IExecuteCommand.ExecuteAsync``1(System.Func{System.Data.IDbCommand,System.Threading.Tasks.ValueTask{``0}})
  name.vb: ExecuteAsync(Of T)(Func(Of IDbCommand, ValueTask(Of T)))
  fullName: Open.Database.Extensions.IExecuteCommand.ExecuteAsync<T>(System.Func<System.Data.IDbCommand, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.IExecuteCommand.ExecuteAsync(Of T)(System.Func(Of System.Data.IDbCommand, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: IExecuteCommand.ExecuteAsync<T>(Func<IDbCommand, ValueTask<T>>)
  nameWithType.vb: IExecuteCommand.ExecuteAsync(Of T)(Func(Of IDbCommand, ValueTask(Of T)))
- uid: Open.Database.Extensions.IExecuteCommand`1
  name: IExecuteCommand<TCommand>
  href: api/Open.Database.Extensions.IExecuteCommand-1.html
  commentId: T:Open.Database.Extensions.IExecuteCommand`1
  name.vb: IExecuteCommand(Of TCommand)
  fullName: Open.Database.Extensions.IExecuteCommand<TCommand>
  fullName.vb: Open.Database.Extensions.IExecuteCommand(Of TCommand)
  nameWithType: IExecuteCommand<TCommand>
  nameWithType.vb: IExecuteCommand(Of TCommand)
- uid: Open.Database.Extensions.IExecuteCommand`1.Execute(System.Action{`0})
  name: Execute(Action<TCommand>)
  href: api/Open.Database.Extensions.IExecuteCommand-1.html#Open_Database_Extensions_IExecuteCommand_1_Execute_System_Action__0__
  commentId: M:Open.Database.Extensions.IExecuteCommand`1.Execute(System.Action{`0})
  name.vb: Execute(Action(Of TCommand))
  fullName: Open.Database.Extensions.IExecuteCommand<TCommand>.Execute(System.Action<TCommand>)
  fullName.vb: Open.Database.Extensions.IExecuteCommand(Of TCommand).Execute(System.Action(Of TCommand))
  nameWithType: IExecuteCommand<TCommand>.Execute(Action<TCommand>)
  nameWithType.vb: IExecuteCommand(Of TCommand).Execute(Action(Of TCommand))
- uid: Open.Database.Extensions.IExecuteCommand`1.Execute*
  name: Execute
  href: api/Open.Database.Extensions.IExecuteCommand-1.html#Open_Database_Extensions_IExecuteCommand_1_Execute_
  commentId: Overload:Open.Database.Extensions.IExecuteCommand`1.Execute
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteCommand<TCommand>.Execute
  fullName.vb: Open.Database.Extensions.IExecuteCommand(Of TCommand).Execute
  nameWithType: IExecuteCommand<TCommand>.Execute
  nameWithType.vb: IExecuteCommand(Of TCommand).Execute
- uid: Open.Database.Extensions.IExecuteCommand`1.Execute``1(System.Func{`0,``0})
  name: Execute<T>(Func<TCommand, T>)
  href: api/Open.Database.Extensions.IExecuteCommand-1.html#Open_Database_Extensions_IExecuteCommand_1_Execute__1_System_Func__0___0__
  commentId: M:Open.Database.Extensions.IExecuteCommand`1.Execute``1(System.Func{`0,``0})
  name.vb: Execute(Of T)(Func(Of TCommand, T))
  fullName: Open.Database.Extensions.IExecuteCommand<TCommand>.Execute<T>(System.Func<TCommand, T>)
  fullName.vb: Open.Database.Extensions.IExecuteCommand(Of TCommand).Execute(Of T)(System.Func(Of TCommand, T))
  nameWithType: IExecuteCommand<TCommand>.Execute<T>(Func<TCommand, T>)
  nameWithType.vb: IExecuteCommand(Of TCommand).Execute(Of T)(Func(Of TCommand, T))
- uid: Open.Database.Extensions.IExecuteCommand`1.ExecuteAsync(System.Func{`0,System.Threading.Tasks.ValueTask})
  name: ExecuteAsync(Func<TCommand, ValueTask>)
  href: api/Open.Database.Extensions.IExecuteCommand-1.html#Open_Database_Extensions_IExecuteCommand_1_ExecuteAsync_System_Func__0_System_Threading_Tasks_ValueTask__
  commentId: M:Open.Database.Extensions.IExecuteCommand`1.ExecuteAsync(System.Func{`0,System.Threading.Tasks.ValueTask})
  name.vb: ExecuteAsync(Func(Of TCommand, ValueTask))
  fullName: Open.Database.Extensions.IExecuteCommand<TCommand>.ExecuteAsync(System.Func<TCommand, System.Threading.Tasks.ValueTask>)
  fullName.vb: Open.Database.Extensions.IExecuteCommand(Of TCommand).ExecuteAsync(System.Func(Of TCommand, System.Threading.Tasks.ValueTask))
  nameWithType: IExecuteCommand<TCommand>.ExecuteAsync(Func<TCommand, ValueTask>)
  nameWithType.vb: IExecuteCommand(Of TCommand).ExecuteAsync(Func(Of TCommand, ValueTask))
- uid: Open.Database.Extensions.IExecuteCommand`1.ExecuteAsync*
  name: ExecuteAsync
  href: api/Open.Database.Extensions.IExecuteCommand-1.html#Open_Database_Extensions_IExecuteCommand_1_ExecuteAsync_
  commentId: Overload:Open.Database.Extensions.IExecuteCommand`1.ExecuteAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteCommand<TCommand>.ExecuteAsync
  fullName.vb: Open.Database.Extensions.IExecuteCommand(Of TCommand).ExecuteAsync
  nameWithType: IExecuteCommand<TCommand>.ExecuteAsync
  nameWithType.vb: IExecuteCommand(Of TCommand).ExecuteAsync
- uid: Open.Database.Extensions.IExecuteCommand`1.ExecuteAsync``1(System.Func{`0,System.Threading.Tasks.ValueTask{``0}})
  name: ExecuteAsync<T>(Func<TCommand, ValueTask<T>>)
  href: api/Open.Database.Extensions.IExecuteCommand-1.html#Open_Database_Extensions_IExecuteCommand_1_ExecuteAsync__1_System_Func__0_System_Threading_Tasks_ValueTask___0___
  commentId: M:Open.Database.Extensions.IExecuteCommand`1.ExecuteAsync``1(System.Func{`0,System.Threading.Tasks.ValueTask{``0}})
  name.vb: ExecuteAsync(Of T)(Func(Of TCommand, ValueTask(Of T)))
  fullName: Open.Database.Extensions.IExecuteCommand<TCommand>.ExecuteAsync<T>(System.Func<TCommand, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.IExecuteCommand(Of TCommand).ExecuteAsync(Of T)(System.Func(Of TCommand, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: IExecuteCommand<TCommand>.ExecuteAsync<T>(Func<TCommand, ValueTask<T>>)
  nameWithType.vb: IExecuteCommand(Of TCommand).ExecuteAsync(Of T)(Func(Of TCommand, ValueTask(Of T)))
- uid: Open.Database.Extensions.IExecuteReader
  name: IExecuteReader
  href: api/Open.Database.Extensions.IExecuteReader.html
  commentId: T:Open.Database.Extensions.IExecuteReader
  fullName: Open.Database.Extensions.IExecuteReader
  nameWithType: IExecuteReader
- uid: Open.Database.Extensions.IExecuteReader.CancellationToken
  name: CancellationToken
  href: api/Open.Database.Extensions.IExecuteReader.html#Open_Database_Extensions_IExecuteReader_CancellationToken
  commentId: P:Open.Database.Extensions.IExecuteReader.CancellationToken
  fullName: Open.Database.Extensions.IExecuteReader.CancellationToken
  nameWithType: IExecuteReader.CancellationToken
- uid: Open.Database.Extensions.IExecuteReader.CancellationToken*
  name: CancellationToken
  href: api/Open.Database.Extensions.IExecuteReader.html#Open_Database_Extensions_IExecuteReader_CancellationToken_
  commentId: Overload:Open.Database.Extensions.IExecuteReader.CancellationToken
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReader.CancellationToken
  nameWithType: IExecuteReader.CancellationToken
- uid: Open.Database.Extensions.IExecuteReader.ExecuteReader(System.Action{System.Data.IDataReader},System.Data.CommandBehavior)
  name: ExecuteReader(Action<IDataReader>, CommandBehavior)
  href: api/Open.Database.Extensions.IExecuteReader.html#Open_Database_Extensions_IExecuteReader_ExecuteReader_System_Action_System_Data_IDataReader__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.IExecuteReader.ExecuteReader(System.Action{System.Data.IDataReader},System.Data.CommandBehavior)
  name.vb: ExecuteReader(Action(Of IDataReader), CommandBehavior)
  fullName: Open.Database.Extensions.IExecuteReader.ExecuteReader(System.Action<System.Data.IDataReader>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.IExecuteReader.ExecuteReader(System.Action(Of System.Data.IDataReader), System.Data.CommandBehavior)
  nameWithType: IExecuteReader.ExecuteReader(Action<IDataReader>, CommandBehavior)
  nameWithType.vb: IExecuteReader.ExecuteReader(Action(Of IDataReader), CommandBehavior)
- uid: Open.Database.Extensions.IExecuteReader.ExecuteReader*
  name: ExecuteReader
  href: api/Open.Database.Extensions.IExecuteReader.html#Open_Database_Extensions_IExecuteReader_ExecuteReader_
  commentId: Overload:Open.Database.Extensions.IExecuteReader.ExecuteReader
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReader.ExecuteReader
  nameWithType: IExecuteReader.ExecuteReader
- uid: Open.Database.Extensions.IExecuteReader.ExecuteReader``1(System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior)
  name: ExecuteReader<T>(Func<IDataReader, T>, CommandBehavior)
  href: api/Open.Database.Extensions.IExecuteReader.html#Open_Database_Extensions_IExecuteReader_ExecuteReader__1_System_Func_System_Data_IDataReader___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.IExecuteReader.ExecuteReader``1(System.Func{System.Data.IDataReader,``0},System.Data.CommandBehavior)
  name.vb: ExecuteReader(Of T)(Func(Of IDataReader, T), CommandBehavior)
  fullName: Open.Database.Extensions.IExecuteReader.ExecuteReader<T>(System.Func<System.Data.IDataReader, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.IExecuteReader.ExecuteReader(Of T)(System.Func(Of System.Data.IDataReader, T), System.Data.CommandBehavior)
  nameWithType: IExecuteReader.ExecuteReader<T>(Func<IDataReader, T>, CommandBehavior)
  nameWithType.vb: IExecuteReader.ExecuteReader(Of T)(Func(Of IDataReader, T), CommandBehavior)
- uid: Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior)
  name: ExecuteReaderAsync(Func<IDataReader, ValueTask>, CommandBehavior)
  href: api/Open.Database.Extensions.IExecuteReader.html#Open_Database_Extensions_IExecuteReader_ExecuteReaderAsync_System_Func_System_Data_IDataReader_System_Threading_Tasks_ValueTask__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior)
  name.vb: ExecuteReaderAsync(Func(Of IDataReader, ValueTask), CommandBehavior)
  fullName: Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(System.Func<System.Data.IDataReader, System.Threading.Tasks.ValueTask>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(System.Func(Of System.Data.IDataReader, System.Threading.Tasks.ValueTask), System.Data.CommandBehavior)
  nameWithType: IExecuteReader.ExecuteReaderAsync(Func<IDataReader, ValueTask>, CommandBehavior)
  nameWithType.vb: IExecuteReader.ExecuteReaderAsync(Func(Of IDataReader, ValueTask), CommandBehavior)
- uid: Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync*
  name: ExecuteReaderAsync
  href: api/Open.Database.Extensions.IExecuteReader.html#Open_Database_Extensions_IExecuteReader_ExecuteReaderAsync_
  commentId: Overload:Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync
  nameWithType: IExecuteReader.ExecuteReaderAsync
- uid: Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync``1(System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior)
  name: ExecuteReaderAsync<T>(Func<IDataReader, ValueTask<T>>, CommandBehavior)
  href: api/Open.Database.Extensions.IExecuteReader.html#Open_Database_Extensions_IExecuteReader_ExecuteReaderAsync__1_System_Func_System_Data_IDataReader_System_Threading_Tasks_ValueTask___0___System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync``1(System.Func{System.Data.IDataReader,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior)
  name.vb: ExecuteReaderAsync(Of T)(Func(Of IDataReader, ValueTask(Of T)), CommandBehavior)
  fullName: Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync<T>(System.Func<System.Data.IDataReader, System.Threading.Tasks.ValueTask<T>>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.IExecuteReader.ExecuteReaderAsync(Of T)(System.Func(Of System.Data.IDataReader, System.Threading.Tasks.ValueTask(Of T)), System.Data.CommandBehavior)
  nameWithType: IExecuteReader.ExecuteReaderAsync<T>(Func<IDataReader, ValueTask<T>>, CommandBehavior)
  nameWithType.vb: IExecuteReader.ExecuteReaderAsync(Of T)(Func(Of IDataReader, ValueTask(Of T)), CommandBehavior)
- uid: Open.Database.Extensions.IExecuteReader`1
  name: IExecuteReader<TReader>
  href: api/Open.Database.Extensions.IExecuteReader-1.html
  commentId: T:Open.Database.Extensions.IExecuteReader`1
  name.vb: IExecuteReader(Of TReader)
  fullName: Open.Database.Extensions.IExecuteReader<TReader>
  fullName.vb: Open.Database.Extensions.IExecuteReader(Of TReader)
  nameWithType: IExecuteReader<TReader>
  nameWithType.vb: IExecuteReader(Of TReader)
- uid: Open.Database.Extensions.IExecuteReader`1.ExecuteReader(System.Action{`0},System.Data.CommandBehavior)
  name: ExecuteReader(Action<TReader>, CommandBehavior)
  href: api/Open.Database.Extensions.IExecuteReader-1.html#Open_Database_Extensions_IExecuteReader_1_ExecuteReader_System_Action__0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.IExecuteReader`1.ExecuteReader(System.Action{`0},System.Data.CommandBehavior)
  name.vb: ExecuteReader(Action(Of TReader), CommandBehavior)
  fullName: Open.Database.Extensions.IExecuteReader<TReader>.ExecuteReader(System.Action<TReader>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.IExecuteReader(Of TReader).ExecuteReader(System.Action(Of TReader), System.Data.CommandBehavior)
  nameWithType: IExecuteReader<TReader>.ExecuteReader(Action<TReader>, CommandBehavior)
  nameWithType.vb: IExecuteReader(Of TReader).ExecuteReader(Action(Of TReader), CommandBehavior)
- uid: Open.Database.Extensions.IExecuteReader`1.ExecuteReader*
  name: ExecuteReader
  href: api/Open.Database.Extensions.IExecuteReader-1.html#Open_Database_Extensions_IExecuteReader_1_ExecuteReader_
  commentId: Overload:Open.Database.Extensions.IExecuteReader`1.ExecuteReader
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReader<TReader>.ExecuteReader
  fullName.vb: Open.Database.Extensions.IExecuteReader(Of TReader).ExecuteReader
  nameWithType: IExecuteReader<TReader>.ExecuteReader
  nameWithType.vb: IExecuteReader(Of TReader).ExecuteReader
- uid: Open.Database.Extensions.IExecuteReader`1.ExecuteReader``1(System.Func{`0,``0},System.Data.CommandBehavior)
  name: ExecuteReader<T>(Func<TReader, T>, CommandBehavior)
  href: api/Open.Database.Extensions.IExecuteReader-1.html#Open_Database_Extensions_IExecuteReader_1_ExecuteReader__1_System_Func__0___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.IExecuteReader`1.ExecuteReader``1(System.Func{`0,``0},System.Data.CommandBehavior)
  name.vb: ExecuteReader(Of T)(Func(Of TReader, T), CommandBehavior)
  fullName: Open.Database.Extensions.IExecuteReader<TReader>.ExecuteReader<T>(System.Func<TReader, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.IExecuteReader(Of TReader).ExecuteReader(Of T)(System.Func(Of TReader, T), System.Data.CommandBehavior)
  nameWithType: IExecuteReader<TReader>.ExecuteReader<T>(Func<TReader, T>, CommandBehavior)
  nameWithType.vb: IExecuteReader(Of TReader).ExecuteReader(Of T)(Func(Of TReader, T), CommandBehavior)
- uid: Open.Database.Extensions.IExecuteReader`1.ExecuteReaderAsync(System.Func{`0,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior)
  name: ExecuteReaderAsync(Func<TReader, ValueTask>, CommandBehavior)
  href: api/Open.Database.Extensions.IExecuteReader-1.html#Open_Database_Extensions_IExecuteReader_1_ExecuteReaderAsync_System_Func__0_System_Threading_Tasks_ValueTask__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.IExecuteReader`1.ExecuteReaderAsync(System.Func{`0,System.Threading.Tasks.ValueTask},System.Data.CommandBehavior)
  name.vb: ExecuteReaderAsync(Func(Of TReader, ValueTask), CommandBehavior)
  fullName: Open.Database.Extensions.IExecuteReader<TReader>.ExecuteReaderAsync(System.Func<TReader, System.Threading.Tasks.ValueTask>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.IExecuteReader(Of TReader).ExecuteReaderAsync(System.Func(Of TReader, System.Threading.Tasks.ValueTask), System.Data.CommandBehavior)
  nameWithType: IExecuteReader<TReader>.ExecuteReaderAsync(Func<TReader, ValueTask>, CommandBehavior)
  nameWithType.vb: IExecuteReader(Of TReader).ExecuteReaderAsync(Func(Of TReader, ValueTask), CommandBehavior)
- uid: Open.Database.Extensions.IExecuteReader`1.ExecuteReaderAsync*
  name: ExecuteReaderAsync
  href: api/Open.Database.Extensions.IExecuteReader-1.html#Open_Database_Extensions_IExecuteReader_1_ExecuteReaderAsync_
  commentId: Overload:Open.Database.Extensions.IExecuteReader`1.ExecuteReaderAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReader<TReader>.ExecuteReaderAsync
  fullName.vb: Open.Database.Extensions.IExecuteReader(Of TReader).ExecuteReaderAsync
  nameWithType: IExecuteReader<TReader>.ExecuteReaderAsync
  nameWithType.vb: IExecuteReader(Of TReader).ExecuteReaderAsync
- uid: Open.Database.Extensions.IExecuteReader`1.ExecuteReaderAsync``1(System.Func{`0,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior)
  name: ExecuteReaderAsync<T>(Func<TReader, ValueTask<T>>, CommandBehavior)
  href: api/Open.Database.Extensions.IExecuteReader-1.html#Open_Database_Extensions_IExecuteReader_1_ExecuteReaderAsync__1_System_Func__0_System_Threading_Tasks_ValueTask___0___System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.IExecuteReader`1.ExecuteReaderAsync``1(System.Func{`0,System.Threading.Tasks.ValueTask{``0}},System.Data.CommandBehavior)
  name.vb: ExecuteReaderAsync(Of T)(Func(Of TReader, ValueTask(Of T)), CommandBehavior)
  fullName: Open.Database.Extensions.IExecuteReader<TReader>.ExecuteReaderAsync<T>(System.Func<TReader, System.Threading.Tasks.ValueTask<T>>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.IExecuteReader(Of TReader).ExecuteReaderAsync(Of T)(System.Func(Of TReader, System.Threading.Tasks.ValueTask(Of T)), System.Data.CommandBehavior)
  nameWithType: IExecuteReader<TReader>.ExecuteReaderAsync<T>(Func<TReader, ValueTask<T>>, CommandBehavior)
  nameWithType.vb: IExecuteReader(Of TReader).ExecuteReaderAsync(Of T)(Func(Of TReader, ValueTask(Of T)), CommandBehavior)
- uid: Open.Database.Extensions.IExecuteReaderAsync
  name: IExecuteReaderAsync
  href: api/Open.Database.Extensions.IExecuteReaderAsync.html
  commentId: T:Open.Database.Extensions.IExecuteReaderAsync
  fullName: Open.Database.Extensions.IExecuteReaderAsync
  nameWithType: IExecuteReaderAsync
- uid: Open.Database.Extensions.IExecuteReaderAsync.UseAsyncRead
  name: UseAsyncRead
  href: api/Open.Database.Extensions.IExecuteReaderAsync.html#Open_Database_Extensions_IExecuteReaderAsync_UseAsyncRead
  commentId: P:Open.Database.Extensions.IExecuteReaderAsync.UseAsyncRead
  fullName: Open.Database.Extensions.IExecuteReaderAsync.UseAsyncRead
  nameWithType: IExecuteReaderAsync.UseAsyncRead
- uid: Open.Database.Extensions.IExecuteReaderAsync.UseAsyncRead*
  name: UseAsyncRead
  href: api/Open.Database.Extensions.IExecuteReaderAsync.html#Open_Database_Extensions_IExecuteReaderAsync_UseAsyncRead_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderAsync.UseAsyncRead
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderAsync.UseAsyncRead
  nameWithType: IExecuteReaderAsync.UseAsyncRead
- uid: Open.Database.Extensions.IExecuteReaderAsync`1
  name: IExecuteReaderAsync<TReader>
  href: api/Open.Database.Extensions.IExecuteReaderAsync-1.html
  commentId: T:Open.Database.Extensions.IExecuteReaderAsync`1
  name.vb: IExecuteReaderAsync(Of TReader)
  fullName: Open.Database.Extensions.IExecuteReaderAsync<TReader>
  fullName.vb: Open.Database.Extensions.IExecuteReaderAsync(Of TReader)
  nameWithType: IExecuteReaderAsync<TReader>
  nameWithType.vb: IExecuteReaderAsync(Of TReader)
- uid: Open.Database.Extensions.IExecuteReaderExtensions
  name: IExecuteReaderExtensions
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html
  commentId: T:Open.Database.Extensions.IExecuteReaderExtensions
  fullName: Open.Database.Extensions.IExecuteReaderExtensions
  nameWithType: IExecuteReaderExtensions
- uid: Open.Database.Extensions.IExecuteReaderExtensions.First*
  name: First
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_First_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.First
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.First
  nameWithType: IExecuteReaderExtensions.First
- uid: Open.Database.Extensions.IExecuteReaderExtensions.First``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0})
  name: First<T>(IExecuteReader, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_First__1_Open_Database_Extensions_IExecuteReader_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.First``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0})
  name.vb: First(Of T)(IExecuteReader, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.First<T>(Open.Database.Extensions.IExecuteReader, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.First(Of T)(Open.Database.Extensions.IExecuteReader, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: IExecuteReaderExtensions.First<T>(IExecuteReader, Func<IDataRecord, T>)
  nameWithType.vb: IExecuteReaderExtensions.First(Of T)(IExecuteReader, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrDefault*
  name: FirstOrDefault
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_FirstOrDefault_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.FirstOrDefault
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrDefault
  nameWithType: IExecuteReaderExtensions.FirstOrDefault
- uid: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrDefault``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0})
  name: FirstOrDefault<T>(IExecuteReader, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_FirstOrDefault__1_Open_Database_Extensions_IExecuteReader_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.FirstOrDefault``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0})
  name.vb: FirstOrDefault(Of T)(IExecuteReader, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrDefault<T>(Open.Database.Extensions.IExecuteReader, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrDefault(Of T)(Open.Database.Extensions.IExecuteReader, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: IExecuteReaderExtensions.FirstOrDefault<T>(IExecuteReader, Func<IDataRecord, T>)
  nameWithType.vb: IExecuteReaderExtensions.FirstOrDefault(Of T)(IExecuteReader, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrdinalResults(Open.Database.Extensions.IExecuteReader)
  name: FirstOrdinalResults(IExecuteReader)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_FirstOrdinalResults_Open_Database_Extensions_IExecuteReader_
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.FirstOrdinalResults(Open.Database.Extensions.IExecuteReader)
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrdinalResults(Open.Database.Extensions.IExecuteReader)
  nameWithType: IExecuteReaderExtensions.FirstOrdinalResults(IExecuteReader)
- uid: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrdinalResults*
  name: FirstOrdinalResults
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_FirstOrdinalResults_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.FirstOrdinalResults
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrdinalResults
  nameWithType: IExecuteReaderExtensions.FirstOrdinalResults
- uid: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrdinalResults``1(Open.Database.Extensions.IExecuteReader)
  name: FirstOrdinalResults<T0>(IExecuteReader)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_FirstOrdinalResults__1_Open_Database_Extensions_IExecuteReader_
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.FirstOrdinalResults``1(Open.Database.Extensions.IExecuteReader)
  name.vb: FirstOrdinalResults(Of T0)(IExecuteReader)
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrdinalResults<T0>(Open.Database.Extensions.IExecuteReader)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.FirstOrdinalResults(Of T0)(Open.Database.Extensions.IExecuteReader)
  nameWithType: IExecuteReaderExtensions.FirstOrdinalResults<T0>(IExecuteReader)
  nameWithType.vb: IExecuteReaderExtensions.FirstOrdinalResults(Of T0)(IExecuteReader)
- uid: Open.Database.Extensions.IExecuteReaderExtensions.IterateReader*
  name: IterateReader
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_IterateReader_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.IterateReader
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.IterateReader
  nameWithType: IExecuteReaderExtensions.IterateReader
- uid: Open.Database.Extensions.IExecuteReaderExtensions.IterateReader``1(Open.Database.Extensions.IExecuteReader,System.Action{System.Data.IDataRecord})
  name: IterateReader<TReader>(IExecuteReader, Action<IDataRecord>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_IterateReader__1_Open_Database_Extensions_IExecuteReader_System_Action_System_Data_IDataRecord__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.IterateReader``1(Open.Database.Extensions.IExecuteReader,System.Action{System.Data.IDataRecord})
  name.vb: IterateReader(Of TReader)(IExecuteReader, Action(Of IDataRecord))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.IterateReader<TReader>(Open.Database.Extensions.IExecuteReader, System.Action<System.Data.IDataRecord>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.IterateReader(Of TReader)(Open.Database.Extensions.IExecuteReader, System.Action(Of System.Data.IDataRecord))
  nameWithType: IExecuteReaderExtensions.IterateReader<TReader>(IExecuteReader, Action<IDataRecord>)
  nameWithType.vb: IExecuteReaderExtensions.IterateReader(Of TReader)(IExecuteReader, Action(Of IDataRecord))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.IterateReader``2(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})
  name: IterateReader<TEntity, TResult>(IExecuteReader, Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_IterateReader__2_Open_Database_Extensions_IExecuteReader_System_Func_System_Data_IDataRecord___0__System_Func_System_Collections_Generic_IEnumerable___0____1__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.IterateReader``2(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0},System.Func{System.Collections.Generic.IEnumerable{``0},``1})
  name.vb: IterateReader(Of TEntity, TResult)(IExecuteReader, Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.IterateReader<TEntity, TResult>(Open.Database.Extensions.IExecuteReader, System.Func<System.Data.IDataRecord, TEntity>, System.Func<System.Collections.Generic.IEnumerable<TEntity>, TResult>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.IterateReader(Of TEntity, TResult)(Open.Database.Extensions.IExecuteReader, System.Func(Of System.Data.IDataRecord, TEntity), System.Func(Of System.Collections.Generic.IEnumerable(Of TEntity), TResult))
  nameWithType: IExecuteReaderExtensions.IterateReader<TEntity, TResult>(IExecuteReader, Func<IDataRecord, TEntity>, Func<IEnumerable<TEntity>, TResult>)
  nameWithType.vb: IExecuteReaderExtensions.IterateReader(Of TEntity, TResult)(IExecuteReader, Func(Of IDataRecord, TEntity), Func(Of IEnumerable(Of TEntity), TResult))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderAsync(Open.Database.Extensions.IExecuteReaderAsync,System.Action{System.Data.IDataRecord})
  name: IterateReaderAsync(IExecuteReaderAsync, Action<IDataRecord>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_IterateReaderAsync_Open_Database_Extensions_IExecuteReaderAsync_System_Action_System_Data_IDataRecord__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderAsync(Open.Database.Extensions.IExecuteReaderAsync,System.Action{System.Data.IDataRecord})
  name.vb: IterateReaderAsync(IExecuteReaderAsync, Action(Of IDataRecord))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderAsync(Open.Database.Extensions.IExecuteReaderAsync, System.Action<System.Data.IDataRecord>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderAsync(Open.Database.Extensions.IExecuteReaderAsync, System.Action(Of System.Data.IDataRecord))
  nameWithType: IExecuteReaderExtensions.IterateReaderAsync(IExecuteReaderAsync, Action<IDataRecord>)
  nameWithType.vb: IExecuteReaderExtensions.IterateReaderAsync(IExecuteReaderAsync, Action(Of IDataRecord))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderAsync*
  name: IterateReaderAsync
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_IterateReaderAsync_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderAsync
  nameWithType: IExecuteReaderExtensions.IterateReaderAsync
- uid: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhile(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,System.Boolean})
  name: IterateReaderWhile(IExecuteReader, Func<IDataRecord, Boolean>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_IterateReaderWhile_Open_Database_Extensions_IExecuteReader_System_Func_System_Data_IDataRecord_System_Boolean__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhile(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,System.Boolean})
  name.vb: IterateReaderWhile(IExecuteReader, Func(Of IDataRecord, Boolean))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhile(Open.Database.Extensions.IExecuteReader, System.Func<System.Data.IDataRecord, System.Boolean>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhile(Open.Database.Extensions.IExecuteReader, System.Func(Of System.Data.IDataRecord, System.Boolean))
  nameWithType: IExecuteReaderExtensions.IterateReaderWhile(IExecuteReader, Func<IDataRecord, Boolean>)
  nameWithType.vb: IExecuteReaderExtensions.IterateReaderWhile(IExecuteReader, Func(Of IDataRecord, Boolean))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhile*
  name: IterateReaderWhile
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_IterateReaderWhile_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhile
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhile
  nameWithType: IExecuteReaderExtensions.IterateReaderWhile
- uid: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhileAsync(Open.Database.Extensions.IExecuteReaderAsync,System.Func{System.Data.IDataRecord,System.Boolean})
  name: IterateReaderWhileAsync(IExecuteReaderAsync, Func<IDataRecord, Boolean>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_IterateReaderWhileAsync_Open_Database_Extensions_IExecuteReaderAsync_System_Func_System_Data_IDataRecord_System_Boolean__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhileAsync(Open.Database.Extensions.IExecuteReaderAsync,System.Func{System.Data.IDataRecord,System.Boolean})
  name.vb: IterateReaderWhileAsync(IExecuteReaderAsync, Func(Of IDataRecord, Boolean))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhileAsync(Open.Database.Extensions.IExecuteReaderAsync, System.Func<System.Data.IDataRecord, System.Boolean>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhileAsync(Open.Database.Extensions.IExecuteReaderAsync, System.Func(Of System.Data.IDataRecord, System.Boolean))
  nameWithType: IExecuteReaderExtensions.IterateReaderWhileAsync(IExecuteReaderAsync, Func<IDataRecord, Boolean>)
  nameWithType.vb: IExecuteReaderExtensions.IterateReaderWhileAsync(IExecuteReaderAsync, Func(Of IDataRecord, Boolean))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhileAsync(Open.Database.Extensions.IExecuteReaderAsync,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{System.Boolean}})
  name: IterateReaderWhileAsync(IExecuteReaderAsync, Func<IDataRecord, ValueTask<Boolean>>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_IterateReaderWhileAsync_Open_Database_Extensions_IExecuteReaderAsync_System_Func_System_Data_IDataRecord_System_Threading_Tasks_ValueTask_System_Boolean___
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhileAsync(Open.Database.Extensions.IExecuteReaderAsync,System.Func{System.Data.IDataRecord,System.Threading.Tasks.ValueTask{System.Boolean}})
  name.vb: IterateReaderWhileAsync(IExecuteReaderAsync, Func(Of IDataRecord, ValueTask(Of Boolean)))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhileAsync(Open.Database.Extensions.IExecuteReaderAsync, System.Func<System.Data.IDataRecord, System.Threading.Tasks.ValueTask<System.Boolean>>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhileAsync(Open.Database.Extensions.IExecuteReaderAsync, System.Func(Of System.Data.IDataRecord, System.Threading.Tasks.ValueTask(Of System.Boolean)))
  nameWithType: IExecuteReaderExtensions.IterateReaderWhileAsync(IExecuteReaderAsync, Func<IDataRecord, ValueTask<Boolean>>)
  nameWithType.vb: IExecuteReaderExtensions.IterateReaderWhileAsync(IExecuteReaderAsync, Func(Of IDataRecord, ValueTask(Of Boolean)))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhileAsync*
  name: IterateReaderWhileAsync
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_IterateReaderWhileAsync_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhileAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.IterateReaderWhileAsync
  nameWithType: IExecuteReaderExtensions.IterateReaderWhileAsync
- uid: Open.Database.Extensions.IExecuteReaderExtensions.LoadTable(Open.Database.Extensions.IExecuteReader)
  name: LoadTable(IExecuteReader)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_LoadTable_Open_Database_Extensions_IExecuteReader_
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.LoadTable(Open.Database.Extensions.IExecuteReader)
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.LoadTable(Open.Database.Extensions.IExecuteReader)
  nameWithType: IExecuteReaderExtensions.LoadTable(IExecuteReader)
- uid: Open.Database.Extensions.IExecuteReaderExtensions.LoadTable*
  name: LoadTable
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_LoadTable_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.LoadTable
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.LoadTable
  nameWithType: IExecuteReaderExtensions.LoadTable
- uid: Open.Database.Extensions.IExecuteReaderExtensions.LoadTables(Open.Database.Extensions.IExecuteReader)
  name: LoadTables(IExecuteReader)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_LoadTables_Open_Database_Extensions_IExecuteReader_
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.LoadTables(Open.Database.Extensions.IExecuteReader)
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.LoadTables(Open.Database.Extensions.IExecuteReader)
  nameWithType: IExecuteReaderExtensions.LoadTables(IExecuteReader)
- uid: Open.Database.Extensions.IExecuteReaderExtensions.LoadTables*
  name: LoadTables
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_LoadTables_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.LoadTables
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.LoadTables
  nameWithType: IExecuteReaderExtensions.LoadTables
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Results*
  name: Results
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Results_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.Results
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Results
  nameWithType: IExecuteReaderExtensions.Results
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Results``1(Open.Database.Extensions.IExecuteReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name: Results<T>(IExecuteReader, IEnumerable<KeyValuePair<String, String>>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Results__1_Open_Database_Extensions_IExecuteReader_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_String_System_String___
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.Results``1(Open.Database.Extensions.IExecuteReader,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  name.vb: Results(Of T)(IExecuteReader, IEnumerable(Of KeyValuePair(Of String, String)))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Results<T>(Open.Database.Extensions.IExecuteReader, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.Results(Of T)(Open.Database.Extensions.IExecuteReader, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  nameWithType: IExecuteReaderExtensions.Results<T>(IExecuteReader, IEnumerable<KeyValuePair<String, String>>)
  nameWithType.vb: IExecuteReaderExtensions.Results(Of T)(IExecuteReader, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Results``1(Open.Database.Extensions.IExecuteReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name: Results<T>(IExecuteReader, IEnumerable<(String Field, String Column)>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Results__1_Open_Database_Extensions_IExecuteReader_System_Collections_Generic_IEnumerable_System_ValueTuple_System_String_System_String___
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.Results``1(Open.Database.Extensions.IExecuteReader,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}})
  name.vb: Results(Of T)(IExecuteReader, IEnumerable(Of (Field As String, Column As String)))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Results<T>(Open.Database.Extensions.IExecuteReader, System.Collections.Generic.IEnumerable<System.ValueTuple<System.String, System.String>>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.Results(Of T)(Open.Database.Extensions.IExecuteReader, System.Collections.Generic.IEnumerable(Of System.ValueTuple(Of System.String, System.String)))
  nameWithType: IExecuteReaderExtensions.Results<T>(IExecuteReader, IEnumerable<(String Field, String Column)>)
  nameWithType.vb: IExecuteReaderExtensions.Results(Of T)(IExecuteReader, IEnumerable(Of (Field As String, Column As String)))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Results``1(Open.Database.Extensions.IExecuteReader,System.ValueTuple{System.String,System.String}[])
  name: Results<T>(IExecuteReader, (String Field, String Column)[])
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Results__1_Open_Database_Extensions_IExecuteReader_System_ValueTuple_System_String_System_String____
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.Results``1(Open.Database.Extensions.IExecuteReader,System.ValueTuple{System.String,System.String}[])
  name.vb: Results(Of T)(IExecuteReader, (Field As String, Column As String)())
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Results<T>(Open.Database.Extensions.IExecuteReader, System.ValueTuple<System.String, System.String>[])
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.Results(Of T)(Open.Database.Extensions.IExecuteReader, System.ValueTuple(Of System.String, System.String)())
  nameWithType: IExecuteReaderExtensions.Results<T>(IExecuteReader, (String Field, String Column)[])
  nameWithType.vb: IExecuteReaderExtensions.Results(Of T)(IExecuteReader, (Field As String, Column As String)())
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader)
  name: Retrieve(IExecuteReader)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Retrieve_Open_Database_Extensions_IExecuteReader_
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader)
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader)
  nameWithType: IExecuteReaderExtensions.Retrieve(IExecuteReader)
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader,System.Collections.Generic.IEnumerable{System.Int32})
  name: Retrieve(IExecuteReader, IEnumerable<Int32>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Retrieve_Open_Database_Extensions_IExecuteReader_System_Collections_Generic_IEnumerable_System_Int32__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader,System.Collections.Generic.IEnumerable{System.Int32})
  name.vb: Retrieve(IExecuteReader, IEnumerable(Of Int32))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader, System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader, System.Collections.Generic.IEnumerable(Of System.Int32))
  nameWithType: IExecuteReaderExtensions.Retrieve(IExecuteReader, IEnumerable<Int32>)
  nameWithType.vb: IExecuteReaderExtensions.Retrieve(IExecuteReader, IEnumerable(Of Int32))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader,System.Collections.Generic.IEnumerable{System.String})
  name: Retrieve(IExecuteReader, IEnumerable<String>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Retrieve_Open_Database_Extensions_IExecuteReader_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader,System.Collections.Generic.IEnumerable{System.String})
  name.vb: Retrieve(IExecuteReader, IEnumerable(Of String))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader, System.Collections.Generic.IEnumerable<System.String>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader, System.Collections.Generic.IEnumerable(Of System.String))
  nameWithType: IExecuteReaderExtensions.Retrieve(IExecuteReader, IEnumerable<String>)
  nameWithType.vb: IExecuteReaderExtensions.Retrieve(IExecuteReader, IEnumerable(Of String))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader,System.Int32,System.Int32[])
  name: Retrieve(IExecuteReader, Int32, Int32[])
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Retrieve_Open_Database_Extensions_IExecuteReader_System_Int32_System_Int32___
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader,System.Int32,System.Int32[])
  name.vb: Retrieve(IExecuteReader, Int32, Int32())
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader, System.Int32, System.Int32[])
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader, System.Int32, System.Int32())
  nameWithType: IExecuteReaderExtensions.Retrieve(IExecuteReader, Int32, Int32[])
  nameWithType.vb: IExecuteReaderExtensions.Retrieve(IExecuteReader, Int32, Int32())
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader,System.String,System.String[])
  name: Retrieve(IExecuteReader, String, String[])
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Retrieve_Open_Database_Extensions_IExecuteReader_System_String_System_String___
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader,System.String,System.String[])
  name.vb: Retrieve(IExecuteReader, String, String())
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader, System.String, System.String[])
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve(Open.Database.Extensions.IExecuteReader, System.String, System.String())
  nameWithType: IExecuteReaderExtensions.Retrieve(IExecuteReader, String, String[])
  nameWithType.vb: IExecuteReaderExtensions.Retrieve(IExecuteReader, String, String())
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve*
  name: Retrieve
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Retrieve_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.Retrieve
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Retrieve
  nameWithType: IExecuteReaderExtensions.Retrieve
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Single*
  name: Single
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Single_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.Single
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Single
  nameWithType: IExecuteReaderExtensions.Single
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Single``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0})
  name: Single<T>(IExecuteReader, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Single__1_Open_Database_Extensions_IExecuteReader_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.Single``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0})
  name.vb: Single(Of T)(IExecuteReader, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Single<T>(Open.Database.Extensions.IExecuteReader, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.Single(Of T)(Open.Database.Extensions.IExecuteReader, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: IExecuteReaderExtensions.Single<T>(IExecuteReader, Func<IDataRecord, T>)
  nameWithType.vb: IExecuteReaderExtensions.Single(Of T)(IExecuteReader, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.SingleOrDefault*
  name: SingleOrDefault
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_SingleOrDefault_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.SingleOrDefault
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.SingleOrDefault
  nameWithType: IExecuteReaderExtensions.SingleOrDefault
- uid: Open.Database.Extensions.IExecuteReaderExtensions.SingleOrDefault``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0})
  name: SingleOrDefault<T>(IExecuteReader, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_SingleOrDefault__1_Open_Database_Extensions_IExecuteReader_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.SingleOrDefault``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0})
  name.vb: SingleOrDefault(Of T)(IExecuteReader, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.SingleOrDefault<T>(Open.Database.Extensions.IExecuteReader, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.SingleOrDefault(Of T)(Open.Database.Extensions.IExecuteReader, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: IExecuteReaderExtensions.SingleOrDefault<T>(IExecuteReader, Func<IDataRecord, T>)
  nameWithType.vb: IExecuteReaderExtensions.SingleOrDefault(Of T)(IExecuteReader, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Skip*
  name: Skip
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Skip_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.Skip
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Skip
  nameWithType: IExecuteReaderExtensions.Skip
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Skip``1(Open.Database.Extensions.IExecuteReader,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name: Skip<T>(IExecuteReader, Int32, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Skip__1_Open_Database_Extensions_IExecuteReader_System_Int32_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.Skip``1(Open.Database.Extensions.IExecuteReader,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name.vb: Skip(Of T)(IExecuteReader, Int32, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Skip<T>(Open.Database.Extensions.IExecuteReader, System.Int32, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.Skip(Of T)(Open.Database.Extensions.IExecuteReader, System.Int32, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: IExecuteReaderExtensions.Skip<T>(IExecuteReader, Int32, Func<IDataRecord, T>)
  nameWithType.vb: IExecuteReaderExtensions.Skip(Of T)(IExecuteReader, Int32, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.SkipThenTake*
  name: SkipThenTake
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_SkipThenTake_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.SkipThenTake
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.SkipThenTake
  nameWithType: IExecuteReaderExtensions.SkipThenTake
- uid: Open.Database.Extensions.IExecuteReaderExtensions.SkipThenTake``1(Open.Database.Extensions.IExecuteReader,System.Int32,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name: SkipThenTake<T>(IExecuteReader, Int32, Int32, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_SkipThenTake__1_Open_Database_Extensions_IExecuteReader_System_Int32_System_Int32_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.SkipThenTake``1(Open.Database.Extensions.IExecuteReader,System.Int32,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name.vb: SkipThenTake(Of T)(IExecuteReader, Int32, Int32, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.SkipThenTake<T>(Open.Database.Extensions.IExecuteReader, System.Int32, System.Int32, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.SkipThenTake(Of T)(Open.Database.Extensions.IExecuteReader, System.Int32, System.Int32, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: IExecuteReaderExtensions.SkipThenTake<T>(IExecuteReader, Int32, Int32, Func<IDataRecord, T>)
  nameWithType.vb: IExecuteReaderExtensions.SkipThenTake(Of T)(IExecuteReader, Int32, Int32, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Take*
  name: Take
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Take_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.Take
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Take
  nameWithType: IExecuteReaderExtensions.Take
- uid: Open.Database.Extensions.IExecuteReaderExtensions.Take``1(Open.Database.Extensions.IExecuteReader,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name: Take<T>(IExecuteReader, Int32, Func<IDataRecord, T>)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_Take__1_Open_Database_Extensions_IExecuteReader_System_Int32_System_Func_System_Data_IDataRecord___0__
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.Take``1(Open.Database.Extensions.IExecuteReader,System.Int32,System.Func{System.Data.IDataRecord,``0})
  name.vb: Take(Of T)(IExecuteReader, Int32, Func(Of IDataRecord, T))
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.Take<T>(Open.Database.Extensions.IExecuteReader, System.Int32, System.Func<System.Data.IDataRecord, T>)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.Take(Of T)(Open.Database.Extensions.IExecuteReader, System.Int32, System.Func(Of System.Data.IDataRecord, T))
  nameWithType: IExecuteReaderExtensions.Take<T>(IExecuteReader, Int32, Func<IDataRecord, T>)
  nameWithType.vb: IExecuteReaderExtensions.Take(Of T)(IExecuteReader, Int32, Func(Of IDataRecord, T))
- uid: Open.Database.Extensions.IExecuteReaderExtensions.ToArray*
  name: ToArray
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_ToArray_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.ToArray
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.ToArray
  nameWithType: IExecuteReaderExtensions.ToArray
- uid: Open.Database.Extensions.IExecuteReaderExtensions.ToArray``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: ToArray<T>(IExecuteReader, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_ToArray__1_Open_Database_Extensions_IExecuteReader_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.ToArray``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: ToArray(Of T)(IExecuteReader, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.ToArray<T>(Open.Database.Extensions.IExecuteReader, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.ToArray(Of T)(Open.Database.Extensions.IExecuteReader, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: IExecuteReaderExtensions.ToArray<T>(IExecuteReader, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: IExecuteReaderExtensions.ToArray(Of T)(IExecuteReader, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.IExecuteReaderExtensions.ToImmutableArray*
  name: ToImmutableArray
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_ToImmutableArray_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.ToImmutableArray
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.ToImmutableArray
  nameWithType: IExecuteReaderExtensions.ToImmutableArray
- uid: Open.Database.Extensions.IExecuteReaderExtensions.ToImmutableArray``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: ToImmutableArray<T>(IExecuteReader, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_ToImmutableArray__1_Open_Database_Extensions_IExecuteReader_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.ToImmutableArray``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: ToImmutableArray(Of T)(IExecuteReader, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.ToImmutableArray<T>(Open.Database.Extensions.IExecuteReader, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.ToImmutableArray(Of T)(Open.Database.Extensions.IExecuteReader, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: IExecuteReaderExtensions.ToImmutableArray<T>(IExecuteReader, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: IExecuteReaderExtensions.ToImmutableArray(Of T)(IExecuteReader, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.IExecuteReaderExtensions.ToList*
  name: ToList
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_ToList_
  commentId: Overload:Open.Database.Extensions.IExecuteReaderExtensions.ToList
  isSpec: "True"
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.ToList
  nameWithType: IExecuteReaderExtensions.ToList
- uid: Open.Database.Extensions.IExecuteReaderExtensions.ToList``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name: ToList<T>(IExecuteReader, Func<IDataRecord, T>, CommandBehavior)
  href: api/Open.Database.Extensions.IExecuteReaderExtensions.html#Open_Database_Extensions_IExecuteReaderExtensions_ToList__1_Open_Database_Extensions_IExecuteReader_System_Func_System_Data_IDataRecord___0__System_Data_CommandBehavior_
  commentId: M:Open.Database.Extensions.IExecuteReaderExtensions.ToList``1(Open.Database.Extensions.IExecuteReader,System.Func{System.Data.IDataRecord,``0},System.Data.CommandBehavior)
  name.vb: ToList(Of T)(IExecuteReader, Func(Of IDataRecord, T), CommandBehavior)
  fullName: Open.Database.Extensions.IExecuteReaderExtensions.ToList<T>(Open.Database.Extensions.IExecuteReader, System.Func<System.Data.IDataRecord, T>, System.Data.CommandBehavior)
  fullName.vb: Open.Database.Extensions.IExecuteReaderExtensions.ToList(Of T)(Open.Database.Extensions.IExecuteReader, System.Func(Of System.Data.IDataRecord, T), System.Data.CommandBehavior)
  nameWithType: IExecuteReaderExtensions.ToList<T>(IExecuteReader, Func<IDataRecord, T>, CommandBehavior)
  nameWithType.vb: IExecuteReaderExtensions.ToList(Of T)(IExecuteReader, Func(Of IDataRecord, T), CommandBehavior)
- uid: Open.Database.Extensions.TransactionExtensions
  name: TransactionExtensions
  href: api/Open.Database.Extensions.TransactionExtensions.html
  commentId: T:Open.Database.Extensions.TransactionExtensions
  fullName: Open.Database.Extensions.TransactionExtensions
  nameWithType: TransactionExtensions
- uid: Open.Database.Extensions.TransactionExtensions.CreateCommand(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.Int32)
  name: CreateCommand(DbTransaction, CommandType, String, Int32)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_CreateCommand_System_Data_Common_DbTransaction_System_Data_CommandType_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.TransactionExtensions.CreateCommand(System.Data.Common.DbTransaction,System.Data.CommandType,System.String,System.Int32)
  fullName: Open.Database.Extensions.TransactionExtensions.CreateCommand(System.Data.Common.DbTransaction, System.Data.CommandType, System.String, System.Int32)
  nameWithType: TransactionExtensions.CreateCommand(DbTransaction, CommandType, String, Int32)
- uid: Open.Database.Extensions.TransactionExtensions.CreateCommand(System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Int32)
  name: CreateCommand(IDbTransaction, CommandType, String, Int32)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_CreateCommand_System_Data_IDbTransaction_System_Data_CommandType_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.TransactionExtensions.CreateCommand(System.Data.IDbTransaction,System.Data.CommandType,System.String,System.Int32)
  fullName: Open.Database.Extensions.TransactionExtensions.CreateCommand(System.Data.IDbTransaction, System.Data.CommandType, System.String, System.Int32)
  nameWithType: TransactionExtensions.CreateCommand(IDbTransaction, CommandType, String, Int32)
- uid: Open.Database.Extensions.TransactionExtensions.CreateCommand*
  name: CreateCommand
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_CreateCommand_
  commentId: Overload:Open.Database.Extensions.TransactionExtensions.CreateCommand
  isSpec: "True"
  fullName: Open.Database.Extensions.TransactionExtensions.CreateCommand
  nameWithType: TransactionExtensions.CreateCommand
- uid: Open.Database.Extensions.TransactionExtensions.CreateStoredProcedureCommand(System.Data.Common.DbTransaction,System.String,System.Int32)
  name: CreateStoredProcedureCommand(DbTransaction, String, Int32)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_CreateStoredProcedureCommand_System_Data_Common_DbTransaction_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.TransactionExtensions.CreateStoredProcedureCommand(System.Data.Common.DbTransaction,System.String,System.Int32)
  fullName: Open.Database.Extensions.TransactionExtensions.CreateStoredProcedureCommand(System.Data.Common.DbTransaction, System.String, System.Int32)
  nameWithType: TransactionExtensions.CreateStoredProcedureCommand(DbTransaction, String, Int32)
- uid: Open.Database.Extensions.TransactionExtensions.CreateStoredProcedureCommand(System.Data.IDbTransaction,System.String,System.Int32)
  name: CreateStoredProcedureCommand(IDbTransaction, String, Int32)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_CreateStoredProcedureCommand_System_Data_IDbTransaction_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.TransactionExtensions.CreateStoredProcedureCommand(System.Data.IDbTransaction,System.String,System.Int32)
  fullName: Open.Database.Extensions.TransactionExtensions.CreateStoredProcedureCommand(System.Data.IDbTransaction, System.String, System.Int32)
  nameWithType: TransactionExtensions.CreateStoredProcedureCommand(IDbTransaction, String, Int32)
- uid: Open.Database.Extensions.TransactionExtensions.CreateStoredProcedureCommand*
  name: CreateStoredProcedureCommand
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_CreateStoredProcedureCommand_
  commentId: Overload:Open.Database.Extensions.TransactionExtensions.CreateStoredProcedureCommand
  isSpec: "True"
  fullName: Open.Database.Extensions.TransactionExtensions.CreateStoredProcedureCommand
  nameWithType: TransactionExtensions.CreateStoredProcedureCommand
- uid: Open.Database.Extensions.TransactionExtensions.CreateTextCommand(System.Data.Common.DbTransaction,System.String,System.Int32)
  name: CreateTextCommand(DbTransaction, String, Int32)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_CreateTextCommand_System_Data_Common_DbTransaction_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.TransactionExtensions.CreateTextCommand(System.Data.Common.DbTransaction,System.String,System.Int32)
  fullName: Open.Database.Extensions.TransactionExtensions.CreateTextCommand(System.Data.Common.DbTransaction, System.String, System.Int32)
  nameWithType: TransactionExtensions.CreateTextCommand(DbTransaction, String, Int32)
- uid: Open.Database.Extensions.TransactionExtensions.CreateTextCommand(System.Data.IDbTransaction,System.String,System.Int32)
  name: CreateTextCommand(IDbTransaction, String, Int32)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_CreateTextCommand_System_Data_IDbTransaction_System_String_System_Int32_
  commentId: M:Open.Database.Extensions.TransactionExtensions.CreateTextCommand(System.Data.IDbTransaction,System.String,System.Int32)
  fullName: Open.Database.Extensions.TransactionExtensions.CreateTextCommand(System.Data.IDbTransaction, System.String, System.Int32)
  nameWithType: TransactionExtensions.CreateTextCommand(IDbTransaction, String, Int32)
- uid: Open.Database.Extensions.TransactionExtensions.CreateTextCommand*
  name: CreateTextCommand
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_CreateTextCommand_
  commentId: Overload:Open.Database.Extensions.TransactionExtensions.CreateTextCommand
  isSpec: "True"
  fullName: Open.Database.Extensions.TransactionExtensions.CreateTextCommand
  nameWithType: TransactionExtensions.CreateTextCommand
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbTransaction},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name: ExecuteTransaction(DbConnection, Action<DbTransaction>, IsolationLevel, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransaction_System_Data_Common_DbConnection_System_Action_System_Data_Common_DbTransaction__System_Data_IsolationLevel_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection,System.Action{System.Data.Common.DbTransaction},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name.vb: ExecuteTransaction(DbConnection, Action(Of DbTransaction), IsolationLevel, CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection, System.Action<System.Data.Common.DbTransaction>, System.Data.IsolationLevel, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection, System.Action(Of System.Data.Common.DbTransaction), System.Data.IsolationLevel, System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransaction(DbConnection, Action<DbTransaction>, IsolationLevel, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransaction(DbConnection, Action(Of DbTransaction), IsolationLevel, CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Action{System.Data.Common.DbTransaction},System.Threading.CancellationToken)
  name: ExecuteTransaction(DbConnection, IsolationLevel, Action<DbTransaction>, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransaction_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Action_System_Data_Common_DbTransaction__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Action{System.Data.Common.DbTransaction},System.Threading.CancellationToken)
  name.vb: ExecuteTransaction(DbConnection, IsolationLevel, Action(Of DbTransaction), CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Action<System.Data.Common.DbTransaction>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Action(Of System.Data.Common.DbTransaction), System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransaction(DbConnection, IsolationLevel, Action<DbTransaction>, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransaction(DbConnection, IsolationLevel, Action(Of DbTransaction), CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Action{System.Data.Common.DbTransaction})
  name: ExecuteTransaction(DbConnection, IsolationLevel, CancellationToken, Action<DbTransaction>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransaction_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Threading_CancellationToken_System_Action_System_Data_Common_DbTransaction__
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Action{System.Data.Common.DbTransaction})
  name.vb: ExecuteTransaction(DbConnection, IsolationLevel, CancellationToken, Action(Of DbTransaction))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Action<System.Data.Common.DbTransaction>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Action(Of System.Data.Common.DbTransaction))
  nameWithType: TransactionExtensions.ExecuteTransaction(DbConnection, IsolationLevel, CancellationToken, Action<DbTransaction>)
  nameWithType.vb: TransactionExtensions.ExecuteTransaction(DbConnection, IsolationLevel, CancellationToken, Action(Of DbTransaction))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Action{System.Data.Common.DbTransaction})
  name: ExecuteTransaction(DbConnection, CancellationToken, Action<DbTransaction>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransaction_System_Data_Common_DbConnection_System_Threading_CancellationToken_System_Action_System_Data_Common_DbTransaction__
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Action{System.Data.Common.DbTransaction})
  name.vb: ExecuteTransaction(DbConnection, CancellationToken, Action(Of DbTransaction))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Action<System.Data.Common.DbTransaction>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Action(Of System.Data.Common.DbTransaction))
  nameWithType: TransactionExtensions.ExecuteTransaction(DbConnection, CancellationToken, Action<DbTransaction>)
  nameWithType.vb: TransactionExtensions.ExecuteTransaction(DbConnection, CancellationToken, Action(Of DbTransaction))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction*
  name: ExecuteTransaction
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransaction_
  commentId: Overload:Open.Database.Extensions.TransactionExtensions.ExecuteTransaction
  isSpec: "True"
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction
  nameWithType: TransactionExtensions.ExecuteTransaction
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,``0},System.Threading.CancellationToken)
  name: ExecuteTransaction<T>(DbConnection, IsolationLevel, Func<DbTransaction, T>, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransaction__1_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Func_System_Data_Common_DbTransaction___0__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransaction``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,``0},System.Threading.CancellationToken)
  name.vb: ExecuteTransaction(Of T)(DbConnection, IsolationLevel, Func(Of DbTransaction, T), CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction<T>(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func<System.Data.Common.DbTransaction, T>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(Of T)(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func(Of System.Data.Common.DbTransaction, T), System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransaction<T>(DbConnection, IsolationLevel, Func<DbTransaction, T>, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransaction(Of T)(DbConnection, IsolationLevel, Func(Of DbTransaction, T), CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,``0})
  name: ExecuteTransaction<T>(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, T>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransaction__1_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction___0__
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransaction``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,``0})
  name.vb: ExecuteTransaction(Of T)(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, T))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction<T>(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, T>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(Of T)(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, T))
  nameWithType: TransactionExtensions.ExecuteTransaction<T>(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, T>)
  nameWithType.vb: TransactionExtensions.ExecuteTransaction(Of T)(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, T))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction``1(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,``0},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name: ExecuteTransaction<T>(DbConnection, Func<DbTransaction, T>, IsolationLevel, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransaction__1_System_Data_Common_DbConnection_System_Func_System_Data_Common_DbTransaction___0__System_Data_IsolationLevel_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransaction``1(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,``0},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name.vb: ExecuteTransaction(Of T)(DbConnection, Func(Of DbTransaction, T), IsolationLevel, CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction<T>(System.Data.Common.DbConnection, System.Func<System.Data.Common.DbTransaction, T>, System.Data.IsolationLevel, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(Of T)(System.Data.Common.DbConnection, System.Func(Of System.Data.Common.DbTransaction, T), System.Data.IsolationLevel, System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransaction<T>(DbConnection, Func<DbTransaction, T>, IsolationLevel, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransaction(Of T)(DbConnection, Func(Of DbTransaction, T), IsolationLevel, CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction``1(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,``0})
  name: ExecuteTransaction<T>(DbConnection, CancellationToken, Func<DbTransaction, T>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransaction__1_System_Data_Common_DbConnection_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction___0__
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransaction``1(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,``0})
  name.vb: ExecuteTransaction(Of T)(DbConnection, CancellationToken, Func(Of DbTransaction, T))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction<T>(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, T>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransaction(Of T)(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, T))
  nameWithType: TransactionExtensions.ExecuteTransaction<T>(DbConnection, CancellationToken, Func<DbTransaction, T>)
  nameWithType.vb: TransactionExtensions.ExecuteTransaction(Of T)(DbConnection, CancellationToken, Func(Of DbTransaction, T))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name: ExecuteTransactionAsync(DbConnection, IsolationLevel, Func<DbTransaction, ValueTask>, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionAsync_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask},System.Threading.CancellationToken)
  name.vb: ExecuteTransactionAsync(DbConnection, IsolationLevel, Func(Of DbTransaction, ValueTask), CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask), System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionAsync(DbConnection, IsolationLevel, Func<DbTransaction, ValueTask>, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionAsync(DbConnection, IsolationLevel, Func(Of DbTransaction, ValueTask), CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask})
  name: ExecuteTransactionAsync(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, ValueTask>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionAsync_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask__
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask})
  name.vb: ExecuteTransactionAsync(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, ValueTask))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask))
  nameWithType: TransactionExtensions.ExecuteTransactionAsync(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, ValueTask>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionAsync(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, ValueTask))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name: ExecuteTransactionAsync(DbConnection, Func<DbTransaction, ValueTask>, IsolationLevel, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionAsync_System_Data_Common_DbConnection_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask__System_Data_IsolationLevel_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name.vb: ExecuteTransactionAsync(DbConnection, Func(Of DbTransaction, ValueTask), IsolationLevel, CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask>, System.Data.IsolationLevel, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask), System.Data.IsolationLevel, System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionAsync(DbConnection, Func<DbTransaction, ValueTask>, IsolationLevel, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionAsync(DbConnection, Func(Of DbTransaction, ValueTask), IsolationLevel, CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask})
  name: ExecuteTransactionAsync(DbConnection, CancellationToken, Func<DbTransaction, ValueTask>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionAsync_System_Data_Common_DbConnection_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask__
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask})
  name.vb: ExecuteTransactionAsync(DbConnection, CancellationToken, Func(Of DbTransaction, ValueTask))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask))
  nameWithType: TransactionExtensions.ExecuteTransactionAsync(DbConnection, CancellationToken, Func<DbTransaction, ValueTask>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionAsync(DbConnection, CancellationToken, Func(Of DbTransaction, ValueTask))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync*
  name: ExecuteTransactionAsync
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionAsync_
  commentId: Overload:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync
  nameWithType: TransactionExtensions.ExecuteTransactionAsync
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{``0}},System.Threading.CancellationToken)
  name: ExecuteTransactionAsync<T>(DbConnection, IsolationLevel, Func<DbTransaction, ValueTask<T>>, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionAsync__1_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask___0___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{``0}},System.Threading.CancellationToken)
  name.vb: ExecuteTransactionAsync(Of T)(DbConnection, IsolationLevel, Func(Of DbTransaction, ValueTask(Of T)), CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync<T>(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<T>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(Of T)(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of T)), System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionAsync<T>(DbConnection, IsolationLevel, Func<DbTransaction, ValueTask<T>>, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionAsync(Of T)(DbConnection, IsolationLevel, Func(Of DbTransaction, ValueTask(Of T)), CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{``0}})
  name: ExecuteTransactionAsync<T>(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, ValueTask<T>>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionAsync__1_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask___0___
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{``0}})
  name.vb: ExecuteTransactionAsync(Of T)(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, ValueTask(Of T)))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync<T>(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(Of T)(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: TransactionExtensions.ExecuteTransactionAsync<T>(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, ValueTask<T>>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionAsync(Of T)(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, ValueTask(Of T)))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync``1(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{``0}},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name: ExecuteTransactionAsync<T>(DbConnection, Func<DbTransaction, ValueTask<T>>, IsolationLevel, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionAsync__1_System_Data_Common_DbConnection_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask___0___System_Data_IsolationLevel_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync``1(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{``0}},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name.vb: ExecuteTransactionAsync(Of T)(DbConnection, Func(Of DbTransaction, ValueTask(Of T)), IsolationLevel, CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync<T>(System.Data.Common.DbConnection, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<T>>, System.Data.IsolationLevel, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(Of T)(System.Data.Common.DbConnection, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of T)), System.Data.IsolationLevel, System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionAsync<T>(DbConnection, Func<DbTransaction, ValueTask<T>>, IsolationLevel, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionAsync(Of T)(DbConnection, Func(Of DbTransaction, ValueTask(Of T)), IsolationLevel, CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync``1(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{``0}})
  name: ExecuteTransactionAsync<T>(DbConnection, CancellationToken, Func<DbTransaction, ValueTask<T>>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionAsync__1_System_Data_Common_DbConnection_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask___0___
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync``1(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{``0}})
  name.vb: ExecuteTransactionAsync(Of T)(DbConnection, CancellationToken, Func(Of DbTransaction, ValueTask(Of T)))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync<T>(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<T>>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionAsync(Of T)(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of T)))
  nameWithType: TransactionExtensions.ExecuteTransactionAsync<T>(DbConnection, CancellationToken, Func<DbTransaction, ValueTask<T>>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionAsync(Of T)(DbConnection, CancellationToken, Func(Of DbTransaction, ValueTask(Of T)))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.Boolean},System.Threading.CancellationToken)
  name: ExecuteTransactionConditional(DbConnection, IsolationLevel, Func<DbTransaction, Boolean>, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditional_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Func_System_Data_Common_DbTransaction_System_Boolean__System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.Boolean},System.Threading.CancellationToken)
  name.vb: ExecuteTransactionConditional(DbConnection, IsolationLevel, Func(Of DbTransaction, Boolean), CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func<System.Data.Common.DbTransaction, System.Boolean>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func(Of System.Data.Common.DbTransaction, System.Boolean), System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionConditional(DbConnection, IsolationLevel, Func<DbTransaction, Boolean>, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditional(DbConnection, IsolationLevel, Func(Of DbTransaction, Boolean), CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Boolean})
  name: ExecuteTransactionConditional(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, Boolean>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditional_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_Boolean__
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Boolean})
  name.vb: ExecuteTransactionConditional(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, Boolean))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.Boolean>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.Boolean))
  nameWithType: TransactionExtensions.ExecuteTransactionConditional(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, Boolean>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditional(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, Boolean))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.Boolean},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name: ExecuteTransactionConditional(DbConnection, Func<DbTransaction, Boolean>, IsolationLevel, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditional_System_Data_Common_DbConnection_System_Func_System_Data_Common_DbTransaction_System_Boolean__System_Data_IsolationLevel_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.Boolean},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name.vb: ExecuteTransactionConditional(DbConnection, Func(Of DbTransaction, Boolean), IsolationLevel, CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection, System.Func<System.Data.Common.DbTransaction, System.Boolean>, System.Data.IsolationLevel, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection, System.Func(Of System.Data.Common.DbTransaction, System.Boolean), System.Data.IsolationLevel, System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionConditional(DbConnection, Func<DbTransaction, Boolean>, IsolationLevel, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditional(DbConnection, Func(Of DbTransaction, Boolean), IsolationLevel, CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Boolean})
  name: ExecuteTransactionConditional(DbConnection, CancellationToken, Func<DbTransaction, Boolean>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditional_System_Data_Common_DbConnection_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_Boolean__
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Boolean})
  name.vb: ExecuteTransactionConditional(DbConnection, CancellationToken, Func(Of DbTransaction, Boolean))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.Boolean>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.Boolean))
  nameWithType: TransactionExtensions.ExecuteTransactionConditional(DbConnection, CancellationToken, Func<DbTransaction, Boolean>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditional(DbConnection, CancellationToken, Func(Of DbTransaction, Boolean))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional*
  name: ExecuteTransactionConditional
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditional_
  commentId: Overload:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional
  isSpec: "True"
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional
  nameWithType: TransactionExtensions.ExecuteTransactionConditional
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.ValueTuple{System.Boolean,``0}},System.Threading.CancellationToken)
  name: ExecuteTransactionConditional<T>(DbConnection, IsolationLevel, Func<DbTransaction, (Boolean Commit, T Value)>, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditional__1_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Func_System_Data_Common_DbTransaction_System_ValueTuple_System_Boolean___0___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.ValueTuple{System.Boolean,``0}},System.Threading.CancellationToken)
  name.vb: ExecuteTransactionConditional(Of T)(DbConnection, IsolationLevel, Func(Of DbTransaction, (Commit As Boolean, Value As T)), CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional<T>(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func<System.Data.Common.DbTransaction, System.ValueTuple<System.Boolean, T>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(Of T)(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func(Of System.Data.Common.DbTransaction, System.ValueTuple(Of System.Boolean, T)), System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionConditional<T>(DbConnection, IsolationLevel, Func<DbTransaction, (Boolean Commit, T Value)>, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditional(Of T)(DbConnection, IsolationLevel, Func(Of DbTransaction, (Commit As Boolean, Value As T)), CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.ValueTuple{System.Boolean,``0}})
  name: ExecuteTransactionConditional<T>(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, (Boolean Commit, T Value)>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditional__1_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_ValueTuple_System_Boolean___0___
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.ValueTuple{System.Boolean,``0}})
  name.vb: ExecuteTransactionConditional(Of T)(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, (Commit As Boolean, Value As T)))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional<T>(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(Of T)(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: TransactionExtensions.ExecuteTransactionConditional<T>(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, (Boolean Commit, T Value)>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditional(Of T)(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, (Commit As Boolean, Value As T)))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional``1(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.ValueTuple{System.Boolean,``0}},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name: ExecuteTransactionConditional<T>(DbConnection, Func<DbTransaction, (Boolean Commit, T Value)>, IsolationLevel, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditional__1_System_Data_Common_DbConnection_System_Func_System_Data_Common_DbTransaction_System_ValueTuple_System_Boolean___0___System_Data_IsolationLevel_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional``1(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.ValueTuple{System.Boolean,``0}},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name.vb: ExecuteTransactionConditional(Of T)(DbConnection, Func(Of DbTransaction, (Commit As Boolean, Value As T)), IsolationLevel, CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional<T>(System.Data.Common.DbConnection, System.Func<System.Data.Common.DbTransaction, System.ValueTuple<System.Boolean, T>>, System.Data.IsolationLevel, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(Of T)(System.Data.Common.DbConnection, System.Func(Of System.Data.Common.DbTransaction, System.ValueTuple(Of System.Boolean, T)), System.Data.IsolationLevel, System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionConditional<T>(DbConnection, Func<DbTransaction, (Boolean Commit, T Value)>, IsolationLevel, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditional(Of T)(DbConnection, Func(Of DbTransaction, (Commit As Boolean, Value As T)), IsolationLevel, CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional``1(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.ValueTuple{System.Boolean,``0}})
  name: ExecuteTransactionConditional<T>(DbConnection, CancellationToken, Func<DbTransaction, (Boolean Commit, T Value)>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditional__1_System_Data_Common_DbConnection_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_ValueTuple_System_Boolean___0___
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional``1(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.ValueTuple{System.Boolean,``0}})
  name.vb: ExecuteTransactionConditional(Of T)(DbConnection, CancellationToken, Func(Of DbTransaction, (Commit As Boolean, Value As T)))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional<T>(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.ValueTuple<System.Boolean, T>>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditional(Of T)(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.ValueTuple(Of System.Boolean, T)))
  nameWithType: TransactionExtensions.ExecuteTransactionConditional<T>(DbConnection, CancellationToken, Func<DbTransaction, (Boolean Commit, T Value)>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditional(Of T)(DbConnection, CancellationToken, Func(Of DbTransaction, (Commit As Boolean, Value As T)))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.Boolean}},System.Threading.CancellationToken)
  name: ExecuteTransactionConditionalAsync(DbConnection, IsolationLevel, Func<DbTransaction, ValueTask<Boolean>>, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditionalAsync_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask_System_Boolean___System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.Boolean}},System.Threading.CancellationToken)
  name.vb: ExecuteTransactionConditionalAsync(DbConnection, IsolationLevel, Func(Of DbTransaction, ValueTask(Of Boolean)), CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<System.Boolean>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of System.Boolean)), System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionConditionalAsync(DbConnection, IsolationLevel, Func<DbTransaction, ValueTask<Boolean>>, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditionalAsync(DbConnection, IsolationLevel, Func(Of DbTransaction, ValueTask(Of Boolean)), CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.Boolean}})
  name: ExecuteTransactionConditionalAsync(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, ValueTask<Boolean>>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditionalAsync_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask_System_Boolean___
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.Boolean}})
  name.vb: ExecuteTransactionConditionalAsync(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, ValueTask(Of Boolean)))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<System.Boolean>>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of System.Boolean)))
  nameWithType: TransactionExtensions.ExecuteTransactionConditionalAsync(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, ValueTask<Boolean>>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditionalAsync(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, ValueTask(Of Boolean)))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.Boolean}},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name: ExecuteTransactionConditionalAsync(DbConnection, Func<DbTransaction, ValueTask<Boolean>>, IsolationLevel, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditionalAsync_System_Data_Common_DbConnection_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask_System_Boolean___System_Data_IsolationLevel_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.Boolean}},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name.vb: ExecuteTransactionConditionalAsync(DbConnection, Func(Of DbTransaction, ValueTask(Of Boolean)), IsolationLevel, CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<System.Boolean>>, System.Data.IsolationLevel, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of System.Boolean)), System.Data.IsolationLevel, System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionConditionalAsync(DbConnection, Func<DbTransaction, ValueTask<Boolean>>, IsolationLevel, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditionalAsync(DbConnection, Func(Of DbTransaction, ValueTask(Of Boolean)), IsolationLevel, CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.Boolean}})
  name: ExecuteTransactionConditionalAsync(DbConnection, CancellationToken, Func<DbTransaction, ValueTask<Boolean>>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditionalAsync_System_Data_Common_DbConnection_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask_System_Boolean___
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.Boolean}})
  name.vb: ExecuteTransactionConditionalAsync(DbConnection, CancellationToken, Func(Of DbTransaction, ValueTask(Of Boolean)))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<System.Boolean>>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of System.Boolean)))
  nameWithType: TransactionExtensions.ExecuteTransactionConditionalAsync(DbConnection, CancellationToken, Func<DbTransaction, ValueTask<Boolean>>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditionalAsync(DbConnection, CancellationToken, Func(Of DbTransaction, ValueTask(Of Boolean)))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync*
  name: ExecuteTransactionConditionalAsync
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditionalAsync_
  commentId: Overload:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync
  isSpec: "True"
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync
  nameWithType: TransactionExtensions.ExecuteTransactionConditionalAsync
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,``0}}},System.Threading.CancellationToken)
  name: ExecuteTransactionConditionalAsync<T>(DbConnection, IsolationLevel, Func<DbTransaction, ValueTask<(Boolean Commit, T Value)>>, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditionalAsync__1_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask_System_ValueTuple_System_Boolean___0____System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,``0}}},System.Threading.CancellationToken)
  name.vb: ExecuteTransactionConditionalAsync(Of T)(DbConnection, IsolationLevel, Func(Of DbTransaction, ValueTask(Of (Commit As Boolean, Value As T))), CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync<T>(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<System.ValueTuple<System.Boolean, T>>>, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(Of T)(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of System.ValueTuple(Of System.Boolean, T))), System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionConditionalAsync<T>(DbConnection, IsolationLevel, Func<DbTransaction, ValueTask<(Boolean Commit, T Value)>>, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditionalAsync(Of T)(DbConnection, IsolationLevel, Func(Of DbTransaction, ValueTask(Of (Commit As Boolean, Value As T))), CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,``0}}})
  name: ExecuteTransactionConditionalAsync<T>(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, ValueTask<(Boolean Commit, T Value)>>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditionalAsync__1_System_Data_Common_DbConnection_System_Data_IsolationLevel_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask_System_ValueTuple_System_Boolean___0____
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync``1(System.Data.Common.DbConnection,System.Data.IsolationLevel,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,``0}}})
  name.vb: ExecuteTransactionConditionalAsync(Of T)(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, ValueTask(Of (Commit As Boolean, Value As T))))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync<T>(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<System.ValueTuple<System.Boolean, T>>>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(Of T)(System.Data.Common.DbConnection, System.Data.IsolationLevel, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of System.ValueTuple(Of System.Boolean, T))))
  nameWithType: TransactionExtensions.ExecuteTransactionConditionalAsync<T>(DbConnection, IsolationLevel, CancellationToken, Func<DbTransaction, ValueTask<(Boolean Commit, T Value)>>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditionalAsync(Of T)(DbConnection, IsolationLevel, CancellationToken, Func(Of DbTransaction, ValueTask(Of (Commit As Boolean, Value As T))))
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync``1(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,``0}}},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name: ExecuteTransactionConditionalAsync<T>(DbConnection, Func<DbTransaction, ValueTask<(Boolean Commit, T Value)>>, IsolationLevel, CancellationToken)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditionalAsync__1_System_Data_Common_DbConnection_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask_System_ValueTuple_System_Boolean___0____System_Data_IsolationLevel_System_Threading_CancellationToken_
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync``1(System.Data.Common.DbConnection,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,``0}}},System.Data.IsolationLevel,System.Threading.CancellationToken)
  name.vb: ExecuteTransactionConditionalAsync(Of T)(DbConnection, Func(Of DbTransaction, ValueTask(Of (Commit As Boolean, Value As T))), IsolationLevel, CancellationToken)
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync<T>(System.Data.Common.DbConnection, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<System.ValueTuple<System.Boolean, T>>>, System.Data.IsolationLevel, System.Threading.CancellationToken)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(Of T)(System.Data.Common.DbConnection, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of System.ValueTuple(Of System.Boolean, T))), System.Data.IsolationLevel, System.Threading.CancellationToken)
  nameWithType: TransactionExtensions.ExecuteTransactionConditionalAsync<T>(DbConnection, Func<DbTransaction, ValueTask<(Boolean Commit, T Value)>>, IsolationLevel, CancellationToken)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditionalAsync(Of T)(DbConnection, Func(Of DbTransaction, ValueTask(Of (Commit As Boolean, Value As T))), IsolationLevel, CancellationToken)
- uid: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync``1(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,``0}}})
  name: ExecuteTransactionConditionalAsync<T>(DbConnection, CancellationToken, Func<DbTransaction, ValueTask<(Boolean Commit, T Value)>>)
  href: api/Open.Database.Extensions.TransactionExtensions.html#Open_Database_Extensions_TransactionExtensions_ExecuteTransactionConditionalAsync__1_System_Data_Common_DbConnection_System_Threading_CancellationToken_System_Func_System_Data_Common_DbTransaction_System_Threading_Tasks_ValueTask_System_ValueTuple_System_Boolean___0____
  commentId: M:Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync``1(System.Data.Common.DbConnection,System.Threading.CancellationToken,System.Func{System.Data.Common.DbTransaction,System.Threading.Tasks.ValueTask{System.ValueTuple{System.Boolean,``0}}})
  name.vb: ExecuteTransactionConditionalAsync(Of T)(DbConnection, CancellationToken, Func(Of DbTransaction, ValueTask(Of (Commit As Boolean, Value As T))))
  fullName: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync<T>(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func<System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask<System.ValueTuple<System.Boolean, T>>>)
  fullName.vb: Open.Database.Extensions.TransactionExtensions.ExecuteTransactionConditionalAsync(Of T)(System.Data.Common.DbConnection, System.Threading.CancellationToken, System.Func(Of System.Data.Common.DbTransaction, System.Threading.Tasks.ValueTask(Of System.ValueTuple(Of System.Boolean, T))))
  nameWithType: TransactionExtensions.ExecuteTransactionConditionalAsync<T>(DbConnection, CancellationToken, Func<DbTransaction, ValueTask<(Boolean Commit, T Value)>>)
  nameWithType.vb: TransactionExtensions.ExecuteTransactionConditionalAsync(Of T)(DbConnection, CancellationToken, Func(Of DbTransaction, ValueTask(Of (Commit As Boolean, Value As T))))
